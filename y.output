State 8 contains 1 shift/reduce conflict.
State 22 contains 6 shift/reduce conflicts.
State 57 contains 1 shift/reduce conflict.
State 66 contains 1 shift/reduce conflict.
State 68 contains 1 shift/reduce conflict.
State 69 contains 2 shift/reduce conflicts.
State 70 contains 6 shift/reduce conflicts.
State 71 contains 6 shift/reduce conflicts.
State 72 contains 6 shift/reduce conflicts.
State 74 contains 2 shift/reduce conflicts.
State 79 contains 1 shift/reduce conflict.
State 84 contains 1 shift/reduce conflict.
State 87 contains 1 shift/reduce conflict.
State 103 contains 6 shift/reduce conflicts.
State 104 contains 6 shift/reduce conflicts.
State 107 contains 6 shift/reduce conflicts.
State 108 contains 6 shift/reduce conflicts.
State 109 contains 6 shift/reduce conflicts.
State 110 contains 6 shift/reduce conflicts.
State 111 contains 6 shift/reduce conflicts.
State 112 contains 6 shift/reduce conflicts.
State 113 contains 3 shift/reduce conflicts.
State 114 contains 7 shift/reduce conflicts.
State 120 contains 3 shift/reduce conflicts.
State 121 contains 1 shift/reduce conflict.
State 125 contains 1 shift/reduce conflict.
State 144 contains 1 shift/reduce conflict.
State 145 contains 1 shift/reduce conflict.
State 147 contains 24 shift/reduce conflicts.
State 148 contains 24 shift/reduce conflicts.
State 149 contains 24 shift/reduce conflicts.
State 151 contains 1 shift/reduce conflict.
State 152 contains 1 shift/reduce conflict.
State 155 contains 6 shift/reduce conflicts.
State 156 contains 6 shift/reduce conflicts.
State 157 contains 6 shift/reduce conflicts.
State 158 contains 6 shift/reduce conflicts.
State 159 contains 6 shift/reduce conflicts.
State 160 contains 6 shift/reduce conflicts.
State 161 contains 6 shift/reduce conflicts.
State 162 contains 6 shift/reduce conflicts.
State 163 contains 6 shift/reduce conflicts.
State 164 contains 6 shift/reduce conflicts.
State 165 contains 6 shift/reduce conflicts.
State 166 contains 6 shift/reduce conflicts.
State 167 contains 6 shift/reduce conflicts.
State 168 contains 6 shift/reduce conflicts.
State 169 contains 6 shift/reduce conflicts.
State 171 contains 6 shift/reduce conflicts.
State 172 contains 6 shift/reduce conflicts.
State 173 contains 6 shift/reduce conflicts.
State 174 contains 6 shift/reduce conflicts.
State 175 contains 6 shift/reduce conflicts.
State 176 contains 6 shift/reduce conflicts.
State 177 contains 6 shift/reduce conflicts.
State 178 contains 6 shift/reduce conflicts.
State 179 contains 6 shift/reduce conflicts.
State 182 contains 1 shift/reduce conflict.
State 184 contains 1 shift/reduce conflict.
State 185 contains 1 shift/reduce conflict.
State 210 contains 3 shift/reduce conflicts.
State 211 contains 1 shift/reduce conflict.
State 213 contains 1 shift/reduce conflict.
State 217 contains 3 shift/reduce conflicts.
State 218 contains 7 shift/reduce conflicts.
State 221 contains 3 shift/reduce conflicts.
State 234 contains 1 shift/reduce conflict.
State 235 contains 1 shift/reduce conflict.
State 236 contains 1 shift/reduce conflict.
State 237 contains 1 shift/reduce conflict.
State 243 contains 24 shift/reduce conflicts.
State 244 contains 24 shift/reduce conflicts.
State 245 contains 24 shift/reduce conflicts.
State 246 contains 24 shift/reduce conflicts.
State 247 contains 24 shift/reduce conflicts.
State 248 contains 24 shift/reduce conflicts.
State 249 contains 24 shift/reduce conflicts.
State 250 contains 24 shift/reduce conflicts.
State 251 contains 24 shift/reduce conflicts.
State 252 contains 24 shift/reduce conflicts.
State 253 contains 24 shift/reduce conflicts.
State 254 contains 24 shift/reduce conflicts.
State 255 contains 24 shift/reduce conflicts.
State 256 contains 24 shift/reduce conflicts.
State 257 contains 24 shift/reduce conflicts.
State 258 contains 24 shift/reduce conflicts.
State 259 contains 24 shift/reduce conflicts.
State 260 contains 24 shift/reduce conflicts.
State 261 contains 24 shift/reduce conflicts.
State 262 contains 24 shift/reduce conflicts.
State 263 contains 24 shift/reduce conflicts.
State 264 contains 24 shift/reduce conflicts.
State 265 contains 24 shift/reduce conflicts.
State 266 contains 24 shift/reduce conflicts.
State 267 contains 1 shift/reduce conflict.
State 268 contains 1 shift/reduce conflict.
State 277 contains 2 shift/reduce conflicts.
State 278 contains 2 shift/reduce conflicts.
State 286 contains 1 shift/reduce conflict.
State 287 contains 3 shift/reduce conflicts.
State 292 contains 1 shift/reduce conflict.
State 293 contains 1 shift/reduce conflict.
State 307 contains 1 shift/reduce conflict.
State 319 contains 21 shift/reduce conflicts.
State 322 contains 1 shift/reduce conflict.
State 324 contains 1 shift/reduce conflict.
State 327 contains 1 shift/reduce conflict.
State 329 contains 1 shift/reduce conflict.
State 333 contains 1 shift/reduce conflict.
State 337 contains 1 shift/reduce conflict.

Grammar
rule 1    nasl_script ->		/* empty */
rule 2    nasl_script -> lines
rule 3    lines -> line
rule 4    lines -> lines line
rule 5    line -> export
rule 6    line -> function
rule 7    line -> command
rule 8    line -> block
rule 9    export -> EXPORT function
rule 10   function -> FUNCTION identifier '(' parameters ')' block
rule 11   function -> FUNCTION identifier '(' ')' block
rule 12   parameters -> parameter ',' parameters
rule 13   parameters -> parameter
rule 14   parameter -> '&' identifier
rule 15   parameter -> assign
rule 16   parameter -> argument
rule 17   command -> simple
rule 18   command -> compound
rule 19   simple -> assign
rule 20   simple -> call_function ';'
rule 21   simple -> break
rule 22   simple -> continue
rule 23   simple -> return
rule 24   simple -> local
rule 25   simple -> global
rule 26   simple -> inc_dec_exp
rule 27   simple -> rep
rule 28   simple -> import
rule 29   simple -> include
rule 30   simple -> empty
rule 31   break -> BREAK ';'
rule 32   continue -> CONTINUE ';'
rule 33   import -> IMPORT '(' string ')' ';'
rule 34   include -> INCLUDE '(' string ')' ';'
rule 35   return -> RETURN expression ';'
rule 36   return -> RETURN '@' ';'
rule 37   return -> RETURN body ';'
rule 38   empty -> ';'
rule 39   global -> GLOBAL vars ';'
rule 40   local -> LOCAL vars ';'
rule 41   rep -> call_function REP integer ';'
rule 42   rep -> call_function REP identifier ';'
rule 43   call_function -> identifier '(' parameters ')'
rule 44   call_function -> identifier '(' ')'
rule 45   call_function -> identifier body_enum_sq '(' ')'
rule 46   call_function -> identifier body_enum_sq '(' parameters ')'
rule 47   call_function -> identifier body_enum_sq body_enum_p '(' ')'
rule 48   call_function -> identifier body_enum_sq body_enum_p '(' parameters ')'
rule 49   call_function -> identifier body_enum_p '(' ')'
rule 50   call_function -> identifier body_enum_p '(' parameters ')'
rule 51   assign -> '=' value
rule 52   assign -> identifier '=' value
rule 53   assign -> identifier '=' assign
rule 54   assign -> identifier '=' ref
rule 55   assign -> identifier body_enum_sq '=' value
rule 56   assign -> identifier '=' list_int
rule 57   assign -> identifier body_enum_sq '=' list_int
rule 58   assign -> identifier body_enum_sq '=' assign
rule 59   assign -> identifier body_enum_sq '=' ref
rule 60   assign -> assign_math_op
rule 61   assign -> assign_shift_op
rule 62   assign -> '(' assign ')'
rule 63   inc_dec_exp -> INC identifier
rule 64   inc_dec_exp -> DEC identifier
rule 65   inc_dec_exp -> identifier INC
rule 66   inc_dec_exp -> identifier DEC
rule 67   inc_dec_exp -> INC identifier body_enum_sq
rule 68   inc_dec_exp -> DEC identifier body_enum_sq
rule 69   inc_dec_exp -> identifier body_enum_sq INC
rule 70   inc_dec_exp -> identifier body_enum_sq DEC
rule 71   assign_math_op -> identifier ADD_ASS value
rule 72   assign_math_op -> identifier SUB_ASS value
rule 73   assign_math_op -> identifier MUL_ASS value
rule 74   assign_math_op -> identifier DIV_ASS value
rule 75   assign_math_op -> identifier MOD_ASS value
rule 76   assign_shift_op -> identifier SR_ASS value
rule 77   assign_shift_op -> identifier SRR_ASS value
rule 78   assign_shift_op -> identifier SL_ASS value
rule 79   value -> expression
rule 80   identifier -> IDENT
rule 81   identifier -> IN_ITER
rule 82   identifier -> REP
rule 83   integer -> INT
rule 84   integer -> TRUE
rule 85   integer -> FALSE
rule 86   string -> STRING
rule 87   ip -> integer '.' integer '.' integer '.' integer
rule 88   null -> _NULL_
rule 89   ref -> '@' IDENT
rule 90   compound -> for_loop
rule 91   compound -> foreach_loop
rule 92   compound -> repeat_loop
rule 93   compound -> while_loop
rule 94   compound -> if_cond
rule 95   compound -> command ELSE
rule 96   for_loop -> FOR '(' if_expr ';' if_expr ';' if_expr ')' block
rule 97   for_loop -> FOR '(' if_expr ';' if_expr ';' if_expr ')' command
rule 98   foreach_loop -> FOREACH identifier '(' if_expr ')' block
rule 99   foreach_loop -> FOREACH identifier '(' if_expr ')' command
rule 100  foreach_loop -> FOREACH '(' identifier IN_ITER if_expr ')' block
rule 101  foreach_loop -> FOREACH '(' identifier IN_ITER if_expr ')' command
rule 102  repeat_loop -> REPEAT block UNTIL if_expr ';'
rule 103  repeat_loop -> REPEAT command UNTIL if_expr ';'
rule 104  while_loop -> WHILE '(' if_expr ')' block
rule 105  while_loop -> WHILE '(' if_expr ')' command
rule 106  if_expr -> expression
rule 107  if_expr -> assign
rule 108  if_expr -> inc_dec_exp
rule 109  if_cond -> IF '(' if_expr ')' block
rule 110  if_cond -> IF '(' if_expr ')' command
rule 111  if_cond -> IF '(' if_expr ')' block ELSE command
rule 112  if_cond -> IF '(' if_expr ')' command ELSE command
rule 113  if_cond -> IF '(' if_expr ')' block ELSE block
rule 114  if_cond -> IF '(' if_expr ')' command ELSE block
rule 115  block -> '{' '}'
rule 116  block -> '{' lines '}'
rule 117  body -> '{' argument_list '}'
rule 118  body_sq -> '[' ']'
rule 119  body_sq -> '[' argument_list ']'
rule 120  body_sq -> '[' integer ']'
rule 121  body_sq -> '[' identifier ']'
rule 122  body_enum_sq -> body_enum_sq body_sq
rule 123  body_enum_sq -> body_sq
rule 124  body_p -> '.' identifier
rule 125  body_enum_p -> body_enum_p body_p
rule 126  body_enum_p -> body_p
rule 127  var -> identifier '=' value
rule 128  var -> identifier '=' ref
rule 129  var -> identifier
rule 130  vars -> var ',' vars
rule 131  vars -> var
rule 132  list_int -> list_int ',' integer
rule 133  list_int -> integer ',' integer
rule 134  argument_list -> argument_list ',' argument
rule 135  argument_list -> argument
rule 136  argument -> string ':' expression
rule 137  argument -> integer ':' expression
rule 138  argument -> string ':' ref
rule 139  argument -> integer ':' ref
rule 140  argument -> identifier ':' expression
rule 141  argument -> identifier ':' ref
rule 142  argument -> expression
rule 143  argument -> ref
rule 144  expression ->		/* empty */
rule 145  expression -> '(' expression ')'
rule 146  expression -> expression AND expression
rule 147  expression -> '!' expression
rule 148  expression -> expression OR expression
rule 149  expression -> expression '+' expression
rule 150  expression -> expression '-' expression
rule 151  expression -> '-' expression
rule 152  expression -> expression '*' expression
rule 153  expression -> expression POWER expression
rule 154  expression -> expression '/' expression
rule 155  expression -> expression '%' expression
rule 156  expression -> expression '&' expression
rule 157  expression -> expression '^' expression
rule 158  expression -> expression '|' expression
rule 159  expression -> expression SR expression
rule 160  expression -> expression SL expression
rule 161  expression -> expression SRR expression
rule 162  expression -> expression SUBSTR_EQ expression
rule 163  expression -> expression SUBSTR_NEQ expression
rule 164  expression -> expression REGEX_NEQ expression
rule 165  expression -> expression REGEX_EQ expression
rule 166  expression -> expression '<' expression
rule 167  expression -> expression '>' expression
rule 168  expression -> expression CMP_GE expression
rule 169  expression -> expression CMP_LE expression
rule 170  expression -> expression CMP_EQ expression
rule 171  expression -> expression CMP_NEQ expression
rule 172  expression -> identifier body_enum_p
rule 173  expression -> '~' expression
rule 174  expression -> identifier
rule 175  expression -> integer
rule 176  expression -> string
rule 177  expression -> ip
rule 178  expression -> null
rule 179  expression -> body
rule 180  expression -> body_sq
rule 181  expression -> identifier body
rule 182  expression -> identifier body_enum_sq
rule 183  expression -> call_function

Terminals, with rules where they appear

$ (-1)
'!' (33) 147
'%' (37) 155
'&' (38) 14 156
'(' (40) 10 11 33 34 43 44 45 46 47 48 49 50 62 96 97 98 99 100 101
    104 105 109 110 111 112 113 114 145
')' (41) 10 11 33 34 43 44 45 46 47 48 49 50 62 96 97 98 99 100 101
    104 105 109 110 111 112 113 114 145
'*' (42) 152
'+' (43) 149
',' (44) 12 130 132 133 134
'-' (45) 150 151
'.' (46) 87 124
'/' (47) 154
':' (58) 136 137 138 139 140 141
';' (59) 20 31 32 33 34 35 36 37 38 39 40 41 42 96 97 102 103
'<' (60) 166
'=' (61) 51 52 53 54 55 56 57 58 59 127 128
'>' (62) 167
'@' (64) 36 89
'[' (91) 118 119 120 121
']' (93) 118 119 120 121
'^' (94) 157
'{' (123) 115 116 117
'|' (124) 158
'}' (125) 115 116 117
'~' (126) 173
error (256)
FUNCTION (258) 10 11
LOCAL (259) 40
GLOBAL (260) 39
IF (261) 109 110 111 112 113 114
ELSE (262) 95 111 112 113 114
INCLUDE (263) 34
EXPORT (264) 9
IMPORT (265) 33
RETURN (266) 35 36 37
BREAK (267) 31
CONTINUE (268) 32
FOR (269) 96 97
FOREACH (270) 98 99 100 101
IN_ITER (271) 81 100 101
WHILE (272) 104 105
REPEAT (273) 102 103
REP (274) 41 42 82
UNTIL (275) 102 103
IDENT (276) 80 89
INT (277) 83
STRING (278) 86
FALSE (279) 85
_NULL_ (280) 88
TRUE (281) 84
OR (282) 148
AND (283) 146
ADD_ASS (284) 71
SUB_ASS (285) 72
SUBSTR_EQ (286) 162
SUBSTR_NEQ (287) 163
REGEX_EQ (288) 165
REGEX_NEQ (289) 164
DEC (290) 64 66 68 70
INC (291) 63 65 67 69
DIV_ASS (292) 74
MUL_ASS (293) 73
MOD_ASS (294) 75
POWER (295) 153
CMP_EQ (296) 170
CMP_GE (297) 168
CMP_LE (298) 169
CMP_NEQ (299) 171
SL (300) 160
SR (301) 159
SRR (302) 161
SRR_ASS (303) 77
SR_ASS (304) 76
SL_ASS (305) 78

Nonterminals, with rules where they appear

nasl_script (75)
    on left: 1 2
lines (76)
    on left: 3 4, on right: 2 4 116
line (77)
    on left: 5 6 7 8, on right: 3 4
export (78)
    on left: 9, on right: 5
function (79)
    on left: 10 11, on right: 6 9
parameters (80)
    on left: 12 13, on right: 10 12 43 46 48 50
parameter (81)
    on left: 14 15 16, on right: 12 13
command (82)
    on left: 17 18, on right: 7 95 97 99 101 103 105 110 111 112 114
simple (83)
    on left: 19 20 21 22 23 24 25 26 27 28 29 30, on right: 17
break (84)
    on left: 31, on right: 21
continue (85)
    on left: 32, on right: 22
import (86)
    on left: 33, on right: 28
include (87)
    on left: 34, on right: 29
return (88)
    on left: 35 36 37, on right: 23
empty (89)
    on left: 38, on right: 30
global (90)
    on left: 39, on right: 25
local (91)
    on left: 40, on right: 24
rep (92)
    on left: 41 42, on right: 27
call_function (93)
    on left: 43 44 45 46 47 48 49 50, on right: 20 41 42 183
assign (94)
    on left: 51 52 53 54 55 56 57 58 59 60 61 62, on right: 15 19 53
    58 62 107
inc_dec_exp (95)
    on left: 63 64 65 66 67 68 69 70, on right: 26 108
assign_math_op (96)
    on left: 71 72 73 74 75, on right: 60
assign_shift_op (97)
    on left: 76 77 78, on right: 61
value (98)
    on left: 79, on right: 51 52 55 71 72 73 74 75 76 77 78 127
identifier (99)
    on left: 80 81 82, on right: 10 11 14 42 43 44 45 46 47 48 49 50
    52 53 54 55 56 57 58 59 63 64 65 66 67 68 69 70 71 72 73 74 75
    76 77 78 98 99 100 101 121 124 127 128 129 140 141 172 174 181
    182
integer (100)
    on left: 83 84 85, on right: 41 87 120 132 133 137 139 175
string (101)
    on left: 86, on right: 33 34 136 138 176
ip (102)
    on left: 87, on right: 177
null (103)
    on left: 88, on right: 178
ref (104)
    on left: 89, on right: 54 59 128 138 139 141 143
compound (105)
    on left: 90 91 92 93 94 95, on right: 18
for_loop (106)
    on left: 96 97, on right: 90
foreach_loop (107)
    on left: 98 99 100 101, on right: 91
repeat_loop (108)
    on left: 102 103, on right: 92
while_loop (109)
    on left: 104 105, on right: 93
if_expr (110)
    on left: 106 107 108, on right: 96 97 98 99 100 101 102 103 104
    105 109 110 111 112 113 114
if_cond (111)
    on left: 109 110 111 112 113 114, on right: 94
block (112)
    on left: 115 116, on right: 8 10 11 96 98 100 102 104 109 111 113
    114
body (113)
    on left: 117, on right: 37 179 181
body_sq (114)
    on left: 118 119 120 121, on right: 122 123 180
body_enum_sq (115)
    on left: 122 123, on right: 45 46 47 48 55 57 58 59 67 68 69 70
    122 182
body_p (116)
    on left: 124, on right: 125 126
body_enum_p (117)
    on left: 125 126, on right: 47 48 49 50 125 172
var (118)
    on left: 127 128 129, on right: 130 131
vars (119)
    on left: 130 131, on right: 39 40 130
list_int (120)
    on left: 132 133, on right: 56 57 132
argument_list (121)
    on left: 134 135, on right: 117 119 134
argument (122)
    on left: 136 137 138 139 140 141 142 143, on right: 16 134 135
expression (123)
    on left: 144 145 146 147 148 149 150 151 152 153 154 155 156 157
    158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173
    174 175 176 177 178 179 180 181 182 183, on right: 35 79 106 136
    137 140 142 145 146 147 148 149 150 151 152 153 154 155 156 157
    158 159 160 161 162 163 164 165 166 167 168 169 170 171 173


state 0

    FUNCTION	shift, and go to state 1
    LOCAL	shift, and go to state 2
    GLOBAL	shift, and go to state 3
    IF  	shift, and go to state 4
    INCLUDE	shift, and go to state 5
    EXPORT	shift, and go to state 6
    IMPORT	shift, and go to state 7
    RETURN	shift, and go to state 8
    BREAK	shift, and go to state 9
    CONTINUE	shift, and go to state 10
    FOR 	shift, and go to state 11
    FOREACH	shift, and go to state 12
    IN_ITER	shift, and go to state 13
    WHILE	shift, and go to state 14
    REPEAT	shift, and go to state 15
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    '(' 	shift, and go to state 20
    ';' 	shift, and go to state 21
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 23

    $default	reduce using rule 1 (nasl_script)

    nasl_script	go to state 339
    lines	go to state 24
    line	go to state 25
    export	go to state 26
    function	go to state 27
    command	go to state 28
    simple	go to state 29
    break	go to state 30
    continue	go to state 31
    import	go to state 32
    include	go to state 33
    return	go to state 34
    empty	go to state 35
    global	go to state 36
    local	go to state 37
    rep 	go to state 38
    call_function	go to state 39
    assign	go to state 40
    inc_dec_exp	go to state 41
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 44
    compound	go to state 45
    for_loop	go to state 46
    foreach_loop	go to state 47
    repeat_loop	go to state 48
    while_loop	go to state 49
    if_cond	go to state 50
    block	go to state 51



state 1

    function  ->  FUNCTION . identifier '(' parameters ')' block   (rule 10)
    function  ->  FUNCTION . identifier '(' ')' block   (rule 11)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17

    identifier	go to state 52



state 2

    local  ->  LOCAL . vars ';'   (rule 40)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17

    identifier	go to state 53
    var 	go to state 54
    vars	go to state 55



state 3

    global  ->  GLOBAL . vars ';'   (rule 39)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17

    identifier	go to state 53
    var 	go to state 54
    vars	go to state 56



state 4

    if_cond  ->  IF . '(' if_expr ')' block   (rule 109)
    if_cond  ->  IF . '(' if_expr ')' command   (rule 110)
    if_cond  ->  IF . '(' if_expr ')' block ELSE command   (rule 111)
    if_cond  ->  IF . '(' if_expr ')' command ELSE command   (rule 112)
    if_cond  ->  IF . '(' if_expr ')' block ELSE block   (rule 113)
    if_cond  ->  IF . '(' if_expr ')' command ELSE block   (rule 114)

    '(' 	shift, and go to state 57



state 5

    include  ->  INCLUDE . '(' string ')' ';'   (rule 34)

    '(' 	shift, and go to state 58



state 6

    export  ->  EXPORT . function   (rule 9)

    FUNCTION	shift, and go to state 1

    function	go to state 59



state 7

    import  ->  IMPORT . '(' string ')' ';'   (rule 33)

    '(' 	shift, and go to state 60



state 8

    return  ->  RETURN . expression ';'   (rule 35)
    return  ->  RETURN . '@' ';'   (rule 36)
    return  ->  RETURN . body ';'   (rule 37)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '@' 	shift, and go to state 67
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 79
    body_sq	go to state 80
    expression	go to state 81



state 9

    break  ->  BREAK . ';'   (rule 31)

    ';' 	shift, and go to state 82



state 10

    continue  ->  CONTINUE . ';'   (rule 32)

    ';' 	shift, and go to state 83



state 11

    for_loop  ->  FOR . '(' if_expr ';' if_expr ';' if_expr ')' block   (rule 96)
    for_loop  ->  FOR . '(' if_expr ';' if_expr ';' if_expr ')' command   (rule 97)

    '(' 	shift, and go to state 84



state 12

    foreach_loop  ->  FOREACH . identifier '(' if_expr ')' block   (rule 98)
    foreach_loop  ->  FOREACH . identifier '(' if_expr ')' command   (rule 99)
    foreach_loop  ->  FOREACH . '(' identifier IN_ITER if_expr ')' block   (rule 100)
    foreach_loop  ->  FOREACH . '(' identifier IN_ITER if_expr ')' command   (rule 101)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    '(' 	shift, and go to state 85

    identifier	go to state 86



state 13

    identifier  ->  IN_ITER .   (rule 81)

    $default	reduce using rule 81 (identifier)



state 14

    while_loop  ->  WHILE . '(' if_expr ')' block   (rule 104)
    while_loop  ->  WHILE . '(' if_expr ')' command   (rule 105)

    '(' 	shift, and go to state 87



state 15

    repeat_loop  ->  REPEAT . block UNTIL if_expr ';'   (rule 102)
    repeat_loop  ->  REPEAT . command UNTIL if_expr ';'   (rule 103)

    LOCAL	shift, and go to state 2
    GLOBAL	shift, and go to state 3
    IF  	shift, and go to state 4
    INCLUDE	shift, and go to state 5
    IMPORT	shift, and go to state 7
    RETURN	shift, and go to state 8
    BREAK	shift, and go to state 9
    CONTINUE	shift, and go to state 10
    FOR 	shift, and go to state 11
    FOREACH	shift, and go to state 12
    IN_ITER	shift, and go to state 13
    WHILE	shift, and go to state 14
    REPEAT	shift, and go to state 15
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    '(' 	shift, and go to state 20
    ';' 	shift, and go to state 21
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 23

    command	go to state 88
    simple	go to state 29
    break	go to state 30
    continue	go to state 31
    import	go to state 32
    include	go to state 33
    return	go to state 34
    empty	go to state 35
    global	go to state 36
    local	go to state 37
    rep 	go to state 38
    call_function	go to state 39
    assign	go to state 40
    inc_dec_exp	go to state 41
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 44
    compound	go to state 45
    for_loop	go to state 46
    foreach_loop	go to state 47
    repeat_loop	go to state 48
    while_loop	go to state 49
    if_cond	go to state 50
    block	go to state 89



state 16

    identifier  ->  REP .   (rule 82)

    $default	reduce using rule 82 (identifier)



state 17

    identifier  ->  IDENT .   (rule 80)

    $default	reduce using rule 80 (identifier)



state 18

    inc_dec_exp  ->  DEC . identifier   (rule 64)
    inc_dec_exp  ->  DEC . identifier body_enum_sq   (rule 68)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17

    identifier	go to state 90



state 19

    inc_dec_exp  ->  INC . identifier   (rule 63)
    inc_dec_exp  ->  INC . identifier body_enum_sq   (rule 67)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17

    identifier	go to state 91



state 20

    assign  ->  '(' . assign ')'   (rule 62)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    '(' 	shift, and go to state 20
    '=' 	shift, and go to state 22

    assign	go to state 92
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 93



state 21

    empty  ->  ';' .   (rule 38)

    $default	reduce using rule 38 (empty)



state 22

    assign  ->  '=' . value   (rule 51)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    value	go to state 94
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 96



state 23

    block  ->  '{' . '}'   (rule 115)
    block  ->  '{' . lines '}'   (rule 116)

    FUNCTION	shift, and go to state 1
    LOCAL	shift, and go to state 2
    GLOBAL	shift, and go to state 3
    IF  	shift, and go to state 4
    INCLUDE	shift, and go to state 5
    EXPORT	shift, and go to state 6
    IMPORT	shift, and go to state 7
    RETURN	shift, and go to state 8
    BREAK	shift, and go to state 9
    CONTINUE	shift, and go to state 10
    FOR 	shift, and go to state 11
    FOREACH	shift, and go to state 12
    IN_ITER	shift, and go to state 13
    WHILE	shift, and go to state 14
    REPEAT	shift, and go to state 15
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    '(' 	shift, and go to state 20
    ';' 	shift, and go to state 21
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 23
    '}' 	shift, and go to state 97

    lines	go to state 98
    line	go to state 25
    export	go to state 26
    function	go to state 27
    command	go to state 28
    simple	go to state 29
    break	go to state 30
    continue	go to state 31
    import	go to state 32
    include	go to state 33
    return	go to state 34
    empty	go to state 35
    global	go to state 36
    local	go to state 37
    rep 	go to state 38
    call_function	go to state 39
    assign	go to state 40
    inc_dec_exp	go to state 41
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 44
    compound	go to state 45
    for_loop	go to state 46
    foreach_loop	go to state 47
    repeat_loop	go to state 48
    while_loop	go to state 49
    if_cond	go to state 50
    block	go to state 51



state 24

    nasl_script  ->  lines .   (rule 2)
    lines  ->  lines . line   (rule 4)

    FUNCTION	shift, and go to state 1
    LOCAL	shift, and go to state 2
    GLOBAL	shift, and go to state 3
    IF  	shift, and go to state 4
    INCLUDE	shift, and go to state 5
    EXPORT	shift, and go to state 6
    IMPORT	shift, and go to state 7
    RETURN	shift, and go to state 8
    BREAK	shift, and go to state 9
    CONTINUE	shift, and go to state 10
    FOR 	shift, and go to state 11
    FOREACH	shift, and go to state 12
    IN_ITER	shift, and go to state 13
    WHILE	shift, and go to state 14
    REPEAT	shift, and go to state 15
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    '(' 	shift, and go to state 20
    ';' 	shift, and go to state 21
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 23

    $default	reduce using rule 2 (nasl_script)

    line	go to state 99
    export	go to state 26
    function	go to state 27
    command	go to state 28
    simple	go to state 29
    break	go to state 30
    continue	go to state 31
    import	go to state 32
    include	go to state 33
    return	go to state 34
    empty	go to state 35
    global	go to state 36
    local	go to state 37
    rep 	go to state 38
    call_function	go to state 39
    assign	go to state 40
    inc_dec_exp	go to state 41
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 44
    compound	go to state 45
    for_loop	go to state 46
    foreach_loop	go to state 47
    repeat_loop	go to state 48
    while_loop	go to state 49
    if_cond	go to state 50
    block	go to state 51



state 25

    lines  ->  line .   (rule 3)

    $default	reduce using rule 3 (lines)



state 26

    line  ->  export .   (rule 5)

    $default	reduce using rule 5 (line)



state 27

    line  ->  function .   (rule 6)

    $default	reduce using rule 6 (line)



state 28

    line  ->  command .   (rule 7)
    compound  ->  command . ELSE   (rule 95)

    ELSE	shift, and go to state 100

    $default	reduce using rule 7 (line)



state 29

    command  ->  simple .   (rule 17)

    $default	reduce using rule 17 (command)



state 30

    simple  ->  break .   (rule 21)

    $default	reduce using rule 21 (simple)



state 31

    simple  ->  continue .   (rule 22)

    $default	reduce using rule 22 (simple)



state 32

    simple  ->  import .   (rule 28)

    $default	reduce using rule 28 (simple)



state 33

    simple  ->  include .   (rule 29)

    $default	reduce using rule 29 (simple)



state 34

    simple  ->  return .   (rule 23)

    $default	reduce using rule 23 (simple)



state 35

    simple  ->  empty .   (rule 30)

    $default	reduce using rule 30 (simple)



state 36

    simple  ->  global .   (rule 25)

    $default	reduce using rule 25 (simple)



state 37

    simple  ->  local .   (rule 24)

    $default	reduce using rule 24 (simple)



state 38

    simple  ->  rep .   (rule 27)

    $default	reduce using rule 27 (simple)



state 39

    simple  ->  call_function . ';'   (rule 20)
    rep  ->  call_function . REP integer ';'   (rule 41)
    rep  ->  call_function . REP identifier ';'   (rule 42)

    REP 	shift, and go to state 101
    ';' 	shift, and go to state 102



state 40

    simple  ->  assign .   (rule 19)

    $default	reduce using rule 19 (simple)



state 41

    simple  ->  inc_dec_exp .   (rule 26)

    $default	reduce using rule 26 (simple)



state 42

    assign  ->  assign_math_op .   (rule 60)

    $default	reduce using rule 60 (assign)



state 43

    assign  ->  assign_shift_op .   (rule 61)

    $default	reduce using rule 61 (assign)



state 44

    call_function  ->  identifier . '(' parameters ')'   (rule 43)
    call_function  ->  identifier . '(' ')'   (rule 44)
    call_function  ->  identifier . body_enum_sq '(' ')'   (rule 45)
    call_function  ->  identifier . body_enum_sq '(' parameters ')'   (rule 46)
    call_function  ->  identifier . body_enum_sq body_enum_p '(' ')'   (rule 47)
    call_function  ->  identifier . body_enum_sq body_enum_p '(' parameters ')'   (rule 48)
    call_function  ->  identifier . body_enum_p '(' ')'   (rule 49)
    call_function  ->  identifier . body_enum_p '(' parameters ')'   (rule 50)
    assign  ->  identifier . '=' value   (rule 52)
    assign  ->  identifier . '=' assign   (rule 53)
    assign  ->  identifier . '=' ref   (rule 54)
    assign  ->  identifier . body_enum_sq '=' value   (rule 55)
    assign  ->  identifier . '=' list_int   (rule 56)
    assign  ->  identifier . body_enum_sq '=' list_int   (rule 57)
    assign  ->  identifier . body_enum_sq '=' assign   (rule 58)
    assign  ->  identifier . body_enum_sq '=' ref   (rule 59)
    inc_dec_exp  ->  identifier . INC   (rule 65)
    inc_dec_exp  ->  identifier . DEC   (rule 66)
    inc_dec_exp  ->  identifier . body_enum_sq INC   (rule 69)
    inc_dec_exp  ->  identifier . body_enum_sq DEC   (rule 70)
    assign_math_op  ->  identifier . ADD_ASS value   (rule 71)
    assign_math_op  ->  identifier . SUB_ASS value   (rule 72)
    assign_math_op  ->  identifier . MUL_ASS value   (rule 73)
    assign_math_op  ->  identifier . DIV_ASS value   (rule 74)
    assign_math_op  ->  identifier . MOD_ASS value   (rule 75)
    assign_shift_op  ->  identifier . SR_ASS value   (rule 76)
    assign_shift_op  ->  identifier . SRR_ASS value   (rule 77)
    assign_shift_op  ->  identifier . SL_ASS value   (rule 78)

    ADD_ASS	shift, and go to state 103
    SUB_ASS	shift, and go to state 104
    DEC 	shift, and go to state 105
    INC 	shift, and go to state 106
    DIV_ASS	shift, and go to state 107
    MUL_ASS	shift, and go to state 108
    MOD_ASS	shift, and go to state 109
    SRR_ASS	shift, and go to state 110
    SR_ASS	shift, and go to state 111
    SL_ASS	shift, and go to state 112
    '(' 	shift, and go to state 113
    '=' 	shift, and go to state 114
    '.' 	shift, and go to state 115
    '[' 	shift, and go to state 69

    body_sq	go to state 116
    body_enum_sq	go to state 117
    body_p	go to state 118
    body_enum_p	go to state 119



state 45

    command  ->  compound .   (rule 18)

    $default	reduce using rule 18 (command)



state 46

    compound  ->  for_loop .   (rule 90)

    $default	reduce using rule 90 (compound)



state 47

    compound  ->  foreach_loop .   (rule 91)

    $default	reduce using rule 91 (compound)



state 48

    compound  ->  repeat_loop .   (rule 92)

    $default	reduce using rule 92 (compound)



state 49

    compound  ->  while_loop .   (rule 93)

    $default	reduce using rule 93 (compound)



state 50

    compound  ->  if_cond .   (rule 94)

    $default	reduce using rule 94 (compound)



state 51

    line  ->  block .   (rule 8)

    $default	reduce using rule 8 (line)



state 52

    function  ->  FUNCTION identifier . '(' parameters ')' block   (rule 10)
    function  ->  FUNCTION identifier . '(' ')' block   (rule 11)

    '(' 	shift, and go to state 120



state 53

    var  ->  identifier . '=' value   (rule 127)
    var  ->  identifier . '=' ref   (rule 128)
    var  ->  identifier .   (rule 129)

    '=' 	shift, and go to state 121

    $default	reduce using rule 129 (var)



state 54

    vars  ->  var . ',' vars   (rule 130)
    vars  ->  var .   (rule 131)

    ',' 	shift, and go to state 122

    $default	reduce using rule 131 (vars)



state 55

    local  ->  LOCAL vars . ';'   (rule 40)

    ';' 	shift, and go to state 123



state 56

    global  ->  GLOBAL vars . ';'   (rule 39)

    ';' 	shift, and go to state 124



state 57

    if_cond  ->  IF '(' . if_expr ')' block   (rule 109)
    if_cond  ->  IF '(' . if_expr ')' command   (rule 110)
    if_cond  ->  IF '(' . if_expr ')' block ELSE command   (rule 111)
    if_cond  ->  IF '(' . if_expr ')' command ELSE command   (rule 112)
    if_cond  ->  IF '(' . if_expr ')' block ELSE block   (rule 113)
    if_cond  ->  IF '(' . if_expr ')' command ELSE block   (rule 114)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    '(' 	shift, and go to state 125
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    assign	go to state 126
    inc_dec_exp	go to state 127
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 128
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    if_expr	go to state 129
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 130



state 58

    include  ->  INCLUDE '(' . string ')' ';'   (rule 34)

    STRING	shift, and go to state 62

    string	go to state 131



state 59

    export  ->  EXPORT function .   (rule 9)

    $default	reduce using rule 9 (export)



state 60

    import  ->  IMPORT '(' . string ')' ';'   (rule 33)

    STRING	shift, and go to state 62

    string	go to state 132



state 61

    integer  ->  INT .   (rule 83)

    $default	reduce using rule 83 (integer)



state 62

    string  ->  STRING .   (rule 86)

    $default	reduce using rule 86 (string)



state 63

    integer  ->  FALSE .   (rule 85)

    $default	reduce using rule 85 (integer)



state 64

    null  ->  _NULL_ .   (rule 88)

    $default	reduce using rule 88 (null)



state 65

    integer  ->  TRUE .   (rule 84)

    $default	reduce using rule 84 (integer)



state 66

    expression  ->  '(' . expression ')'   (rule 145)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 133



state 67

    return  ->  RETURN '@' . ';'   (rule 36)

    ';' 	shift, and go to state 134



state 68

    body  ->  '{' . argument_list '}'   (rule 117)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '@' 	shift, and go to state 135
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 136
    integer	go to state 137
    string	go to state 138
    ip  	go to state 77
    null	go to state 78
    ref 	go to state 139
    body	go to state 95
    body_sq	go to state 80
    argument_list	go to state 140
    argument	go to state 141
    expression	go to state 142



state 69

    body_sq  ->  '[' . ']'   (rule 118)
    body_sq  ->  '[' . argument_list ']'   (rule 119)
    body_sq  ->  '[' . integer ']'   (rule 120)
    body_sq  ->  '[' . identifier ']'   (rule 121)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '@' 	shift, and go to state 135
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    ']' 	shift, and go to state 143
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    ']' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 144
    integer	go to state 145
    string	go to state 138
    ip  	go to state 77
    null	go to state 78
    ref 	go to state 139
    body	go to state 95
    body_sq	go to state 80
    argument_list	go to state 146
    argument	go to state 141
    expression	go to state 142



state 70

    expression  ->  '!' . expression   (rule 147)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 147



state 71

    expression  ->  '-' . expression   (rule 151)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 148



state 72

    expression  ->  '~' . expression   (rule 173)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 149



state 73

    expression  ->  call_function .   (rule 183)

    $default	reduce using rule 183 (expression)



state 74

    call_function  ->  identifier . '(' parameters ')'   (rule 43)
    call_function  ->  identifier . '(' ')'   (rule 44)
    call_function  ->  identifier . body_enum_sq '(' ')'   (rule 45)
    call_function  ->  identifier . body_enum_sq '(' parameters ')'   (rule 46)
    call_function  ->  identifier . body_enum_sq body_enum_p '(' ')'   (rule 47)
    call_function  ->  identifier . body_enum_sq body_enum_p '(' parameters ')'   (rule 48)
    call_function  ->  identifier . body_enum_p '(' ')'   (rule 49)
    call_function  ->  identifier . body_enum_p '(' parameters ')'   (rule 50)
    expression  ->  identifier . body_enum_p   (rule 172)
    expression  ->  identifier .   (rule 174)
    expression  ->  identifier . body   (rule 181)
    expression  ->  identifier . body_enum_sq   (rule 182)

    '(' 	shift, and go to state 113
    '.' 	shift, and go to state 115
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69

    '(' 	[reduce using rule 174 (expression)]
    '{' 	[reduce using rule 174 (expression)]
    $default	reduce using rule 174 (expression)

    body	go to state 150
    body_sq	go to state 116
    body_enum_sq	go to state 151
    body_p	go to state 118
    body_enum_p	go to state 152



state 75

    ip  ->  integer . '.' integer '.' integer '.' integer   (rule 87)
    expression  ->  integer .   (rule 175)

    '.' 	shift, and go to state 153

    $default	reduce using rule 175 (expression)



state 76

    expression  ->  string .   (rule 176)

    $default	reduce using rule 176 (expression)



state 77

    expression  ->  ip .   (rule 177)

    $default	reduce using rule 177 (expression)



state 78

    expression  ->  null .   (rule 178)

    $default	reduce using rule 178 (expression)



state 79

    return  ->  RETURN body . ';'   (rule 37)
    expression  ->  body .   (rule 179)

    ';' 	shift, and go to state 154

    ';' 	[reduce using rule 179 (expression)]
    $default	reduce using rule 179 (expression)



state 80

    expression  ->  body_sq .   (rule 180)

    $default	reduce using rule 180 (expression)



state 81

    return  ->  RETURN expression . ';'   (rule 35)
    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    ';' 	shift, and go to state 170
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179



state 82

    break  ->  BREAK ';' .   (rule 31)

    $default	reduce using rule 31 (break)



state 83

    continue  ->  CONTINUE ';' .   (rule 32)

    $default	reduce using rule 32 (continue)



state 84

    for_loop  ->  FOR '(' . if_expr ';' if_expr ';' if_expr ')' block   (rule 96)
    for_loop  ->  FOR '(' . if_expr ';' if_expr ';' if_expr ')' command   (rule 97)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    '(' 	shift, and go to state 125
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    assign	go to state 126
    inc_dec_exp	go to state 127
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 128
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    if_expr	go to state 180
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 130



state 85

    foreach_loop  ->  FOREACH '(' . identifier IN_ITER if_expr ')' block   (rule 100)
    foreach_loop  ->  FOREACH '(' . identifier IN_ITER if_expr ')' command   (rule 101)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17

    identifier	go to state 181



state 86

    foreach_loop  ->  FOREACH identifier . '(' if_expr ')' block   (rule 98)
    foreach_loop  ->  FOREACH identifier . '(' if_expr ')' command   (rule 99)

    '(' 	shift, and go to state 182



state 87

    while_loop  ->  WHILE '(' . if_expr ')' block   (rule 104)
    while_loop  ->  WHILE '(' . if_expr ')' command   (rule 105)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    '(' 	shift, and go to state 125
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    assign	go to state 126
    inc_dec_exp	go to state 127
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 128
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    if_expr	go to state 183
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 130



state 88

    compound  ->  command . ELSE   (rule 95)
    repeat_loop  ->  REPEAT command . UNTIL if_expr ';'   (rule 103)

    ELSE	shift, and go to state 100
    UNTIL	shift, and go to state 184



state 89

    repeat_loop  ->  REPEAT block . UNTIL if_expr ';'   (rule 102)

    UNTIL	shift, and go to state 185



state 90

    inc_dec_exp  ->  DEC identifier .   (rule 64)
    inc_dec_exp  ->  DEC identifier . body_enum_sq   (rule 68)

    '[' 	shift, and go to state 69

    $default	reduce using rule 64 (inc_dec_exp)

    body_sq	go to state 116
    body_enum_sq	go to state 186



state 91

    inc_dec_exp  ->  INC identifier .   (rule 63)
    inc_dec_exp  ->  INC identifier . body_enum_sq   (rule 67)

    '[' 	shift, and go to state 69

    $default	reduce using rule 63 (inc_dec_exp)

    body_sq	go to state 116
    body_enum_sq	go to state 187



state 92

    assign  ->  '(' assign . ')'   (rule 62)

    ')' 	shift, and go to state 188



state 93

    assign  ->  identifier . '=' value   (rule 52)
    assign  ->  identifier . '=' assign   (rule 53)
    assign  ->  identifier . '=' ref   (rule 54)
    assign  ->  identifier . body_enum_sq '=' value   (rule 55)
    assign  ->  identifier . '=' list_int   (rule 56)
    assign  ->  identifier . body_enum_sq '=' list_int   (rule 57)
    assign  ->  identifier . body_enum_sq '=' assign   (rule 58)
    assign  ->  identifier . body_enum_sq '=' ref   (rule 59)
    assign_math_op  ->  identifier . ADD_ASS value   (rule 71)
    assign_math_op  ->  identifier . SUB_ASS value   (rule 72)
    assign_math_op  ->  identifier . MUL_ASS value   (rule 73)
    assign_math_op  ->  identifier . DIV_ASS value   (rule 74)
    assign_math_op  ->  identifier . MOD_ASS value   (rule 75)
    assign_shift_op  ->  identifier . SR_ASS value   (rule 76)
    assign_shift_op  ->  identifier . SRR_ASS value   (rule 77)
    assign_shift_op  ->  identifier . SL_ASS value   (rule 78)

    ADD_ASS	shift, and go to state 103
    SUB_ASS	shift, and go to state 104
    DIV_ASS	shift, and go to state 107
    MUL_ASS	shift, and go to state 108
    MOD_ASS	shift, and go to state 109
    SRR_ASS	shift, and go to state 110
    SR_ASS	shift, and go to state 111
    SL_ASS	shift, and go to state 112
    '=' 	shift, and go to state 114
    '[' 	shift, and go to state 69

    body_sq	go to state 116
    body_enum_sq	go to state 189



state 94

    assign  ->  '=' value .   (rule 51)

    $default	reduce using rule 51 (assign)



state 95

    expression  ->  body .   (rule 179)

    $default	reduce using rule 179 (expression)



state 96

    value  ->  expression .   (rule 79)
    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    $default	reduce using rule 79 (value)



state 97

    block  ->  '{' '}' .   (rule 115)

    $default	reduce using rule 115 (block)



state 98

    lines  ->  lines . line   (rule 4)
    block  ->  '{' lines . '}'   (rule 116)

    FUNCTION	shift, and go to state 1
    LOCAL	shift, and go to state 2
    GLOBAL	shift, and go to state 3
    IF  	shift, and go to state 4
    INCLUDE	shift, and go to state 5
    EXPORT	shift, and go to state 6
    IMPORT	shift, and go to state 7
    RETURN	shift, and go to state 8
    BREAK	shift, and go to state 9
    CONTINUE	shift, and go to state 10
    FOR 	shift, and go to state 11
    FOREACH	shift, and go to state 12
    IN_ITER	shift, and go to state 13
    WHILE	shift, and go to state 14
    REPEAT	shift, and go to state 15
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    '(' 	shift, and go to state 20
    ';' 	shift, and go to state 21
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 23
    '}' 	shift, and go to state 190

    line	go to state 99
    export	go to state 26
    function	go to state 27
    command	go to state 28
    simple	go to state 29
    break	go to state 30
    continue	go to state 31
    import	go to state 32
    include	go to state 33
    return	go to state 34
    empty	go to state 35
    global	go to state 36
    local	go to state 37
    rep 	go to state 38
    call_function	go to state 39
    assign	go to state 40
    inc_dec_exp	go to state 41
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 44
    compound	go to state 45
    for_loop	go to state 46
    foreach_loop	go to state 47
    repeat_loop	go to state 48
    while_loop	go to state 49
    if_cond	go to state 50
    block	go to state 51



state 99

    lines  ->  lines line .   (rule 4)

    $default	reduce using rule 4 (lines)



state 100

    compound  ->  command ELSE .   (rule 95)

    $default	reduce using rule 95 (compound)



state 101

    rep  ->  call_function REP . integer ';'   (rule 41)
    rep  ->  call_function REP . identifier ';'   (rule 42)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    FALSE	shift, and go to state 63
    TRUE	shift, and go to state 65

    identifier	go to state 191
    integer	go to state 192



state 102

    simple  ->  call_function ';' .   (rule 20)

    $default	reduce using rule 20 (simple)



state 103

    assign_math_op  ->  identifier ADD_ASS . value   (rule 71)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    value	go to state 193
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 96



state 104

    assign_math_op  ->  identifier SUB_ASS . value   (rule 72)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    value	go to state 194
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 96



state 105

    inc_dec_exp  ->  identifier DEC .   (rule 66)

    $default	reduce using rule 66 (inc_dec_exp)



state 106

    inc_dec_exp  ->  identifier INC .   (rule 65)

    $default	reduce using rule 65 (inc_dec_exp)



state 107

    assign_math_op  ->  identifier DIV_ASS . value   (rule 74)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    value	go to state 195
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 96



state 108

    assign_math_op  ->  identifier MUL_ASS . value   (rule 73)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    value	go to state 196
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 96



state 109

    assign_math_op  ->  identifier MOD_ASS . value   (rule 75)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    value	go to state 197
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 96



state 110

    assign_shift_op  ->  identifier SRR_ASS . value   (rule 77)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    value	go to state 198
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 96



state 111

    assign_shift_op  ->  identifier SR_ASS . value   (rule 76)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    value	go to state 199
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 96



state 112

    assign_shift_op  ->  identifier SL_ASS . value   (rule 78)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    value	go to state 200
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 96



state 113

    call_function  ->  identifier '(' . parameters ')'   (rule 43)
    call_function  ->  identifier '(' . ')'   (rule 44)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 125
    ')' 	shift, and go to state 201
    '&' 	shift, and go to state 202
    '@' 	shift, and go to state 135
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    ')' 	[reduce using rule 144 (expression)]
    '&' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    parameters	go to state 203
    parameter	go to state 204
    call_function	go to state 73
    assign	go to state 205
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 206
    integer	go to state 137
    string	go to state 138
    ip  	go to state 77
    null	go to state 78
    ref 	go to state 139
    body	go to state 95
    body_sq	go to state 80
    argument	go to state 207
    expression	go to state 142



state 114

    assign  ->  identifier '=' . value   (rule 52)
    assign  ->  identifier '=' . assign   (rule 53)
    assign  ->  identifier '=' . ref   (rule 54)
    assign  ->  identifier '=' . list_int   (rule 56)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 125
    '@' 	shift, and go to state 135
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '=' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    assign	go to state 208
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    value	go to state 209
    identifier	go to state 210
    integer	go to state 211
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    ref 	go to state 212
    body	go to state 95
    body_sq	go to state 80
    list_int	go to state 213
    expression	go to state 96



state 115

    body_p  ->  '.' . identifier   (rule 124)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17

    identifier	go to state 214



state 116

    body_enum_sq  ->  body_sq .   (rule 123)

    $default	reduce using rule 123 (body_enum_sq)



state 117

    call_function  ->  identifier body_enum_sq . '(' ')'   (rule 45)
    call_function  ->  identifier body_enum_sq . '(' parameters ')'   (rule 46)
    call_function  ->  identifier body_enum_sq . body_enum_p '(' ')'   (rule 47)
    call_function  ->  identifier body_enum_sq . body_enum_p '(' parameters ')'   (rule 48)
    assign  ->  identifier body_enum_sq . '=' value   (rule 55)
    assign  ->  identifier body_enum_sq . '=' list_int   (rule 57)
    assign  ->  identifier body_enum_sq . '=' assign   (rule 58)
    assign  ->  identifier body_enum_sq . '=' ref   (rule 59)
    inc_dec_exp  ->  identifier body_enum_sq . INC   (rule 69)
    inc_dec_exp  ->  identifier body_enum_sq . DEC   (rule 70)
    body_enum_sq  ->  body_enum_sq . body_sq   (rule 122)

    DEC 	shift, and go to state 215
    INC 	shift, and go to state 216
    '(' 	shift, and go to state 217
    '=' 	shift, and go to state 218
    '.' 	shift, and go to state 115
    '[' 	shift, and go to state 69

    body_sq	go to state 219
    body_p	go to state 118
    body_enum_p	go to state 220



state 118

    body_enum_p  ->  body_p .   (rule 126)

    $default	reduce using rule 126 (body_enum_p)



state 119

    call_function  ->  identifier body_enum_p . '(' ')'   (rule 49)
    call_function  ->  identifier body_enum_p . '(' parameters ')'   (rule 50)
    body_enum_p  ->  body_enum_p . body_p   (rule 125)

    '(' 	shift, and go to state 221
    '.' 	shift, and go to state 115

    body_p	go to state 222



state 120

    function  ->  FUNCTION identifier '(' . parameters ')' block   (rule 10)
    function  ->  FUNCTION identifier '(' . ')' block   (rule 11)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 125
    ')' 	shift, and go to state 223
    '&' 	shift, and go to state 202
    '@' 	shift, and go to state 135
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    ')' 	[reduce using rule 144 (expression)]
    '&' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    parameters	go to state 224
    parameter	go to state 204
    call_function	go to state 73
    assign	go to state 205
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 206
    integer	go to state 137
    string	go to state 138
    ip  	go to state 77
    null	go to state 78
    ref 	go to state 139
    body	go to state 95
    body_sq	go to state 80
    argument	go to state 207
    expression	go to state 142



state 121

    var  ->  identifier '=' . value   (rule 127)
    var  ->  identifier '=' . ref   (rule 128)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '@' 	shift, and go to state 135
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    value	go to state 225
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    ref 	go to state 226
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 96



state 122

    vars  ->  var ',' . vars   (rule 130)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17

    identifier	go to state 53
    var 	go to state 54
    vars	go to state 227



state 123

    local  ->  LOCAL vars ';' .   (rule 40)

    $default	reduce using rule 40 (local)



state 124

    global  ->  GLOBAL vars ';' .   (rule 39)

    $default	reduce using rule 39 (global)



state 125

    assign  ->  '(' . assign ')'   (rule 62)
    expression  ->  '(' . expression ')'   (rule 145)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 125
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    assign	go to state 92
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 210
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 133



state 126

    if_expr  ->  assign .   (rule 107)

    $default	reduce using rule 107 (if_expr)



state 127

    if_expr  ->  inc_dec_exp .   (rule 108)

    $default	reduce using rule 108 (if_expr)



state 128

    call_function  ->  identifier . '(' parameters ')'   (rule 43)
    call_function  ->  identifier . '(' ')'   (rule 44)
    call_function  ->  identifier . body_enum_sq '(' ')'   (rule 45)
    call_function  ->  identifier . body_enum_sq '(' parameters ')'   (rule 46)
    call_function  ->  identifier . body_enum_sq body_enum_p '(' ')'   (rule 47)
    call_function  ->  identifier . body_enum_sq body_enum_p '(' parameters ')'   (rule 48)
    call_function  ->  identifier . body_enum_p '(' ')'   (rule 49)
    call_function  ->  identifier . body_enum_p '(' parameters ')'   (rule 50)
    assign  ->  identifier . '=' value   (rule 52)
    assign  ->  identifier . '=' assign   (rule 53)
    assign  ->  identifier . '=' ref   (rule 54)
    assign  ->  identifier . body_enum_sq '=' value   (rule 55)
    assign  ->  identifier . '=' list_int   (rule 56)
    assign  ->  identifier . body_enum_sq '=' list_int   (rule 57)
    assign  ->  identifier . body_enum_sq '=' assign   (rule 58)
    assign  ->  identifier . body_enum_sq '=' ref   (rule 59)
    inc_dec_exp  ->  identifier . INC   (rule 65)
    inc_dec_exp  ->  identifier . DEC   (rule 66)
    inc_dec_exp  ->  identifier . body_enum_sq INC   (rule 69)
    inc_dec_exp  ->  identifier . body_enum_sq DEC   (rule 70)
    assign_math_op  ->  identifier . ADD_ASS value   (rule 71)
    assign_math_op  ->  identifier . SUB_ASS value   (rule 72)
    assign_math_op  ->  identifier . MUL_ASS value   (rule 73)
    assign_math_op  ->  identifier . DIV_ASS value   (rule 74)
    assign_math_op  ->  identifier . MOD_ASS value   (rule 75)
    assign_shift_op  ->  identifier . SR_ASS value   (rule 76)
    assign_shift_op  ->  identifier . SRR_ASS value   (rule 77)
    assign_shift_op  ->  identifier . SL_ASS value   (rule 78)
    expression  ->  identifier . body_enum_p   (rule 172)
    expression  ->  identifier .   (rule 174)
    expression  ->  identifier . body   (rule 181)
    expression  ->  identifier . body_enum_sq   (rule 182)

    ADD_ASS	shift, and go to state 103
    SUB_ASS	shift, and go to state 104
    DEC 	shift, and go to state 105
    INC 	shift, and go to state 106
    DIV_ASS	shift, and go to state 107
    MUL_ASS	shift, and go to state 108
    MOD_ASS	shift, and go to state 109
    SRR_ASS	shift, and go to state 110
    SR_ASS	shift, and go to state 111
    SL_ASS	shift, and go to state 112
    '(' 	shift, and go to state 113
    '=' 	shift, and go to state 114
    '.' 	shift, and go to state 115
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69

    $default	reduce using rule 174 (expression)

    body	go to state 150
    body_sq	go to state 116
    body_enum_sq	go to state 228
    body_p	go to state 118
    body_enum_p	go to state 152



state 129

    if_cond  ->  IF '(' if_expr . ')' block   (rule 109)
    if_cond  ->  IF '(' if_expr . ')' command   (rule 110)
    if_cond  ->  IF '(' if_expr . ')' block ELSE command   (rule 111)
    if_cond  ->  IF '(' if_expr . ')' command ELSE command   (rule 112)
    if_cond  ->  IF '(' if_expr . ')' block ELSE block   (rule 113)
    if_cond  ->  IF '(' if_expr . ')' command ELSE block   (rule 114)

    ')' 	shift, and go to state 229



state 130

    if_expr  ->  expression .   (rule 106)
    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    $default	reduce using rule 106 (if_expr)



state 131

    include  ->  INCLUDE '(' string . ')' ';'   (rule 34)

    ')' 	shift, and go to state 230



state 132

    import  ->  IMPORT '(' string . ')' ';'   (rule 33)

    ')' 	shift, and go to state 231



state 133

    expression  ->  '(' expression . ')'   (rule 145)
    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    ')' 	shift, and go to state 232
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179



state 134

    return  ->  RETURN '@' ';' .   (rule 36)

    $default	reduce using rule 36 (return)



state 135

    ref  ->  '@' . IDENT   (rule 89)

    IDENT	shift, and go to state 233



state 136

    call_function  ->  identifier . '(' parameters ')'   (rule 43)
    call_function  ->  identifier . '(' ')'   (rule 44)
    call_function  ->  identifier . body_enum_sq '(' ')'   (rule 45)
    call_function  ->  identifier . body_enum_sq '(' parameters ')'   (rule 46)
    call_function  ->  identifier . body_enum_sq body_enum_p '(' ')'   (rule 47)
    call_function  ->  identifier . body_enum_sq body_enum_p '(' parameters ')'   (rule 48)
    call_function  ->  identifier . body_enum_p '(' ')'   (rule 49)
    call_function  ->  identifier . body_enum_p '(' parameters ')'   (rule 50)
    argument  ->  identifier . ':' expression   (rule 140)
    argument  ->  identifier . ':' ref   (rule 141)
    expression  ->  identifier . body_enum_p   (rule 172)
    expression  ->  identifier .   (rule 174)
    expression  ->  identifier . body   (rule 181)
    expression  ->  identifier . body_enum_sq   (rule 182)

    '(' 	shift, and go to state 113
    '.' 	shift, and go to state 115
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    ':' 	shift, and go to state 234

    $default	reduce using rule 174 (expression)

    body	go to state 150
    body_sq	go to state 116
    body_enum_sq	go to state 151
    body_p	go to state 118
    body_enum_p	go to state 152



state 137

    ip  ->  integer . '.' integer '.' integer '.' integer   (rule 87)
    argument  ->  integer . ':' expression   (rule 137)
    argument  ->  integer . ':' ref   (rule 139)
    expression  ->  integer .   (rule 175)

    '.' 	shift, and go to state 153
    ':' 	shift, and go to state 235

    $default	reduce using rule 175 (expression)



state 138

    argument  ->  string . ':' expression   (rule 136)
    argument  ->  string . ':' ref   (rule 138)
    expression  ->  string .   (rule 176)

    ':' 	shift, and go to state 236

    $default	reduce using rule 176 (expression)



state 139

    argument  ->  ref .   (rule 143)

    $default	reduce using rule 143 (argument)



state 140

    body  ->  '{' argument_list . '}'   (rule 117)
    argument_list  ->  argument_list . ',' argument   (rule 134)

    ',' 	shift, and go to state 237
    '}' 	shift, and go to state 238



state 141

    argument_list  ->  argument .   (rule 135)

    $default	reduce using rule 135 (argument_list)



state 142

    argument  ->  expression .   (rule 142)
    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    $default	reduce using rule 142 (argument)



state 143

    body_sq  ->  '[' ']' .   (rule 118)

    $default	reduce using rule 118 (body_sq)



state 144

    call_function  ->  identifier . '(' parameters ')'   (rule 43)
    call_function  ->  identifier . '(' ')'   (rule 44)
    call_function  ->  identifier . body_enum_sq '(' ')'   (rule 45)
    call_function  ->  identifier . body_enum_sq '(' parameters ')'   (rule 46)
    call_function  ->  identifier . body_enum_sq body_enum_p '(' ')'   (rule 47)
    call_function  ->  identifier . body_enum_sq body_enum_p '(' parameters ')'   (rule 48)
    call_function  ->  identifier . body_enum_p '(' ')'   (rule 49)
    call_function  ->  identifier . body_enum_p '(' parameters ')'   (rule 50)
    body_sq  ->  '[' identifier . ']'   (rule 121)
    argument  ->  identifier . ':' expression   (rule 140)
    argument  ->  identifier . ':' ref   (rule 141)
    expression  ->  identifier . body_enum_p   (rule 172)
    expression  ->  identifier .   (rule 174)
    expression  ->  identifier . body   (rule 181)
    expression  ->  identifier . body_enum_sq   (rule 182)

    '(' 	shift, and go to state 113
    '.' 	shift, and go to state 115
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    ']' 	shift, and go to state 239
    ':' 	shift, and go to state 234

    ']' 	[reduce using rule 174 (expression)]
    $default	reduce using rule 174 (expression)

    body	go to state 150
    body_sq	go to state 116
    body_enum_sq	go to state 151
    body_p	go to state 118
    body_enum_p	go to state 152



state 145

    ip  ->  integer . '.' integer '.' integer '.' integer   (rule 87)
    body_sq  ->  '[' integer . ']'   (rule 120)
    argument  ->  integer . ':' expression   (rule 137)
    argument  ->  integer . ':' ref   (rule 139)
    expression  ->  integer .   (rule 175)

    '.' 	shift, and go to state 153
    ']' 	shift, and go to state 240
    ':' 	shift, and go to state 235

    ']' 	[reduce using rule 175 (expression)]
    $default	reduce using rule 175 (expression)



state 146

    body_sq  ->  '[' argument_list . ']'   (rule 119)
    argument_list  ->  argument_list . ',' argument   (rule 134)

    ',' 	shift, and go to state 237
    ']' 	shift, and go to state 241



state 147

    expression  ->  expression . AND expression   (rule 146)
    expression  ->  '!' expression .   (rule 147)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    OR  	[reduce using rule 147 (expression)]
    AND 	[reduce using rule 147 (expression)]
    SUBSTR_EQ	[reduce using rule 147 (expression)]
    SUBSTR_NEQ	[reduce using rule 147 (expression)]
    REGEX_EQ	[reduce using rule 147 (expression)]
    REGEX_NEQ	[reduce using rule 147 (expression)]
    POWER	[reduce using rule 147 (expression)]
    CMP_EQ	[reduce using rule 147 (expression)]
    CMP_GE	[reduce using rule 147 (expression)]
    CMP_LE	[reduce using rule 147 (expression)]
    CMP_NEQ	[reduce using rule 147 (expression)]
    SL  	[reduce using rule 147 (expression)]
    SR  	[reduce using rule 147 (expression)]
    SRR 	[reduce using rule 147 (expression)]
    '&' 	[reduce using rule 147 (expression)]
    '+' 	[reduce using rule 147 (expression)]
    '-' 	[reduce using rule 147 (expression)]
    '*' 	[reduce using rule 147 (expression)]
    '/' 	[reduce using rule 147 (expression)]
    '%' 	[reduce using rule 147 (expression)]
    '^' 	[reduce using rule 147 (expression)]
    '|' 	[reduce using rule 147 (expression)]
    '<' 	[reduce using rule 147 (expression)]
    '>' 	[reduce using rule 147 (expression)]
    $default	reduce using rule 147 (expression)



state 148

    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  '-' expression .   (rule 151)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    OR  	[reduce using rule 151 (expression)]
    AND 	[reduce using rule 151 (expression)]
    SUBSTR_EQ	[reduce using rule 151 (expression)]
    SUBSTR_NEQ	[reduce using rule 151 (expression)]
    REGEX_EQ	[reduce using rule 151 (expression)]
    REGEX_NEQ	[reduce using rule 151 (expression)]
    POWER	[reduce using rule 151 (expression)]
    CMP_EQ	[reduce using rule 151 (expression)]
    CMP_GE	[reduce using rule 151 (expression)]
    CMP_LE	[reduce using rule 151 (expression)]
    CMP_NEQ	[reduce using rule 151 (expression)]
    SL  	[reduce using rule 151 (expression)]
    SR  	[reduce using rule 151 (expression)]
    SRR 	[reduce using rule 151 (expression)]
    '&' 	[reduce using rule 151 (expression)]
    '+' 	[reduce using rule 151 (expression)]
    '-' 	[reduce using rule 151 (expression)]
    '*' 	[reduce using rule 151 (expression)]
    '/' 	[reduce using rule 151 (expression)]
    '%' 	[reduce using rule 151 (expression)]
    '^' 	[reduce using rule 151 (expression)]
    '|' 	[reduce using rule 151 (expression)]
    '<' 	[reduce using rule 151 (expression)]
    '>' 	[reduce using rule 151 (expression)]
    $default	reduce using rule 151 (expression)



state 149

    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)
    expression  ->  '~' expression .   (rule 173)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    OR  	[reduce using rule 173 (expression)]
    AND 	[reduce using rule 173 (expression)]
    SUBSTR_EQ	[reduce using rule 173 (expression)]
    SUBSTR_NEQ	[reduce using rule 173 (expression)]
    REGEX_EQ	[reduce using rule 173 (expression)]
    REGEX_NEQ	[reduce using rule 173 (expression)]
    POWER	[reduce using rule 173 (expression)]
    CMP_EQ	[reduce using rule 173 (expression)]
    CMP_GE	[reduce using rule 173 (expression)]
    CMP_LE	[reduce using rule 173 (expression)]
    CMP_NEQ	[reduce using rule 173 (expression)]
    SL  	[reduce using rule 173 (expression)]
    SR  	[reduce using rule 173 (expression)]
    SRR 	[reduce using rule 173 (expression)]
    '&' 	[reduce using rule 173 (expression)]
    '+' 	[reduce using rule 173 (expression)]
    '-' 	[reduce using rule 173 (expression)]
    '*' 	[reduce using rule 173 (expression)]
    '/' 	[reduce using rule 173 (expression)]
    '%' 	[reduce using rule 173 (expression)]
    '^' 	[reduce using rule 173 (expression)]
    '|' 	[reduce using rule 173 (expression)]
    '<' 	[reduce using rule 173 (expression)]
    '>' 	[reduce using rule 173 (expression)]
    $default	reduce using rule 173 (expression)



state 150

    expression  ->  identifier body .   (rule 181)

    $default	reduce using rule 181 (expression)



state 151

    call_function  ->  identifier body_enum_sq . '(' ')'   (rule 45)
    call_function  ->  identifier body_enum_sq . '(' parameters ')'   (rule 46)
    call_function  ->  identifier body_enum_sq . body_enum_p '(' ')'   (rule 47)
    call_function  ->  identifier body_enum_sq . body_enum_p '(' parameters ')'   (rule 48)
    body_enum_sq  ->  body_enum_sq . body_sq   (rule 122)
    expression  ->  identifier body_enum_sq .   (rule 182)

    '(' 	shift, and go to state 217
    '.' 	shift, and go to state 115
    '[' 	shift, and go to state 69

    '(' 	[reduce using rule 182 (expression)]
    $default	reduce using rule 182 (expression)

    body_sq	go to state 219
    body_p	go to state 118
    body_enum_p	go to state 220



state 152

    call_function  ->  identifier body_enum_p . '(' ')'   (rule 49)
    call_function  ->  identifier body_enum_p . '(' parameters ')'   (rule 50)
    body_enum_p  ->  body_enum_p . body_p   (rule 125)
    expression  ->  identifier body_enum_p .   (rule 172)

    '(' 	shift, and go to state 221
    '.' 	shift, and go to state 115

    '(' 	[reduce using rule 172 (expression)]
    $default	reduce using rule 172 (expression)

    body_p	go to state 222



state 153

    ip  ->  integer '.' . integer '.' integer '.' integer   (rule 87)

    INT 	shift, and go to state 61
    FALSE	shift, and go to state 63
    TRUE	shift, and go to state 65

    integer	go to state 242



state 154

    return  ->  RETURN body ';' .   (rule 37)

    $default	reduce using rule 37 (return)



state 155

    expression  ->  expression OR . expression   (rule 148)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 243



state 156

    expression  ->  expression AND . expression   (rule 146)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 244



state 157

    expression  ->  expression SUBSTR_EQ . expression   (rule 162)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 245



state 158

    expression  ->  expression SUBSTR_NEQ . expression   (rule 163)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 246



state 159

    expression  ->  expression REGEX_EQ . expression   (rule 165)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 247



state 160

    expression  ->  expression REGEX_NEQ . expression   (rule 164)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 248



state 161

    expression  ->  expression POWER . expression   (rule 153)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 249



state 162

    expression  ->  expression CMP_EQ . expression   (rule 170)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 250



state 163

    expression  ->  expression CMP_GE . expression   (rule 168)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 251



state 164

    expression  ->  expression CMP_LE . expression   (rule 169)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 252



state 165

    expression  ->  expression CMP_NEQ . expression   (rule 171)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 253



state 166

    expression  ->  expression SL . expression   (rule 160)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 254



state 167

    expression  ->  expression SR . expression   (rule 159)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 255



state 168

    expression  ->  expression SRR . expression   (rule 161)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 256



state 169

    expression  ->  expression '&' . expression   (rule 156)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 257



state 170

    return  ->  RETURN expression ';' .   (rule 35)

    $default	reduce using rule 35 (return)



state 171

    expression  ->  expression '+' . expression   (rule 149)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 258



state 172

    expression  ->  expression '-' . expression   (rule 150)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 259



state 173

    expression  ->  expression '*' . expression   (rule 152)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 260



state 174

    expression  ->  expression '/' . expression   (rule 154)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 261



state 175

    expression  ->  expression '%' . expression   (rule 155)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 262



state 176

    expression  ->  expression '^' . expression   (rule 157)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 263



state 177

    expression  ->  expression '|' . expression   (rule 158)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 264



state 178

    expression  ->  expression '<' . expression   (rule 166)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 265



state 179

    expression  ->  expression '>' . expression   (rule 167)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 266



state 180

    for_loop  ->  FOR '(' if_expr . ';' if_expr ';' if_expr ')' block   (rule 96)
    for_loop  ->  FOR '(' if_expr . ';' if_expr ';' if_expr ')' command   (rule 97)

    ';' 	shift, and go to state 267



state 181

    foreach_loop  ->  FOREACH '(' identifier . IN_ITER if_expr ')' block   (rule 100)
    foreach_loop  ->  FOREACH '(' identifier . IN_ITER if_expr ')' command   (rule 101)

    IN_ITER	shift, and go to state 268



state 182

    foreach_loop  ->  FOREACH identifier '(' . if_expr ')' block   (rule 98)
    foreach_loop  ->  FOREACH identifier '(' . if_expr ')' command   (rule 99)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    '(' 	shift, and go to state 125
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    assign	go to state 126
    inc_dec_exp	go to state 127
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 128
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    if_expr	go to state 269
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 130



state 183

    while_loop  ->  WHILE '(' if_expr . ')' block   (rule 104)
    while_loop  ->  WHILE '(' if_expr . ')' command   (rule 105)

    ')' 	shift, and go to state 270



state 184

    repeat_loop  ->  REPEAT command UNTIL . if_expr ';'   (rule 103)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    '(' 	shift, and go to state 125
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    assign	go to state 126
    inc_dec_exp	go to state 127
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 128
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    if_expr	go to state 271
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 130



state 185

    repeat_loop  ->  REPEAT block UNTIL . if_expr ';'   (rule 102)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    '(' 	shift, and go to state 125
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    assign	go to state 126
    inc_dec_exp	go to state 127
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 128
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    if_expr	go to state 272
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 130



state 186

    inc_dec_exp  ->  DEC identifier body_enum_sq .   (rule 68)
    body_enum_sq  ->  body_enum_sq . body_sq   (rule 122)

    '[' 	shift, and go to state 69

    $default	reduce using rule 68 (inc_dec_exp)

    body_sq	go to state 219



state 187

    inc_dec_exp  ->  INC identifier body_enum_sq .   (rule 67)
    body_enum_sq  ->  body_enum_sq . body_sq   (rule 122)

    '[' 	shift, and go to state 69

    $default	reduce using rule 67 (inc_dec_exp)

    body_sq	go to state 219



state 188

    assign  ->  '(' assign ')' .   (rule 62)

    $default	reduce using rule 62 (assign)



state 189

    assign  ->  identifier body_enum_sq . '=' value   (rule 55)
    assign  ->  identifier body_enum_sq . '=' list_int   (rule 57)
    assign  ->  identifier body_enum_sq . '=' assign   (rule 58)
    assign  ->  identifier body_enum_sq . '=' ref   (rule 59)
    body_enum_sq  ->  body_enum_sq . body_sq   (rule 122)

    '=' 	shift, and go to state 218
    '[' 	shift, and go to state 69

    body_sq	go to state 219



state 190

    block  ->  '{' lines '}' .   (rule 116)

    $default	reduce using rule 116 (block)



state 191

    rep  ->  call_function REP identifier . ';'   (rule 42)

    ';' 	shift, and go to state 273



state 192

    rep  ->  call_function REP integer . ';'   (rule 41)

    ';' 	shift, and go to state 274



state 193

    assign_math_op  ->  identifier ADD_ASS value .   (rule 71)

    $default	reduce using rule 71 (assign_math_op)



state 194

    assign_math_op  ->  identifier SUB_ASS value .   (rule 72)

    $default	reduce using rule 72 (assign_math_op)



state 195

    assign_math_op  ->  identifier DIV_ASS value .   (rule 74)

    $default	reduce using rule 74 (assign_math_op)



state 196

    assign_math_op  ->  identifier MUL_ASS value .   (rule 73)

    $default	reduce using rule 73 (assign_math_op)



state 197

    assign_math_op  ->  identifier MOD_ASS value .   (rule 75)

    $default	reduce using rule 75 (assign_math_op)



state 198

    assign_shift_op  ->  identifier SRR_ASS value .   (rule 77)

    $default	reduce using rule 77 (assign_shift_op)



state 199

    assign_shift_op  ->  identifier SR_ASS value .   (rule 76)

    $default	reduce using rule 76 (assign_shift_op)



state 200

    assign_shift_op  ->  identifier SL_ASS value .   (rule 78)

    $default	reduce using rule 78 (assign_shift_op)



state 201

    call_function  ->  identifier '(' ')' .   (rule 44)

    $default	reduce using rule 44 (call_function)



state 202

    parameter  ->  '&' . identifier   (rule 14)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17

    identifier	go to state 275



state 203

    call_function  ->  identifier '(' parameters . ')'   (rule 43)

    ')' 	shift, and go to state 276



state 204

    parameters  ->  parameter . ',' parameters   (rule 12)
    parameters  ->  parameter .   (rule 13)

    ',' 	shift, and go to state 277

    $default	reduce using rule 13 (parameters)



state 205

    parameter  ->  assign .   (rule 15)

    $default	reduce using rule 15 (parameter)



state 206

    call_function  ->  identifier . '(' parameters ')'   (rule 43)
    call_function  ->  identifier . '(' ')'   (rule 44)
    call_function  ->  identifier . body_enum_sq '(' ')'   (rule 45)
    call_function  ->  identifier . body_enum_sq '(' parameters ')'   (rule 46)
    call_function  ->  identifier . body_enum_sq body_enum_p '(' ')'   (rule 47)
    call_function  ->  identifier . body_enum_sq body_enum_p '(' parameters ')'   (rule 48)
    call_function  ->  identifier . body_enum_p '(' ')'   (rule 49)
    call_function  ->  identifier . body_enum_p '(' parameters ')'   (rule 50)
    assign  ->  identifier . '=' value   (rule 52)
    assign  ->  identifier . '=' assign   (rule 53)
    assign  ->  identifier . '=' ref   (rule 54)
    assign  ->  identifier . body_enum_sq '=' value   (rule 55)
    assign  ->  identifier . '=' list_int   (rule 56)
    assign  ->  identifier . body_enum_sq '=' list_int   (rule 57)
    assign  ->  identifier . body_enum_sq '=' assign   (rule 58)
    assign  ->  identifier . body_enum_sq '=' ref   (rule 59)
    assign_math_op  ->  identifier . ADD_ASS value   (rule 71)
    assign_math_op  ->  identifier . SUB_ASS value   (rule 72)
    assign_math_op  ->  identifier . MUL_ASS value   (rule 73)
    assign_math_op  ->  identifier . DIV_ASS value   (rule 74)
    assign_math_op  ->  identifier . MOD_ASS value   (rule 75)
    assign_shift_op  ->  identifier . SR_ASS value   (rule 76)
    assign_shift_op  ->  identifier . SRR_ASS value   (rule 77)
    assign_shift_op  ->  identifier . SL_ASS value   (rule 78)
    argument  ->  identifier . ':' expression   (rule 140)
    argument  ->  identifier . ':' ref   (rule 141)
    expression  ->  identifier . body_enum_p   (rule 172)
    expression  ->  identifier .   (rule 174)
    expression  ->  identifier . body   (rule 181)
    expression  ->  identifier . body_enum_sq   (rule 182)

    ADD_ASS	shift, and go to state 103
    SUB_ASS	shift, and go to state 104
    DIV_ASS	shift, and go to state 107
    MUL_ASS	shift, and go to state 108
    MOD_ASS	shift, and go to state 109
    SRR_ASS	shift, and go to state 110
    SR_ASS	shift, and go to state 111
    SL_ASS	shift, and go to state 112
    '(' 	shift, and go to state 113
    '=' 	shift, and go to state 114
    '.' 	shift, and go to state 115
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    ':' 	shift, and go to state 234

    $default	reduce using rule 174 (expression)

    body	go to state 150
    body_sq	go to state 116
    body_enum_sq	go to state 278
    body_p	go to state 118
    body_enum_p	go to state 152



state 207

    parameter  ->  argument .   (rule 16)

    $default	reduce using rule 16 (parameter)



state 208

    assign  ->  identifier '=' assign .   (rule 53)

    $default	reduce using rule 53 (assign)



state 209

    assign  ->  identifier '=' value .   (rule 52)

    $default	reduce using rule 52 (assign)



state 210

    call_function  ->  identifier . '(' parameters ')'   (rule 43)
    call_function  ->  identifier . '(' ')'   (rule 44)
    call_function  ->  identifier . body_enum_sq '(' ')'   (rule 45)
    call_function  ->  identifier . body_enum_sq '(' parameters ')'   (rule 46)
    call_function  ->  identifier . body_enum_sq body_enum_p '(' ')'   (rule 47)
    call_function  ->  identifier . body_enum_sq body_enum_p '(' parameters ')'   (rule 48)
    call_function  ->  identifier . body_enum_p '(' ')'   (rule 49)
    call_function  ->  identifier . body_enum_p '(' parameters ')'   (rule 50)
    assign  ->  identifier . '=' value   (rule 52)
    assign  ->  identifier . '=' assign   (rule 53)
    assign  ->  identifier . '=' ref   (rule 54)
    assign  ->  identifier . body_enum_sq '=' value   (rule 55)
    assign  ->  identifier . '=' list_int   (rule 56)
    assign  ->  identifier . body_enum_sq '=' list_int   (rule 57)
    assign  ->  identifier . body_enum_sq '=' assign   (rule 58)
    assign  ->  identifier . body_enum_sq '=' ref   (rule 59)
    assign_math_op  ->  identifier . ADD_ASS value   (rule 71)
    assign_math_op  ->  identifier . SUB_ASS value   (rule 72)
    assign_math_op  ->  identifier . MUL_ASS value   (rule 73)
    assign_math_op  ->  identifier . DIV_ASS value   (rule 74)
    assign_math_op  ->  identifier . MOD_ASS value   (rule 75)
    assign_shift_op  ->  identifier . SR_ASS value   (rule 76)
    assign_shift_op  ->  identifier . SRR_ASS value   (rule 77)
    assign_shift_op  ->  identifier . SL_ASS value   (rule 78)
    expression  ->  identifier . body_enum_p   (rule 172)
    expression  ->  identifier .   (rule 174)
    expression  ->  identifier . body   (rule 181)
    expression  ->  identifier . body_enum_sq   (rule 182)

    ADD_ASS	shift, and go to state 103
    SUB_ASS	shift, and go to state 104
    DIV_ASS	shift, and go to state 107
    MUL_ASS	shift, and go to state 108
    MOD_ASS	shift, and go to state 109
    SRR_ASS	shift, and go to state 110
    SR_ASS	shift, and go to state 111
    SL_ASS	shift, and go to state 112
    '(' 	shift, and go to state 113
    '=' 	shift, and go to state 114
    '.' 	shift, and go to state 115
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69

    '(' 	[reduce using rule 174 (expression)]
    '=' 	[reduce using rule 174 (expression)]
    '{' 	[reduce using rule 174 (expression)]
    $default	reduce using rule 174 (expression)

    body	go to state 150
    body_sq	go to state 116
    body_enum_sq	go to state 278
    body_p	go to state 118
    body_enum_p	go to state 152



state 211

    ip  ->  integer . '.' integer '.' integer '.' integer   (rule 87)
    list_int  ->  integer . ',' integer   (rule 133)
    expression  ->  integer .   (rule 175)

    ',' 	shift, and go to state 279
    '.' 	shift, and go to state 153

    ',' 	[reduce using rule 175 (expression)]
    $default	reduce using rule 175 (expression)



state 212

    assign  ->  identifier '=' ref .   (rule 54)

    $default	reduce using rule 54 (assign)



state 213

    assign  ->  identifier '=' list_int .   (rule 56)
    list_int  ->  list_int . ',' integer   (rule 132)

    ',' 	shift, and go to state 280

    ',' 	[reduce using rule 56 (assign)]
    $default	reduce using rule 56 (assign)



state 214

    body_p  ->  '.' identifier .   (rule 124)

    $default	reduce using rule 124 (body_p)



state 215

    inc_dec_exp  ->  identifier body_enum_sq DEC .   (rule 70)

    $default	reduce using rule 70 (inc_dec_exp)



state 216

    inc_dec_exp  ->  identifier body_enum_sq INC .   (rule 69)

    $default	reduce using rule 69 (inc_dec_exp)



state 217

    call_function  ->  identifier body_enum_sq '(' . ')'   (rule 45)
    call_function  ->  identifier body_enum_sq '(' . parameters ')'   (rule 46)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 125
    ')' 	shift, and go to state 281
    '&' 	shift, and go to state 202
    '@' 	shift, and go to state 135
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    ')' 	[reduce using rule 144 (expression)]
    '&' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    parameters	go to state 282
    parameter	go to state 204
    call_function	go to state 73
    assign	go to state 205
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 206
    integer	go to state 137
    string	go to state 138
    ip  	go to state 77
    null	go to state 78
    ref 	go to state 139
    body	go to state 95
    body_sq	go to state 80
    argument	go to state 207
    expression	go to state 142



state 218

    assign  ->  identifier body_enum_sq '=' . value   (rule 55)
    assign  ->  identifier body_enum_sq '=' . list_int   (rule 57)
    assign  ->  identifier body_enum_sq '=' . assign   (rule 58)
    assign  ->  identifier body_enum_sq '=' . ref   (rule 59)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 125
    '@' 	shift, and go to state 135
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    IN_ITER	[reduce using rule 144 (expression)]
    REP 	[reduce using rule 144 (expression)]
    IDENT	[reduce using rule 144 (expression)]
    '(' 	[reduce using rule 144 (expression)]
    '=' 	[reduce using rule 144 (expression)]
    '{' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    assign	go to state 283
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    value	go to state 284
    identifier	go to state 210
    integer	go to state 211
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    ref 	go to state 285
    body	go to state 95
    body_sq	go to state 80
    list_int	go to state 286
    expression	go to state 96



state 219

    body_enum_sq  ->  body_enum_sq body_sq .   (rule 122)

    $default	reduce using rule 122 (body_enum_sq)



state 220

    call_function  ->  identifier body_enum_sq body_enum_p . '(' ')'   (rule 47)
    call_function  ->  identifier body_enum_sq body_enum_p . '(' parameters ')'   (rule 48)
    body_enum_p  ->  body_enum_p . body_p   (rule 125)

    '(' 	shift, and go to state 287
    '.' 	shift, and go to state 115

    body_p	go to state 222



state 221

    call_function  ->  identifier body_enum_p '(' . ')'   (rule 49)
    call_function  ->  identifier body_enum_p '(' . parameters ')'   (rule 50)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 125
    ')' 	shift, and go to state 288
    '&' 	shift, and go to state 202
    '@' 	shift, and go to state 135
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    ')' 	[reduce using rule 144 (expression)]
    '&' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    parameters	go to state 289
    parameter	go to state 204
    call_function	go to state 73
    assign	go to state 205
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 206
    integer	go to state 137
    string	go to state 138
    ip  	go to state 77
    null	go to state 78
    ref 	go to state 139
    body	go to state 95
    body_sq	go to state 80
    argument	go to state 207
    expression	go to state 142



state 222

    body_enum_p  ->  body_enum_p body_p .   (rule 125)

    $default	reduce using rule 125 (body_enum_p)



state 223

    function  ->  FUNCTION identifier '(' ')' . block   (rule 11)

    '{' 	shift, and go to state 23

    block	go to state 290



state 224

    function  ->  FUNCTION identifier '(' parameters . ')' block   (rule 10)

    ')' 	shift, and go to state 291



state 225

    var  ->  identifier '=' value .   (rule 127)

    $default	reduce using rule 127 (var)



state 226

    var  ->  identifier '=' ref .   (rule 128)

    $default	reduce using rule 128 (var)



state 227

    vars  ->  var ',' vars .   (rule 130)

    $default	reduce using rule 130 (vars)



state 228

    call_function  ->  identifier body_enum_sq . '(' ')'   (rule 45)
    call_function  ->  identifier body_enum_sq . '(' parameters ')'   (rule 46)
    call_function  ->  identifier body_enum_sq . body_enum_p '(' ')'   (rule 47)
    call_function  ->  identifier body_enum_sq . body_enum_p '(' parameters ')'   (rule 48)
    assign  ->  identifier body_enum_sq . '=' value   (rule 55)
    assign  ->  identifier body_enum_sq . '=' list_int   (rule 57)
    assign  ->  identifier body_enum_sq . '=' assign   (rule 58)
    assign  ->  identifier body_enum_sq . '=' ref   (rule 59)
    inc_dec_exp  ->  identifier body_enum_sq . INC   (rule 69)
    inc_dec_exp  ->  identifier body_enum_sq . DEC   (rule 70)
    body_enum_sq  ->  body_enum_sq . body_sq   (rule 122)
    expression  ->  identifier body_enum_sq .   (rule 182)

    DEC 	shift, and go to state 215
    INC 	shift, and go to state 216
    '(' 	shift, and go to state 217
    '=' 	shift, and go to state 218
    '.' 	shift, and go to state 115
    '[' 	shift, and go to state 69

    $default	reduce using rule 182 (expression)

    body_sq	go to state 219
    body_p	go to state 118
    body_enum_p	go to state 220



state 229

    if_cond  ->  IF '(' if_expr ')' . block   (rule 109)
    if_cond  ->  IF '(' if_expr ')' . command   (rule 110)
    if_cond  ->  IF '(' if_expr ')' . block ELSE command   (rule 111)
    if_cond  ->  IF '(' if_expr ')' . command ELSE command   (rule 112)
    if_cond  ->  IF '(' if_expr ')' . block ELSE block   (rule 113)
    if_cond  ->  IF '(' if_expr ')' . command ELSE block   (rule 114)

    LOCAL	shift, and go to state 2
    GLOBAL	shift, and go to state 3
    IF  	shift, and go to state 4
    INCLUDE	shift, and go to state 5
    IMPORT	shift, and go to state 7
    RETURN	shift, and go to state 8
    BREAK	shift, and go to state 9
    CONTINUE	shift, and go to state 10
    FOR 	shift, and go to state 11
    FOREACH	shift, and go to state 12
    IN_ITER	shift, and go to state 13
    WHILE	shift, and go to state 14
    REPEAT	shift, and go to state 15
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    '(' 	shift, and go to state 20
    ';' 	shift, and go to state 21
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 23

    command	go to state 292
    simple	go to state 29
    break	go to state 30
    continue	go to state 31
    import	go to state 32
    include	go to state 33
    return	go to state 34
    empty	go to state 35
    global	go to state 36
    local	go to state 37
    rep 	go to state 38
    call_function	go to state 39
    assign	go to state 40
    inc_dec_exp	go to state 41
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 44
    compound	go to state 45
    for_loop	go to state 46
    foreach_loop	go to state 47
    repeat_loop	go to state 48
    while_loop	go to state 49
    if_cond	go to state 50
    block	go to state 293



state 230

    include  ->  INCLUDE '(' string ')' . ';'   (rule 34)

    ';' 	shift, and go to state 294



state 231

    import  ->  IMPORT '(' string ')' . ';'   (rule 33)

    ';' 	shift, and go to state 295



state 232

    expression  ->  '(' expression ')' .   (rule 145)

    $default	reduce using rule 145 (expression)



state 233

    ref  ->  '@' IDENT .   (rule 89)

    $default	reduce using rule 89 (ref)



state 234

    argument  ->  identifier ':' . expression   (rule 140)
    argument  ->  identifier ':' . ref   (rule 141)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '@' 	shift, and go to state 135
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    ref 	go to state 296
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 297



state 235

    argument  ->  integer ':' . expression   (rule 137)
    argument  ->  integer ':' . ref   (rule 139)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '@' 	shift, and go to state 135
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    ref 	go to state 298
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 299



state 236

    argument  ->  string ':' . expression   (rule 136)
    argument  ->  string ':' . ref   (rule 138)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '@' 	shift, and go to state 135
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 74
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    ref 	go to state 300
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 301



state 237

    argument_list  ->  argument_list ',' . argument   (rule 134)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 66
    '@' 	shift, and go to state 135
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    identifier	go to state 136
    integer	go to state 137
    string	go to state 138
    ip  	go to state 77
    null	go to state 78
    ref 	go to state 139
    body	go to state 95
    body_sq	go to state 80
    argument	go to state 302
    expression	go to state 142



state 238

    body  ->  '{' argument_list '}' .   (rule 117)

    $default	reduce using rule 117 (body)



state 239

    body_sq  ->  '[' identifier ']' .   (rule 121)

    $default	reduce using rule 121 (body_sq)



state 240

    body_sq  ->  '[' integer ']' .   (rule 120)

    $default	reduce using rule 120 (body_sq)



state 241

    body_sq  ->  '[' argument_list ']' .   (rule 119)

    $default	reduce using rule 119 (body_sq)



state 242

    ip  ->  integer '.' integer . '.' integer '.' integer   (rule 87)

    '.' 	shift, and go to state 303



state 243

    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression OR expression .   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    OR  	[reduce using rule 148 (expression)]
    AND 	[reduce using rule 148 (expression)]
    SUBSTR_EQ	[reduce using rule 148 (expression)]
    SUBSTR_NEQ	[reduce using rule 148 (expression)]
    REGEX_EQ	[reduce using rule 148 (expression)]
    REGEX_NEQ	[reduce using rule 148 (expression)]
    POWER	[reduce using rule 148 (expression)]
    CMP_EQ	[reduce using rule 148 (expression)]
    CMP_GE	[reduce using rule 148 (expression)]
    CMP_LE	[reduce using rule 148 (expression)]
    CMP_NEQ	[reduce using rule 148 (expression)]
    SL  	[reduce using rule 148 (expression)]
    SR  	[reduce using rule 148 (expression)]
    SRR 	[reduce using rule 148 (expression)]
    '&' 	[reduce using rule 148 (expression)]
    '+' 	[reduce using rule 148 (expression)]
    '-' 	[reduce using rule 148 (expression)]
    '*' 	[reduce using rule 148 (expression)]
    '/' 	[reduce using rule 148 (expression)]
    '%' 	[reduce using rule 148 (expression)]
    '^' 	[reduce using rule 148 (expression)]
    '|' 	[reduce using rule 148 (expression)]
    '<' 	[reduce using rule 148 (expression)]
    '>' 	[reduce using rule 148 (expression)]
    $default	reduce using rule 148 (expression)



state 244

    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression AND expression .   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    OR  	[reduce using rule 146 (expression)]
    AND 	[reduce using rule 146 (expression)]
    SUBSTR_EQ	[reduce using rule 146 (expression)]
    SUBSTR_NEQ	[reduce using rule 146 (expression)]
    REGEX_EQ	[reduce using rule 146 (expression)]
    REGEX_NEQ	[reduce using rule 146 (expression)]
    POWER	[reduce using rule 146 (expression)]
    CMP_EQ	[reduce using rule 146 (expression)]
    CMP_GE	[reduce using rule 146 (expression)]
    CMP_LE	[reduce using rule 146 (expression)]
    CMP_NEQ	[reduce using rule 146 (expression)]
    SL  	[reduce using rule 146 (expression)]
    SR  	[reduce using rule 146 (expression)]
    SRR 	[reduce using rule 146 (expression)]
    '&' 	[reduce using rule 146 (expression)]
    '+' 	[reduce using rule 146 (expression)]
    '-' 	[reduce using rule 146 (expression)]
    '*' 	[reduce using rule 146 (expression)]
    '/' 	[reduce using rule 146 (expression)]
    '%' 	[reduce using rule 146 (expression)]
    '^' 	[reduce using rule 146 (expression)]
    '|' 	[reduce using rule 146 (expression)]
    '<' 	[reduce using rule 146 (expression)]
    '>' 	[reduce using rule 146 (expression)]
    $default	reduce using rule 146 (expression)



state 245

    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression SUBSTR_EQ expression .   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    OR  	[reduce using rule 162 (expression)]
    AND 	[reduce using rule 162 (expression)]
    SUBSTR_EQ	[reduce using rule 162 (expression)]
    SUBSTR_NEQ	[reduce using rule 162 (expression)]
    REGEX_EQ	[reduce using rule 162 (expression)]
    REGEX_NEQ	[reduce using rule 162 (expression)]
    POWER	[reduce using rule 162 (expression)]
    CMP_EQ	[reduce using rule 162 (expression)]
    CMP_GE	[reduce using rule 162 (expression)]
    CMP_LE	[reduce using rule 162 (expression)]
    CMP_NEQ	[reduce using rule 162 (expression)]
    SL  	[reduce using rule 162 (expression)]
    SR  	[reduce using rule 162 (expression)]
    SRR 	[reduce using rule 162 (expression)]
    '&' 	[reduce using rule 162 (expression)]
    '+' 	[reduce using rule 162 (expression)]
    '-' 	[reduce using rule 162 (expression)]
    '*' 	[reduce using rule 162 (expression)]
    '/' 	[reduce using rule 162 (expression)]
    '%' 	[reduce using rule 162 (expression)]
    '^' 	[reduce using rule 162 (expression)]
    '|' 	[reduce using rule 162 (expression)]
    '<' 	[reduce using rule 162 (expression)]
    '>' 	[reduce using rule 162 (expression)]
    $default	reduce using rule 162 (expression)



state 246

    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression SUBSTR_NEQ expression .   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    OR  	[reduce using rule 163 (expression)]
    AND 	[reduce using rule 163 (expression)]
    SUBSTR_EQ	[reduce using rule 163 (expression)]
    SUBSTR_NEQ	[reduce using rule 163 (expression)]
    REGEX_EQ	[reduce using rule 163 (expression)]
    REGEX_NEQ	[reduce using rule 163 (expression)]
    POWER	[reduce using rule 163 (expression)]
    CMP_EQ	[reduce using rule 163 (expression)]
    CMP_GE	[reduce using rule 163 (expression)]
    CMP_LE	[reduce using rule 163 (expression)]
    CMP_NEQ	[reduce using rule 163 (expression)]
    SL  	[reduce using rule 163 (expression)]
    SR  	[reduce using rule 163 (expression)]
    SRR 	[reduce using rule 163 (expression)]
    '&' 	[reduce using rule 163 (expression)]
    '+' 	[reduce using rule 163 (expression)]
    '-' 	[reduce using rule 163 (expression)]
    '*' 	[reduce using rule 163 (expression)]
    '/' 	[reduce using rule 163 (expression)]
    '%' 	[reduce using rule 163 (expression)]
    '^' 	[reduce using rule 163 (expression)]
    '|' 	[reduce using rule 163 (expression)]
    '<' 	[reduce using rule 163 (expression)]
    '>' 	[reduce using rule 163 (expression)]
    $default	reduce using rule 163 (expression)



state 247

    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression REGEX_EQ expression .   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    OR  	[reduce using rule 165 (expression)]
    AND 	[reduce using rule 165 (expression)]
    SUBSTR_EQ	[reduce using rule 165 (expression)]
    SUBSTR_NEQ	[reduce using rule 165 (expression)]
    REGEX_EQ	[reduce using rule 165 (expression)]
    REGEX_NEQ	[reduce using rule 165 (expression)]
    POWER	[reduce using rule 165 (expression)]
    CMP_EQ	[reduce using rule 165 (expression)]
    CMP_GE	[reduce using rule 165 (expression)]
    CMP_LE	[reduce using rule 165 (expression)]
    CMP_NEQ	[reduce using rule 165 (expression)]
    SL  	[reduce using rule 165 (expression)]
    SR  	[reduce using rule 165 (expression)]
    SRR 	[reduce using rule 165 (expression)]
    '&' 	[reduce using rule 165 (expression)]
    '+' 	[reduce using rule 165 (expression)]
    '-' 	[reduce using rule 165 (expression)]
    '*' 	[reduce using rule 165 (expression)]
    '/' 	[reduce using rule 165 (expression)]
    '%' 	[reduce using rule 165 (expression)]
    '^' 	[reduce using rule 165 (expression)]
    '|' 	[reduce using rule 165 (expression)]
    '<' 	[reduce using rule 165 (expression)]
    '>' 	[reduce using rule 165 (expression)]
    $default	reduce using rule 165 (expression)



state 248

    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression REGEX_NEQ expression .   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    OR  	[reduce using rule 164 (expression)]
    AND 	[reduce using rule 164 (expression)]
    SUBSTR_EQ	[reduce using rule 164 (expression)]
    SUBSTR_NEQ	[reduce using rule 164 (expression)]
    REGEX_EQ	[reduce using rule 164 (expression)]
    REGEX_NEQ	[reduce using rule 164 (expression)]
    POWER	[reduce using rule 164 (expression)]
    CMP_EQ	[reduce using rule 164 (expression)]
    CMP_GE	[reduce using rule 164 (expression)]
    CMP_LE	[reduce using rule 164 (expression)]
    CMP_NEQ	[reduce using rule 164 (expression)]
    SL  	[reduce using rule 164 (expression)]
    SR  	[reduce using rule 164 (expression)]
    SRR 	[reduce using rule 164 (expression)]
    '&' 	[reduce using rule 164 (expression)]
    '+' 	[reduce using rule 164 (expression)]
    '-' 	[reduce using rule 164 (expression)]
    '*' 	[reduce using rule 164 (expression)]
    '/' 	[reduce using rule 164 (expression)]
    '%' 	[reduce using rule 164 (expression)]
    '^' 	[reduce using rule 164 (expression)]
    '|' 	[reduce using rule 164 (expression)]
    '<' 	[reduce using rule 164 (expression)]
    '>' 	[reduce using rule 164 (expression)]
    $default	reduce using rule 164 (expression)



state 249

    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression POWER expression .   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    OR  	[reduce using rule 153 (expression)]
    AND 	[reduce using rule 153 (expression)]
    SUBSTR_EQ	[reduce using rule 153 (expression)]
    SUBSTR_NEQ	[reduce using rule 153 (expression)]
    REGEX_EQ	[reduce using rule 153 (expression)]
    REGEX_NEQ	[reduce using rule 153 (expression)]
    POWER	[reduce using rule 153 (expression)]
    CMP_EQ	[reduce using rule 153 (expression)]
    CMP_GE	[reduce using rule 153 (expression)]
    CMP_LE	[reduce using rule 153 (expression)]
    CMP_NEQ	[reduce using rule 153 (expression)]
    SL  	[reduce using rule 153 (expression)]
    SR  	[reduce using rule 153 (expression)]
    SRR 	[reduce using rule 153 (expression)]
    '&' 	[reduce using rule 153 (expression)]
    '+' 	[reduce using rule 153 (expression)]
    '-' 	[reduce using rule 153 (expression)]
    '*' 	[reduce using rule 153 (expression)]
    '/' 	[reduce using rule 153 (expression)]
    '%' 	[reduce using rule 153 (expression)]
    '^' 	[reduce using rule 153 (expression)]
    '|' 	[reduce using rule 153 (expression)]
    '<' 	[reduce using rule 153 (expression)]
    '>' 	[reduce using rule 153 (expression)]
    $default	reduce using rule 153 (expression)



state 250

    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression CMP_EQ expression .   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    OR  	[reduce using rule 170 (expression)]
    AND 	[reduce using rule 170 (expression)]
    SUBSTR_EQ	[reduce using rule 170 (expression)]
    SUBSTR_NEQ	[reduce using rule 170 (expression)]
    REGEX_EQ	[reduce using rule 170 (expression)]
    REGEX_NEQ	[reduce using rule 170 (expression)]
    POWER	[reduce using rule 170 (expression)]
    CMP_EQ	[reduce using rule 170 (expression)]
    CMP_GE	[reduce using rule 170 (expression)]
    CMP_LE	[reduce using rule 170 (expression)]
    CMP_NEQ	[reduce using rule 170 (expression)]
    SL  	[reduce using rule 170 (expression)]
    SR  	[reduce using rule 170 (expression)]
    SRR 	[reduce using rule 170 (expression)]
    '&' 	[reduce using rule 170 (expression)]
    '+' 	[reduce using rule 170 (expression)]
    '-' 	[reduce using rule 170 (expression)]
    '*' 	[reduce using rule 170 (expression)]
    '/' 	[reduce using rule 170 (expression)]
    '%' 	[reduce using rule 170 (expression)]
    '^' 	[reduce using rule 170 (expression)]
    '|' 	[reduce using rule 170 (expression)]
    '<' 	[reduce using rule 170 (expression)]
    '>' 	[reduce using rule 170 (expression)]
    $default	reduce using rule 170 (expression)



state 251

    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression CMP_GE expression .   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    OR  	[reduce using rule 168 (expression)]
    AND 	[reduce using rule 168 (expression)]
    SUBSTR_EQ	[reduce using rule 168 (expression)]
    SUBSTR_NEQ	[reduce using rule 168 (expression)]
    REGEX_EQ	[reduce using rule 168 (expression)]
    REGEX_NEQ	[reduce using rule 168 (expression)]
    POWER	[reduce using rule 168 (expression)]
    CMP_EQ	[reduce using rule 168 (expression)]
    CMP_GE	[reduce using rule 168 (expression)]
    CMP_LE	[reduce using rule 168 (expression)]
    CMP_NEQ	[reduce using rule 168 (expression)]
    SL  	[reduce using rule 168 (expression)]
    SR  	[reduce using rule 168 (expression)]
    SRR 	[reduce using rule 168 (expression)]
    '&' 	[reduce using rule 168 (expression)]
    '+' 	[reduce using rule 168 (expression)]
    '-' 	[reduce using rule 168 (expression)]
    '*' 	[reduce using rule 168 (expression)]
    '/' 	[reduce using rule 168 (expression)]
    '%' 	[reduce using rule 168 (expression)]
    '^' 	[reduce using rule 168 (expression)]
    '|' 	[reduce using rule 168 (expression)]
    '<' 	[reduce using rule 168 (expression)]
    '>' 	[reduce using rule 168 (expression)]
    $default	reduce using rule 168 (expression)



state 252

    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression CMP_LE expression .   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    OR  	[reduce using rule 169 (expression)]
    AND 	[reduce using rule 169 (expression)]
    SUBSTR_EQ	[reduce using rule 169 (expression)]
    SUBSTR_NEQ	[reduce using rule 169 (expression)]
    REGEX_EQ	[reduce using rule 169 (expression)]
    REGEX_NEQ	[reduce using rule 169 (expression)]
    POWER	[reduce using rule 169 (expression)]
    CMP_EQ	[reduce using rule 169 (expression)]
    CMP_GE	[reduce using rule 169 (expression)]
    CMP_LE	[reduce using rule 169 (expression)]
    CMP_NEQ	[reduce using rule 169 (expression)]
    SL  	[reduce using rule 169 (expression)]
    SR  	[reduce using rule 169 (expression)]
    SRR 	[reduce using rule 169 (expression)]
    '&' 	[reduce using rule 169 (expression)]
    '+' 	[reduce using rule 169 (expression)]
    '-' 	[reduce using rule 169 (expression)]
    '*' 	[reduce using rule 169 (expression)]
    '/' 	[reduce using rule 169 (expression)]
    '%' 	[reduce using rule 169 (expression)]
    '^' 	[reduce using rule 169 (expression)]
    '|' 	[reduce using rule 169 (expression)]
    '<' 	[reduce using rule 169 (expression)]
    '>' 	[reduce using rule 169 (expression)]
    $default	reduce using rule 169 (expression)



state 253

    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)
    expression  ->  expression CMP_NEQ expression .   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    OR  	[reduce using rule 171 (expression)]
    AND 	[reduce using rule 171 (expression)]
    SUBSTR_EQ	[reduce using rule 171 (expression)]
    SUBSTR_NEQ	[reduce using rule 171 (expression)]
    REGEX_EQ	[reduce using rule 171 (expression)]
    REGEX_NEQ	[reduce using rule 171 (expression)]
    POWER	[reduce using rule 171 (expression)]
    CMP_EQ	[reduce using rule 171 (expression)]
    CMP_GE	[reduce using rule 171 (expression)]
    CMP_LE	[reduce using rule 171 (expression)]
    CMP_NEQ	[reduce using rule 171 (expression)]
    SL  	[reduce using rule 171 (expression)]
    SR  	[reduce using rule 171 (expression)]
    SRR 	[reduce using rule 171 (expression)]
    '&' 	[reduce using rule 171 (expression)]
    '+' 	[reduce using rule 171 (expression)]
    '-' 	[reduce using rule 171 (expression)]
    '*' 	[reduce using rule 171 (expression)]
    '/' 	[reduce using rule 171 (expression)]
    '%' 	[reduce using rule 171 (expression)]
    '^' 	[reduce using rule 171 (expression)]
    '|' 	[reduce using rule 171 (expression)]
    '<' 	[reduce using rule 171 (expression)]
    '>' 	[reduce using rule 171 (expression)]
    $default	reduce using rule 171 (expression)



state 254

    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression SL expression .   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    OR  	[reduce using rule 160 (expression)]
    AND 	[reduce using rule 160 (expression)]
    SUBSTR_EQ	[reduce using rule 160 (expression)]
    SUBSTR_NEQ	[reduce using rule 160 (expression)]
    REGEX_EQ	[reduce using rule 160 (expression)]
    REGEX_NEQ	[reduce using rule 160 (expression)]
    POWER	[reduce using rule 160 (expression)]
    CMP_EQ	[reduce using rule 160 (expression)]
    CMP_GE	[reduce using rule 160 (expression)]
    CMP_LE	[reduce using rule 160 (expression)]
    CMP_NEQ	[reduce using rule 160 (expression)]
    SL  	[reduce using rule 160 (expression)]
    SR  	[reduce using rule 160 (expression)]
    SRR 	[reduce using rule 160 (expression)]
    '&' 	[reduce using rule 160 (expression)]
    '+' 	[reduce using rule 160 (expression)]
    '-' 	[reduce using rule 160 (expression)]
    '*' 	[reduce using rule 160 (expression)]
    '/' 	[reduce using rule 160 (expression)]
    '%' 	[reduce using rule 160 (expression)]
    '^' 	[reduce using rule 160 (expression)]
    '|' 	[reduce using rule 160 (expression)]
    '<' 	[reduce using rule 160 (expression)]
    '>' 	[reduce using rule 160 (expression)]
    $default	reduce using rule 160 (expression)



state 255

    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression SR expression .   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    OR  	[reduce using rule 159 (expression)]
    AND 	[reduce using rule 159 (expression)]
    SUBSTR_EQ	[reduce using rule 159 (expression)]
    SUBSTR_NEQ	[reduce using rule 159 (expression)]
    REGEX_EQ	[reduce using rule 159 (expression)]
    REGEX_NEQ	[reduce using rule 159 (expression)]
    POWER	[reduce using rule 159 (expression)]
    CMP_EQ	[reduce using rule 159 (expression)]
    CMP_GE	[reduce using rule 159 (expression)]
    CMP_LE	[reduce using rule 159 (expression)]
    CMP_NEQ	[reduce using rule 159 (expression)]
    SL  	[reduce using rule 159 (expression)]
    SR  	[reduce using rule 159 (expression)]
    SRR 	[reduce using rule 159 (expression)]
    '&' 	[reduce using rule 159 (expression)]
    '+' 	[reduce using rule 159 (expression)]
    '-' 	[reduce using rule 159 (expression)]
    '*' 	[reduce using rule 159 (expression)]
    '/' 	[reduce using rule 159 (expression)]
    '%' 	[reduce using rule 159 (expression)]
    '^' 	[reduce using rule 159 (expression)]
    '|' 	[reduce using rule 159 (expression)]
    '<' 	[reduce using rule 159 (expression)]
    '>' 	[reduce using rule 159 (expression)]
    $default	reduce using rule 159 (expression)



state 256

    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression SRR expression .   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    OR  	[reduce using rule 161 (expression)]
    AND 	[reduce using rule 161 (expression)]
    SUBSTR_EQ	[reduce using rule 161 (expression)]
    SUBSTR_NEQ	[reduce using rule 161 (expression)]
    REGEX_EQ	[reduce using rule 161 (expression)]
    REGEX_NEQ	[reduce using rule 161 (expression)]
    POWER	[reduce using rule 161 (expression)]
    CMP_EQ	[reduce using rule 161 (expression)]
    CMP_GE	[reduce using rule 161 (expression)]
    CMP_LE	[reduce using rule 161 (expression)]
    CMP_NEQ	[reduce using rule 161 (expression)]
    SL  	[reduce using rule 161 (expression)]
    SR  	[reduce using rule 161 (expression)]
    SRR 	[reduce using rule 161 (expression)]
    '&' 	[reduce using rule 161 (expression)]
    '+' 	[reduce using rule 161 (expression)]
    '-' 	[reduce using rule 161 (expression)]
    '*' 	[reduce using rule 161 (expression)]
    '/' 	[reduce using rule 161 (expression)]
    '%' 	[reduce using rule 161 (expression)]
    '^' 	[reduce using rule 161 (expression)]
    '|' 	[reduce using rule 161 (expression)]
    '<' 	[reduce using rule 161 (expression)]
    '>' 	[reduce using rule 161 (expression)]
    $default	reduce using rule 161 (expression)



state 257

    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression '&' expression .   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    OR  	[reduce using rule 156 (expression)]
    AND 	[reduce using rule 156 (expression)]
    SUBSTR_EQ	[reduce using rule 156 (expression)]
    SUBSTR_NEQ	[reduce using rule 156 (expression)]
    REGEX_EQ	[reduce using rule 156 (expression)]
    REGEX_NEQ	[reduce using rule 156 (expression)]
    POWER	[reduce using rule 156 (expression)]
    CMP_EQ	[reduce using rule 156 (expression)]
    CMP_GE	[reduce using rule 156 (expression)]
    CMP_LE	[reduce using rule 156 (expression)]
    CMP_NEQ	[reduce using rule 156 (expression)]
    SL  	[reduce using rule 156 (expression)]
    SR  	[reduce using rule 156 (expression)]
    SRR 	[reduce using rule 156 (expression)]
    '&' 	[reduce using rule 156 (expression)]
    '+' 	[reduce using rule 156 (expression)]
    '-' 	[reduce using rule 156 (expression)]
    '*' 	[reduce using rule 156 (expression)]
    '/' 	[reduce using rule 156 (expression)]
    '%' 	[reduce using rule 156 (expression)]
    '^' 	[reduce using rule 156 (expression)]
    '|' 	[reduce using rule 156 (expression)]
    '<' 	[reduce using rule 156 (expression)]
    '>' 	[reduce using rule 156 (expression)]
    $default	reduce using rule 156 (expression)



state 258

    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression '+' expression .   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    OR  	[reduce using rule 149 (expression)]
    AND 	[reduce using rule 149 (expression)]
    SUBSTR_EQ	[reduce using rule 149 (expression)]
    SUBSTR_NEQ	[reduce using rule 149 (expression)]
    REGEX_EQ	[reduce using rule 149 (expression)]
    REGEX_NEQ	[reduce using rule 149 (expression)]
    POWER	[reduce using rule 149 (expression)]
    CMP_EQ	[reduce using rule 149 (expression)]
    CMP_GE	[reduce using rule 149 (expression)]
    CMP_LE	[reduce using rule 149 (expression)]
    CMP_NEQ	[reduce using rule 149 (expression)]
    SL  	[reduce using rule 149 (expression)]
    SR  	[reduce using rule 149 (expression)]
    SRR 	[reduce using rule 149 (expression)]
    '&' 	[reduce using rule 149 (expression)]
    '+' 	[reduce using rule 149 (expression)]
    '-' 	[reduce using rule 149 (expression)]
    '*' 	[reduce using rule 149 (expression)]
    '/' 	[reduce using rule 149 (expression)]
    '%' 	[reduce using rule 149 (expression)]
    '^' 	[reduce using rule 149 (expression)]
    '|' 	[reduce using rule 149 (expression)]
    '<' 	[reduce using rule 149 (expression)]
    '>' 	[reduce using rule 149 (expression)]
    $default	reduce using rule 149 (expression)



state 259

    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression '-' expression .   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    OR  	[reduce using rule 150 (expression)]
    AND 	[reduce using rule 150 (expression)]
    SUBSTR_EQ	[reduce using rule 150 (expression)]
    SUBSTR_NEQ	[reduce using rule 150 (expression)]
    REGEX_EQ	[reduce using rule 150 (expression)]
    REGEX_NEQ	[reduce using rule 150 (expression)]
    POWER	[reduce using rule 150 (expression)]
    CMP_EQ	[reduce using rule 150 (expression)]
    CMP_GE	[reduce using rule 150 (expression)]
    CMP_LE	[reduce using rule 150 (expression)]
    CMP_NEQ	[reduce using rule 150 (expression)]
    SL  	[reduce using rule 150 (expression)]
    SR  	[reduce using rule 150 (expression)]
    SRR 	[reduce using rule 150 (expression)]
    '&' 	[reduce using rule 150 (expression)]
    '+' 	[reduce using rule 150 (expression)]
    '-' 	[reduce using rule 150 (expression)]
    '*' 	[reduce using rule 150 (expression)]
    '/' 	[reduce using rule 150 (expression)]
    '%' 	[reduce using rule 150 (expression)]
    '^' 	[reduce using rule 150 (expression)]
    '|' 	[reduce using rule 150 (expression)]
    '<' 	[reduce using rule 150 (expression)]
    '>' 	[reduce using rule 150 (expression)]
    $default	reduce using rule 150 (expression)



state 260

    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression '*' expression .   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    OR  	[reduce using rule 152 (expression)]
    AND 	[reduce using rule 152 (expression)]
    SUBSTR_EQ	[reduce using rule 152 (expression)]
    SUBSTR_NEQ	[reduce using rule 152 (expression)]
    REGEX_EQ	[reduce using rule 152 (expression)]
    REGEX_NEQ	[reduce using rule 152 (expression)]
    POWER	[reduce using rule 152 (expression)]
    CMP_EQ	[reduce using rule 152 (expression)]
    CMP_GE	[reduce using rule 152 (expression)]
    CMP_LE	[reduce using rule 152 (expression)]
    CMP_NEQ	[reduce using rule 152 (expression)]
    SL  	[reduce using rule 152 (expression)]
    SR  	[reduce using rule 152 (expression)]
    SRR 	[reduce using rule 152 (expression)]
    '&' 	[reduce using rule 152 (expression)]
    '+' 	[reduce using rule 152 (expression)]
    '-' 	[reduce using rule 152 (expression)]
    '*' 	[reduce using rule 152 (expression)]
    '/' 	[reduce using rule 152 (expression)]
    '%' 	[reduce using rule 152 (expression)]
    '^' 	[reduce using rule 152 (expression)]
    '|' 	[reduce using rule 152 (expression)]
    '<' 	[reduce using rule 152 (expression)]
    '>' 	[reduce using rule 152 (expression)]
    $default	reduce using rule 152 (expression)



state 261

    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression '/' expression .   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    OR  	[reduce using rule 154 (expression)]
    AND 	[reduce using rule 154 (expression)]
    SUBSTR_EQ	[reduce using rule 154 (expression)]
    SUBSTR_NEQ	[reduce using rule 154 (expression)]
    REGEX_EQ	[reduce using rule 154 (expression)]
    REGEX_NEQ	[reduce using rule 154 (expression)]
    POWER	[reduce using rule 154 (expression)]
    CMP_EQ	[reduce using rule 154 (expression)]
    CMP_GE	[reduce using rule 154 (expression)]
    CMP_LE	[reduce using rule 154 (expression)]
    CMP_NEQ	[reduce using rule 154 (expression)]
    SL  	[reduce using rule 154 (expression)]
    SR  	[reduce using rule 154 (expression)]
    SRR 	[reduce using rule 154 (expression)]
    '&' 	[reduce using rule 154 (expression)]
    '+' 	[reduce using rule 154 (expression)]
    '-' 	[reduce using rule 154 (expression)]
    '*' 	[reduce using rule 154 (expression)]
    '/' 	[reduce using rule 154 (expression)]
    '%' 	[reduce using rule 154 (expression)]
    '^' 	[reduce using rule 154 (expression)]
    '|' 	[reduce using rule 154 (expression)]
    '<' 	[reduce using rule 154 (expression)]
    '>' 	[reduce using rule 154 (expression)]
    $default	reduce using rule 154 (expression)



state 262

    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression '%' expression .   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    OR  	[reduce using rule 155 (expression)]
    AND 	[reduce using rule 155 (expression)]
    SUBSTR_EQ	[reduce using rule 155 (expression)]
    SUBSTR_NEQ	[reduce using rule 155 (expression)]
    REGEX_EQ	[reduce using rule 155 (expression)]
    REGEX_NEQ	[reduce using rule 155 (expression)]
    POWER	[reduce using rule 155 (expression)]
    CMP_EQ	[reduce using rule 155 (expression)]
    CMP_GE	[reduce using rule 155 (expression)]
    CMP_LE	[reduce using rule 155 (expression)]
    CMP_NEQ	[reduce using rule 155 (expression)]
    SL  	[reduce using rule 155 (expression)]
    SR  	[reduce using rule 155 (expression)]
    SRR 	[reduce using rule 155 (expression)]
    '&' 	[reduce using rule 155 (expression)]
    '+' 	[reduce using rule 155 (expression)]
    '-' 	[reduce using rule 155 (expression)]
    '*' 	[reduce using rule 155 (expression)]
    '/' 	[reduce using rule 155 (expression)]
    '%' 	[reduce using rule 155 (expression)]
    '^' 	[reduce using rule 155 (expression)]
    '|' 	[reduce using rule 155 (expression)]
    '<' 	[reduce using rule 155 (expression)]
    '>' 	[reduce using rule 155 (expression)]
    $default	reduce using rule 155 (expression)



state 263

    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression '^' expression .   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    OR  	[reduce using rule 157 (expression)]
    AND 	[reduce using rule 157 (expression)]
    SUBSTR_EQ	[reduce using rule 157 (expression)]
    SUBSTR_NEQ	[reduce using rule 157 (expression)]
    REGEX_EQ	[reduce using rule 157 (expression)]
    REGEX_NEQ	[reduce using rule 157 (expression)]
    POWER	[reduce using rule 157 (expression)]
    CMP_EQ	[reduce using rule 157 (expression)]
    CMP_GE	[reduce using rule 157 (expression)]
    CMP_LE	[reduce using rule 157 (expression)]
    CMP_NEQ	[reduce using rule 157 (expression)]
    SL  	[reduce using rule 157 (expression)]
    SR  	[reduce using rule 157 (expression)]
    SRR 	[reduce using rule 157 (expression)]
    '&' 	[reduce using rule 157 (expression)]
    '+' 	[reduce using rule 157 (expression)]
    '-' 	[reduce using rule 157 (expression)]
    '*' 	[reduce using rule 157 (expression)]
    '/' 	[reduce using rule 157 (expression)]
    '%' 	[reduce using rule 157 (expression)]
    '^' 	[reduce using rule 157 (expression)]
    '|' 	[reduce using rule 157 (expression)]
    '<' 	[reduce using rule 157 (expression)]
    '>' 	[reduce using rule 157 (expression)]
    $default	reduce using rule 157 (expression)



state 264

    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression '|' expression .   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    OR  	[reduce using rule 158 (expression)]
    AND 	[reduce using rule 158 (expression)]
    SUBSTR_EQ	[reduce using rule 158 (expression)]
    SUBSTR_NEQ	[reduce using rule 158 (expression)]
    REGEX_EQ	[reduce using rule 158 (expression)]
    REGEX_NEQ	[reduce using rule 158 (expression)]
    POWER	[reduce using rule 158 (expression)]
    CMP_EQ	[reduce using rule 158 (expression)]
    CMP_GE	[reduce using rule 158 (expression)]
    CMP_LE	[reduce using rule 158 (expression)]
    CMP_NEQ	[reduce using rule 158 (expression)]
    SL  	[reduce using rule 158 (expression)]
    SR  	[reduce using rule 158 (expression)]
    SRR 	[reduce using rule 158 (expression)]
    '&' 	[reduce using rule 158 (expression)]
    '+' 	[reduce using rule 158 (expression)]
    '-' 	[reduce using rule 158 (expression)]
    '*' 	[reduce using rule 158 (expression)]
    '/' 	[reduce using rule 158 (expression)]
    '%' 	[reduce using rule 158 (expression)]
    '^' 	[reduce using rule 158 (expression)]
    '|' 	[reduce using rule 158 (expression)]
    '<' 	[reduce using rule 158 (expression)]
    '>' 	[reduce using rule 158 (expression)]
    $default	reduce using rule 158 (expression)



state 265

    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression '<' expression .   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    OR  	[reduce using rule 166 (expression)]
    AND 	[reduce using rule 166 (expression)]
    SUBSTR_EQ	[reduce using rule 166 (expression)]
    SUBSTR_NEQ	[reduce using rule 166 (expression)]
    REGEX_EQ	[reduce using rule 166 (expression)]
    REGEX_NEQ	[reduce using rule 166 (expression)]
    POWER	[reduce using rule 166 (expression)]
    CMP_EQ	[reduce using rule 166 (expression)]
    CMP_GE	[reduce using rule 166 (expression)]
    CMP_LE	[reduce using rule 166 (expression)]
    CMP_NEQ	[reduce using rule 166 (expression)]
    SL  	[reduce using rule 166 (expression)]
    SR  	[reduce using rule 166 (expression)]
    SRR 	[reduce using rule 166 (expression)]
    '&' 	[reduce using rule 166 (expression)]
    '+' 	[reduce using rule 166 (expression)]
    '-' 	[reduce using rule 166 (expression)]
    '*' 	[reduce using rule 166 (expression)]
    '/' 	[reduce using rule 166 (expression)]
    '%' 	[reduce using rule 166 (expression)]
    '^' 	[reduce using rule 166 (expression)]
    '|' 	[reduce using rule 166 (expression)]
    '<' 	[reduce using rule 166 (expression)]
    '>' 	[reduce using rule 166 (expression)]
    $default	reduce using rule 166 (expression)



state 266

    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression '>' expression .   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    OR  	[reduce using rule 167 (expression)]
    AND 	[reduce using rule 167 (expression)]
    SUBSTR_EQ	[reduce using rule 167 (expression)]
    SUBSTR_NEQ	[reduce using rule 167 (expression)]
    REGEX_EQ	[reduce using rule 167 (expression)]
    REGEX_NEQ	[reduce using rule 167 (expression)]
    POWER	[reduce using rule 167 (expression)]
    CMP_EQ	[reduce using rule 167 (expression)]
    CMP_GE	[reduce using rule 167 (expression)]
    CMP_LE	[reduce using rule 167 (expression)]
    CMP_NEQ	[reduce using rule 167 (expression)]
    SL  	[reduce using rule 167 (expression)]
    SR  	[reduce using rule 167 (expression)]
    SRR 	[reduce using rule 167 (expression)]
    '&' 	[reduce using rule 167 (expression)]
    '+' 	[reduce using rule 167 (expression)]
    '-' 	[reduce using rule 167 (expression)]
    '*' 	[reduce using rule 167 (expression)]
    '/' 	[reduce using rule 167 (expression)]
    '%' 	[reduce using rule 167 (expression)]
    '^' 	[reduce using rule 167 (expression)]
    '|' 	[reduce using rule 167 (expression)]
    '<' 	[reduce using rule 167 (expression)]
    '>' 	[reduce using rule 167 (expression)]
    $default	reduce using rule 167 (expression)



state 267

    for_loop  ->  FOR '(' if_expr ';' . if_expr ';' if_expr ')' block   (rule 96)
    for_loop  ->  FOR '(' if_expr ';' . if_expr ';' if_expr ')' command   (rule 97)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    '(' 	shift, and go to state 125
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    assign	go to state 126
    inc_dec_exp	go to state 127
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 128
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    if_expr	go to state 304
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 130



state 268

    foreach_loop  ->  FOREACH '(' identifier IN_ITER . if_expr ')' block   (rule 100)
    foreach_loop  ->  FOREACH '(' identifier IN_ITER . if_expr ')' command   (rule 101)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    '(' 	shift, and go to state 125
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    assign	go to state 126
    inc_dec_exp	go to state 127
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 128
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    if_expr	go to state 305
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 130



state 269

    foreach_loop  ->  FOREACH identifier '(' if_expr . ')' block   (rule 98)
    foreach_loop  ->  FOREACH identifier '(' if_expr . ')' command   (rule 99)

    ')' 	shift, and go to state 306



state 270

    while_loop  ->  WHILE '(' if_expr ')' . block   (rule 104)
    while_loop  ->  WHILE '(' if_expr ')' . command   (rule 105)

    LOCAL	shift, and go to state 2
    GLOBAL	shift, and go to state 3
    IF  	shift, and go to state 4
    INCLUDE	shift, and go to state 5
    IMPORT	shift, and go to state 7
    RETURN	shift, and go to state 8
    BREAK	shift, and go to state 9
    CONTINUE	shift, and go to state 10
    FOR 	shift, and go to state 11
    FOREACH	shift, and go to state 12
    IN_ITER	shift, and go to state 13
    WHILE	shift, and go to state 14
    REPEAT	shift, and go to state 15
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    '(' 	shift, and go to state 20
    ';' 	shift, and go to state 21
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 23

    command	go to state 307
    simple	go to state 29
    break	go to state 30
    continue	go to state 31
    import	go to state 32
    include	go to state 33
    return	go to state 34
    empty	go to state 35
    global	go to state 36
    local	go to state 37
    rep 	go to state 38
    call_function	go to state 39
    assign	go to state 40
    inc_dec_exp	go to state 41
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 44
    compound	go to state 45
    for_loop	go to state 46
    foreach_loop	go to state 47
    repeat_loop	go to state 48
    while_loop	go to state 49
    if_cond	go to state 50
    block	go to state 308



state 271

    repeat_loop  ->  REPEAT command UNTIL if_expr . ';'   (rule 103)

    ';' 	shift, and go to state 309



state 272

    repeat_loop  ->  REPEAT block UNTIL if_expr . ';'   (rule 102)

    ';' 	shift, and go to state 310



state 273

    rep  ->  call_function REP identifier ';' .   (rule 42)

    $default	reduce using rule 42 (rep)



state 274

    rep  ->  call_function REP integer ';' .   (rule 41)

    $default	reduce using rule 41 (rep)



state 275

    parameter  ->  '&' identifier .   (rule 14)

    $default	reduce using rule 14 (parameter)



state 276

    call_function  ->  identifier '(' parameters ')' .   (rule 43)

    $default	reduce using rule 43 (call_function)



state 277

    parameters  ->  parameter ',' . parameters   (rule 12)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 125
    '&' 	shift, and go to state 202
    '@' 	shift, and go to state 135
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    '&' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    parameters	go to state 311
    parameter	go to state 204
    call_function	go to state 73
    assign	go to state 205
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 206
    integer	go to state 137
    string	go to state 138
    ip  	go to state 77
    null	go to state 78
    ref 	go to state 139
    body	go to state 95
    body_sq	go to state 80
    argument	go to state 207
    expression	go to state 142



state 278

    call_function  ->  identifier body_enum_sq . '(' ')'   (rule 45)
    call_function  ->  identifier body_enum_sq . '(' parameters ')'   (rule 46)
    call_function  ->  identifier body_enum_sq . body_enum_p '(' ')'   (rule 47)
    call_function  ->  identifier body_enum_sq . body_enum_p '(' parameters ')'   (rule 48)
    assign  ->  identifier body_enum_sq . '=' value   (rule 55)
    assign  ->  identifier body_enum_sq . '=' list_int   (rule 57)
    assign  ->  identifier body_enum_sq . '=' assign   (rule 58)
    assign  ->  identifier body_enum_sq . '=' ref   (rule 59)
    body_enum_sq  ->  body_enum_sq . body_sq   (rule 122)
    expression  ->  identifier body_enum_sq .   (rule 182)

    '(' 	shift, and go to state 217
    '=' 	shift, and go to state 218
    '.' 	shift, and go to state 115
    '[' 	shift, and go to state 69

    '(' 	[reduce using rule 182 (expression)]
    '=' 	[reduce using rule 182 (expression)]
    $default	reduce using rule 182 (expression)

    body_sq	go to state 219
    body_p	go to state 118
    body_enum_p	go to state 220



state 279

    list_int  ->  integer ',' . integer   (rule 133)

    INT 	shift, and go to state 61
    FALSE	shift, and go to state 63
    TRUE	shift, and go to state 65

    integer	go to state 312



state 280

    list_int  ->  list_int ',' . integer   (rule 132)

    INT 	shift, and go to state 61
    FALSE	shift, and go to state 63
    TRUE	shift, and go to state 65

    integer	go to state 313



state 281

    call_function  ->  identifier body_enum_sq '(' ')' .   (rule 45)

    $default	reduce using rule 45 (call_function)



state 282

    call_function  ->  identifier body_enum_sq '(' parameters . ')'   (rule 46)

    ')' 	shift, and go to state 314



state 283

    assign  ->  identifier body_enum_sq '=' assign .   (rule 58)

    $default	reduce using rule 58 (assign)



state 284

    assign  ->  identifier body_enum_sq '=' value .   (rule 55)

    $default	reduce using rule 55 (assign)



state 285

    assign  ->  identifier body_enum_sq '=' ref .   (rule 59)

    $default	reduce using rule 59 (assign)



state 286

    assign  ->  identifier body_enum_sq '=' list_int .   (rule 57)
    list_int  ->  list_int . ',' integer   (rule 132)

    ',' 	shift, and go to state 280

    ',' 	[reduce using rule 57 (assign)]
    $default	reduce using rule 57 (assign)



state 287

    call_function  ->  identifier body_enum_sq body_enum_p '(' . ')'   (rule 47)
    call_function  ->  identifier body_enum_sq body_enum_p '(' . parameters ')'   (rule 48)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    '(' 	shift, and go to state 125
    ')' 	shift, and go to state 315
    '&' 	shift, and go to state 202
    '@' 	shift, and go to state 135
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    ')' 	[reduce using rule 144 (expression)]
    '&' 	[reduce using rule 144 (expression)]
    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    parameters	go to state 316
    parameter	go to state 204
    call_function	go to state 73
    assign	go to state 205
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 206
    integer	go to state 137
    string	go to state 138
    ip  	go to state 77
    null	go to state 78
    ref 	go to state 139
    body	go to state 95
    body_sq	go to state 80
    argument	go to state 207
    expression	go to state 142



state 288

    call_function  ->  identifier body_enum_p '(' ')' .   (rule 49)

    $default	reduce using rule 49 (call_function)



state 289

    call_function  ->  identifier body_enum_p '(' parameters . ')'   (rule 50)

    ')' 	shift, and go to state 317



state 290

    function  ->  FUNCTION identifier '(' ')' block .   (rule 11)

    $default	reduce using rule 11 (function)



state 291

    function  ->  FUNCTION identifier '(' parameters ')' . block   (rule 10)

    '{' 	shift, and go to state 23

    block	go to state 318



state 292

    compound  ->  command . ELSE   (rule 95)
    if_cond  ->  IF '(' if_expr ')' command .   (rule 110)
    if_cond  ->  IF '(' if_expr ')' command . ELSE command   (rule 112)
    if_cond  ->  IF '(' if_expr ')' command . ELSE block   (rule 114)

    ELSE	shift, and go to state 319

    ELSE	[reduce using rule 110 (if_cond)]
    $default	reduce using rule 110 (if_cond)



state 293

    if_cond  ->  IF '(' if_expr ')' block .   (rule 109)
    if_cond  ->  IF '(' if_expr ')' block . ELSE command   (rule 111)
    if_cond  ->  IF '(' if_expr ')' block . ELSE block   (rule 113)

    ELSE	shift, and go to state 320

    ELSE	[reduce using rule 109 (if_cond)]
    $default	reduce using rule 109 (if_cond)



state 294

    include  ->  INCLUDE '(' string ')' ';' .   (rule 34)

    $default	reduce using rule 34 (include)



state 295

    import  ->  IMPORT '(' string ')' ';' .   (rule 33)

    $default	reduce using rule 33 (import)



state 296

    argument  ->  identifier ':' ref .   (rule 141)

    $default	reduce using rule 141 (argument)



state 297

    argument  ->  identifier ':' expression .   (rule 140)
    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    $default	reduce using rule 140 (argument)



state 298

    argument  ->  integer ':' ref .   (rule 139)

    $default	reduce using rule 139 (argument)



state 299

    argument  ->  integer ':' expression .   (rule 137)
    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    $default	reduce using rule 137 (argument)



state 300

    argument  ->  string ':' ref .   (rule 138)

    $default	reduce using rule 138 (argument)



state 301

    argument  ->  string ':' expression .   (rule 136)
    expression  ->  expression . AND expression   (rule 146)
    expression  ->  expression . OR expression   (rule 148)
    expression  ->  expression . '+' expression   (rule 149)
    expression  ->  expression . '-' expression   (rule 150)
    expression  ->  expression . '*' expression   (rule 152)
    expression  ->  expression . POWER expression   (rule 153)
    expression  ->  expression . '/' expression   (rule 154)
    expression  ->  expression . '%' expression   (rule 155)
    expression  ->  expression . '&' expression   (rule 156)
    expression  ->  expression . '^' expression   (rule 157)
    expression  ->  expression . '|' expression   (rule 158)
    expression  ->  expression . SR expression   (rule 159)
    expression  ->  expression . SL expression   (rule 160)
    expression  ->  expression . SRR expression   (rule 161)
    expression  ->  expression . SUBSTR_EQ expression   (rule 162)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 163)
    expression  ->  expression . REGEX_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_EQ expression   (rule 165)
    expression  ->  expression . '<' expression   (rule 166)
    expression  ->  expression . '>' expression   (rule 167)
    expression  ->  expression . CMP_GE expression   (rule 168)
    expression  ->  expression . CMP_LE expression   (rule 169)
    expression  ->  expression . CMP_EQ expression   (rule 170)
    expression  ->  expression . CMP_NEQ expression   (rule 171)

    OR  	shift, and go to state 155
    AND 	shift, and go to state 156
    SUBSTR_EQ	shift, and go to state 157
    SUBSTR_NEQ	shift, and go to state 158
    REGEX_EQ	shift, and go to state 159
    REGEX_NEQ	shift, and go to state 160
    POWER	shift, and go to state 161
    CMP_EQ	shift, and go to state 162
    CMP_GE	shift, and go to state 163
    CMP_LE	shift, and go to state 164
    CMP_NEQ	shift, and go to state 165
    SL  	shift, and go to state 166
    SR  	shift, and go to state 167
    SRR 	shift, and go to state 168
    '&' 	shift, and go to state 169
    '+' 	shift, and go to state 171
    '-' 	shift, and go to state 172
    '*' 	shift, and go to state 173
    '/' 	shift, and go to state 174
    '%' 	shift, and go to state 175
    '^' 	shift, and go to state 176
    '|' 	shift, and go to state 177
    '<' 	shift, and go to state 178
    '>' 	shift, and go to state 179

    $default	reduce using rule 136 (argument)



state 302

    argument_list  ->  argument_list ',' argument .   (rule 134)

    $default	reduce using rule 134 (argument_list)



state 303

    ip  ->  integer '.' integer '.' . integer '.' integer   (rule 87)

    INT 	shift, and go to state 61
    FALSE	shift, and go to state 63
    TRUE	shift, and go to state 65

    integer	go to state 321



state 304

    for_loop  ->  FOR '(' if_expr ';' if_expr . ';' if_expr ')' block   (rule 96)
    for_loop  ->  FOR '(' if_expr ';' if_expr . ';' if_expr ')' command   (rule 97)

    ';' 	shift, and go to state 322



state 305

    foreach_loop  ->  FOREACH '(' identifier IN_ITER if_expr . ')' block   (rule 100)
    foreach_loop  ->  FOREACH '(' identifier IN_ITER if_expr . ')' command   (rule 101)

    ')' 	shift, and go to state 323



state 306

    foreach_loop  ->  FOREACH identifier '(' if_expr ')' . block   (rule 98)
    foreach_loop  ->  FOREACH identifier '(' if_expr ')' . command   (rule 99)

    LOCAL	shift, and go to state 2
    GLOBAL	shift, and go to state 3
    IF  	shift, and go to state 4
    INCLUDE	shift, and go to state 5
    IMPORT	shift, and go to state 7
    RETURN	shift, and go to state 8
    BREAK	shift, and go to state 9
    CONTINUE	shift, and go to state 10
    FOR 	shift, and go to state 11
    FOREACH	shift, and go to state 12
    IN_ITER	shift, and go to state 13
    WHILE	shift, and go to state 14
    REPEAT	shift, and go to state 15
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    '(' 	shift, and go to state 20
    ';' 	shift, and go to state 21
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 23

    command	go to state 324
    simple	go to state 29
    break	go to state 30
    continue	go to state 31
    import	go to state 32
    include	go to state 33
    return	go to state 34
    empty	go to state 35
    global	go to state 36
    local	go to state 37
    rep 	go to state 38
    call_function	go to state 39
    assign	go to state 40
    inc_dec_exp	go to state 41
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 44
    compound	go to state 45
    for_loop	go to state 46
    foreach_loop	go to state 47
    repeat_loop	go to state 48
    while_loop	go to state 49
    if_cond	go to state 50
    block	go to state 325



state 307

    compound  ->  command . ELSE   (rule 95)
    while_loop  ->  WHILE '(' if_expr ')' command .   (rule 105)

    ELSE	shift, and go to state 100

    ELSE	[reduce using rule 105 (while_loop)]
    $default	reduce using rule 105 (while_loop)



state 308

    while_loop  ->  WHILE '(' if_expr ')' block .   (rule 104)

    $default	reduce using rule 104 (while_loop)



state 309

    repeat_loop  ->  REPEAT command UNTIL if_expr ';' .   (rule 103)

    $default	reduce using rule 103 (repeat_loop)



state 310

    repeat_loop  ->  REPEAT block UNTIL if_expr ';' .   (rule 102)

    $default	reduce using rule 102 (repeat_loop)



state 311

    parameters  ->  parameter ',' parameters .   (rule 12)

    $default	reduce using rule 12 (parameters)



state 312

    list_int  ->  integer ',' integer .   (rule 133)

    $default	reduce using rule 133 (list_int)



state 313

    list_int  ->  list_int ',' integer .   (rule 132)

    $default	reduce using rule 132 (list_int)



state 314

    call_function  ->  identifier body_enum_sq '(' parameters ')' .   (rule 46)

    $default	reduce using rule 46 (call_function)



state 315

    call_function  ->  identifier body_enum_sq body_enum_p '(' ')' .   (rule 47)

    $default	reduce using rule 47 (call_function)



state 316

    call_function  ->  identifier body_enum_sq body_enum_p '(' parameters . ')'   (rule 48)

    ')' 	shift, and go to state 326



state 317

    call_function  ->  identifier body_enum_p '(' parameters ')' .   (rule 50)

    $default	reduce using rule 50 (call_function)



state 318

    function  ->  FUNCTION identifier '(' parameters ')' block .   (rule 10)

    $default	reduce using rule 10 (function)



state 319

    compound  ->  command ELSE .   (rule 95)
    if_cond  ->  IF '(' if_expr ')' command ELSE . command   (rule 112)
    if_cond  ->  IF '(' if_expr ')' command ELSE . block   (rule 114)

    LOCAL	shift, and go to state 2
    GLOBAL	shift, and go to state 3
    IF  	shift, and go to state 4
    INCLUDE	shift, and go to state 5
    IMPORT	shift, and go to state 7
    RETURN	shift, and go to state 8
    BREAK	shift, and go to state 9
    CONTINUE	shift, and go to state 10
    FOR 	shift, and go to state 11
    FOREACH	shift, and go to state 12
    IN_ITER	shift, and go to state 13
    WHILE	shift, and go to state 14
    REPEAT	shift, and go to state 15
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    '(' 	shift, and go to state 20
    ';' 	shift, and go to state 21
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 23

    LOCAL	[reduce using rule 95 (compound)]
    GLOBAL	[reduce using rule 95 (compound)]
    IF  	[reduce using rule 95 (compound)]
    INCLUDE	[reduce using rule 95 (compound)]
    IMPORT	[reduce using rule 95 (compound)]
    RETURN	[reduce using rule 95 (compound)]
    BREAK	[reduce using rule 95 (compound)]
    CONTINUE	[reduce using rule 95 (compound)]
    FOR 	[reduce using rule 95 (compound)]
    FOREACH	[reduce using rule 95 (compound)]
    IN_ITER	[reduce using rule 95 (compound)]
    WHILE	[reduce using rule 95 (compound)]
    REPEAT	[reduce using rule 95 (compound)]
    REP 	[reduce using rule 95 (compound)]
    IDENT	[reduce using rule 95 (compound)]
    DEC 	[reduce using rule 95 (compound)]
    INC 	[reduce using rule 95 (compound)]
    '(' 	[reduce using rule 95 (compound)]
    ';' 	[reduce using rule 95 (compound)]
    '=' 	[reduce using rule 95 (compound)]
    '{' 	[reduce using rule 95 (compound)]
    $default	reduce using rule 95 (compound)

    command	go to state 327
    simple	go to state 29
    break	go to state 30
    continue	go to state 31
    import	go to state 32
    include	go to state 33
    return	go to state 34
    empty	go to state 35
    global	go to state 36
    local	go to state 37
    rep 	go to state 38
    call_function	go to state 39
    assign	go to state 40
    inc_dec_exp	go to state 41
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 44
    compound	go to state 45
    for_loop	go to state 46
    foreach_loop	go to state 47
    repeat_loop	go to state 48
    while_loop	go to state 49
    if_cond	go to state 50
    block	go to state 328



state 320

    if_cond  ->  IF '(' if_expr ')' block ELSE . command   (rule 111)
    if_cond  ->  IF '(' if_expr ')' block ELSE . block   (rule 113)

    LOCAL	shift, and go to state 2
    GLOBAL	shift, and go to state 3
    IF  	shift, and go to state 4
    INCLUDE	shift, and go to state 5
    IMPORT	shift, and go to state 7
    RETURN	shift, and go to state 8
    BREAK	shift, and go to state 9
    CONTINUE	shift, and go to state 10
    FOR 	shift, and go to state 11
    FOREACH	shift, and go to state 12
    IN_ITER	shift, and go to state 13
    WHILE	shift, and go to state 14
    REPEAT	shift, and go to state 15
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    '(' 	shift, and go to state 20
    ';' 	shift, and go to state 21
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 23

    command	go to state 329
    simple	go to state 29
    break	go to state 30
    continue	go to state 31
    import	go to state 32
    include	go to state 33
    return	go to state 34
    empty	go to state 35
    global	go to state 36
    local	go to state 37
    rep 	go to state 38
    call_function	go to state 39
    assign	go to state 40
    inc_dec_exp	go to state 41
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 44
    compound	go to state 45
    for_loop	go to state 46
    foreach_loop	go to state 47
    repeat_loop	go to state 48
    while_loop	go to state 49
    if_cond	go to state 50
    block	go to state 330



state 321

    ip  ->  integer '.' integer '.' integer . '.' integer   (rule 87)

    '.' 	shift, and go to state 331



state 322

    for_loop  ->  FOR '(' if_expr ';' if_expr ';' . if_expr ')' block   (rule 96)
    for_loop  ->  FOR '(' if_expr ';' if_expr ';' . if_expr ')' command   (rule 97)

    IN_ITER	shift, and go to state 13
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 61
    STRING	shift, and go to state 62
    FALSE	shift, and go to state 63
    _NULL_	shift, and go to state 64
    TRUE	shift, and go to state 65
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    '(' 	shift, and go to state 125
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 68
    '[' 	shift, and go to state 69
    '!' 	shift, and go to state 70
    '-' 	shift, and go to state 71
    '~' 	shift, and go to state 72

    '-' 	[reduce using rule 144 (expression)]
    $default	reduce using rule 144 (expression)

    call_function	go to state 73
    assign	go to state 126
    inc_dec_exp	go to state 127
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 128
    integer	go to state 75
    string	go to state 76
    ip  	go to state 77
    null	go to state 78
    if_expr	go to state 332
    body	go to state 95
    body_sq	go to state 80
    expression	go to state 130



state 323

    foreach_loop  ->  FOREACH '(' identifier IN_ITER if_expr ')' . block   (rule 100)
    foreach_loop  ->  FOREACH '(' identifier IN_ITER if_expr ')' . command   (rule 101)

    LOCAL	shift, and go to state 2
    GLOBAL	shift, and go to state 3
    IF  	shift, and go to state 4
    INCLUDE	shift, and go to state 5
    IMPORT	shift, and go to state 7
    RETURN	shift, and go to state 8
    BREAK	shift, and go to state 9
    CONTINUE	shift, and go to state 10
    FOR 	shift, and go to state 11
    FOREACH	shift, and go to state 12
    IN_ITER	shift, and go to state 13
    WHILE	shift, and go to state 14
    REPEAT	shift, and go to state 15
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    '(' 	shift, and go to state 20
    ';' 	shift, and go to state 21
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 23

    command	go to state 333
    simple	go to state 29
    break	go to state 30
    continue	go to state 31
    import	go to state 32
    include	go to state 33
    return	go to state 34
    empty	go to state 35
    global	go to state 36
    local	go to state 37
    rep 	go to state 38
    call_function	go to state 39
    assign	go to state 40
    inc_dec_exp	go to state 41
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 44
    compound	go to state 45
    for_loop	go to state 46
    foreach_loop	go to state 47
    repeat_loop	go to state 48
    while_loop	go to state 49
    if_cond	go to state 50
    block	go to state 334



state 324

    compound  ->  command . ELSE   (rule 95)
    foreach_loop  ->  FOREACH identifier '(' if_expr ')' command .   (rule 99)

    ELSE	shift, and go to state 100

    ELSE	[reduce using rule 99 (foreach_loop)]
    $default	reduce using rule 99 (foreach_loop)



state 325

    foreach_loop  ->  FOREACH identifier '(' if_expr ')' block .   (rule 98)

    $default	reduce using rule 98 (foreach_loop)



state 326

    call_function  ->  identifier body_enum_sq body_enum_p '(' parameters ')' .   (rule 48)

    $default	reduce using rule 48 (call_function)



state 327

    compound  ->  command . ELSE   (rule 95)
    if_cond  ->  IF '(' if_expr ')' command ELSE command .   (rule 112)

    ELSE	shift, and go to state 100

    ELSE	[reduce using rule 112 (if_cond)]
    $default	reduce using rule 112 (if_cond)



state 328

    if_cond  ->  IF '(' if_expr ')' command ELSE block .   (rule 114)

    $default	reduce using rule 114 (if_cond)



state 329

    compound  ->  command . ELSE   (rule 95)
    if_cond  ->  IF '(' if_expr ')' block ELSE command .   (rule 111)

    ELSE	shift, and go to state 100

    ELSE	[reduce using rule 111 (if_cond)]
    $default	reduce using rule 111 (if_cond)



state 330

    if_cond  ->  IF '(' if_expr ')' block ELSE block .   (rule 113)

    $default	reduce using rule 113 (if_cond)



state 331

    ip  ->  integer '.' integer '.' integer '.' . integer   (rule 87)

    INT 	shift, and go to state 61
    FALSE	shift, and go to state 63
    TRUE	shift, and go to state 65

    integer	go to state 335



state 332

    for_loop  ->  FOR '(' if_expr ';' if_expr ';' if_expr . ')' block   (rule 96)
    for_loop  ->  FOR '(' if_expr ';' if_expr ';' if_expr . ')' command   (rule 97)

    ')' 	shift, and go to state 336



state 333

    compound  ->  command . ELSE   (rule 95)
    foreach_loop  ->  FOREACH '(' identifier IN_ITER if_expr ')' command .   (rule 101)

    ELSE	shift, and go to state 100

    ELSE	[reduce using rule 101 (foreach_loop)]
    $default	reduce using rule 101 (foreach_loop)



state 334

    foreach_loop  ->  FOREACH '(' identifier IN_ITER if_expr ')' block .   (rule 100)

    $default	reduce using rule 100 (foreach_loop)



state 335

    ip  ->  integer '.' integer '.' integer '.' integer .   (rule 87)

    $default	reduce using rule 87 (ip)



state 336

    for_loop  ->  FOR '(' if_expr ';' if_expr ';' if_expr ')' . block   (rule 96)
    for_loop  ->  FOR '(' if_expr ';' if_expr ';' if_expr ')' . command   (rule 97)

    LOCAL	shift, and go to state 2
    GLOBAL	shift, and go to state 3
    IF  	shift, and go to state 4
    INCLUDE	shift, and go to state 5
    IMPORT	shift, and go to state 7
    RETURN	shift, and go to state 8
    BREAK	shift, and go to state 9
    CONTINUE	shift, and go to state 10
    FOR 	shift, and go to state 11
    FOREACH	shift, and go to state 12
    IN_ITER	shift, and go to state 13
    WHILE	shift, and go to state 14
    REPEAT	shift, and go to state 15
    REP 	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    '(' 	shift, and go to state 20
    ';' 	shift, and go to state 21
    '=' 	shift, and go to state 22
    '{' 	shift, and go to state 23

    command	go to state 337
    simple	go to state 29
    break	go to state 30
    continue	go to state 31
    import	go to state 32
    include	go to state 33
    return	go to state 34
    empty	go to state 35
    global	go to state 36
    local	go to state 37
    rep 	go to state 38
    call_function	go to state 39
    assign	go to state 40
    inc_dec_exp	go to state 41
    assign_math_op	go to state 42
    assign_shift_op	go to state 43
    identifier	go to state 44
    compound	go to state 45
    for_loop	go to state 46
    foreach_loop	go to state 47
    repeat_loop	go to state 48
    while_loop	go to state 49
    if_cond	go to state 50
    block	go to state 338



state 337

    compound  ->  command . ELSE   (rule 95)
    for_loop  ->  FOR '(' if_expr ';' if_expr ';' if_expr ')' command .   (rule 97)

    ELSE	shift, and go to state 100

    ELSE	[reduce using rule 97 (for_loop)]
    $default	reduce using rule 97 (for_loop)



state 338

    for_loop  ->  FOR '(' if_expr ';' if_expr ';' if_expr ')' block .   (rule 96)

    $default	reduce using rule 96 (for_loop)



state 339

    $   	go to state 340



state 340

    $   	go to state 341



state 341

    $default	accept
