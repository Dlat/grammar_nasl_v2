State 9 contains 1 shift/reduce conflict.
State 23 contains 6 shift/reduce conflicts.
State 58 contains 1 shift/reduce conflict.
State 67 contains 1 shift/reduce conflict.
State 69 contains 1 shift/reduce conflict.
State 70 contains 2 shift/reduce conflicts.
State 71 contains 6 shift/reduce conflicts.
State 72 contains 6 shift/reduce conflicts.
State 73 contains 6 shift/reduce conflicts.
State 75 contains 2 shift/reduce conflicts.
State 80 contains 1 shift/reduce conflict.
State 85 contains 1 shift/reduce conflict.
State 88 contains 1 shift/reduce conflict.
State 104 contains 6 shift/reduce conflicts.
State 105 contains 6 shift/reduce conflicts.
State 108 contains 6 shift/reduce conflicts.
State 109 contains 6 shift/reduce conflicts.
State 110 contains 6 shift/reduce conflicts.
State 111 contains 6 shift/reduce conflicts.
State 112 contains 6 shift/reduce conflicts.
State 113 contains 6 shift/reduce conflicts.
State 114 contains 3 shift/reduce conflicts.
State 115 contains 7 shift/reduce conflicts.
State 121 contains 3 shift/reduce conflicts.
State 122 contains 1 shift/reduce conflict.
State 126 contains 1 shift/reduce conflict.
State 145 contains 1 shift/reduce conflict.
State 146 contains 1 shift/reduce conflict.
State 148 contains 24 shift/reduce conflicts.
State 149 contains 24 shift/reduce conflicts.
State 150 contains 24 shift/reduce conflicts.
State 152 contains 1 shift/reduce conflict.
State 153 contains 1 shift/reduce conflict.
State 156 contains 6 shift/reduce conflicts.
State 157 contains 6 shift/reduce conflicts.
State 158 contains 6 shift/reduce conflicts.
State 159 contains 6 shift/reduce conflicts.
State 160 contains 6 shift/reduce conflicts.
State 161 contains 6 shift/reduce conflicts.
State 162 contains 6 shift/reduce conflicts.
State 163 contains 6 shift/reduce conflicts.
State 164 contains 6 shift/reduce conflicts.
State 165 contains 6 shift/reduce conflicts.
State 166 contains 6 shift/reduce conflicts.
State 167 contains 6 shift/reduce conflicts.
State 168 contains 6 shift/reduce conflicts.
State 169 contains 6 shift/reduce conflicts.
State 170 contains 6 shift/reduce conflicts.
State 172 contains 6 shift/reduce conflicts.
State 173 contains 6 shift/reduce conflicts.
State 174 contains 6 shift/reduce conflicts.
State 175 contains 6 shift/reduce conflicts.
State 176 contains 6 shift/reduce conflicts.
State 177 contains 6 shift/reduce conflicts.
State 178 contains 6 shift/reduce conflicts.
State 179 contains 6 shift/reduce conflicts.
State 180 contains 6 shift/reduce conflicts.
State 183 contains 1 shift/reduce conflict.
State 185 contains 1 shift/reduce conflict.
State 186 contains 1 shift/reduce conflict.
State 211 contains 3 shift/reduce conflicts.
State 212 contains 1 shift/reduce conflict.
State 214 contains 1 shift/reduce conflict.
State 218 contains 3 shift/reduce conflicts.
State 219 contains 7 shift/reduce conflicts.
State 222 contains 3 shift/reduce conflicts.
State 235 contains 1 shift/reduce conflict.
State 236 contains 1 shift/reduce conflict.
State 237 contains 1 shift/reduce conflict.
State 238 contains 1 shift/reduce conflict.
State 244 contains 24 shift/reduce conflicts.
State 245 contains 24 shift/reduce conflicts.
State 246 contains 24 shift/reduce conflicts.
State 247 contains 24 shift/reduce conflicts.
State 248 contains 24 shift/reduce conflicts.
State 249 contains 24 shift/reduce conflicts.
State 250 contains 24 shift/reduce conflicts.
State 251 contains 24 shift/reduce conflicts.
State 252 contains 24 shift/reduce conflicts.
State 253 contains 24 shift/reduce conflicts.
State 254 contains 24 shift/reduce conflicts.
State 255 contains 24 shift/reduce conflicts.
State 256 contains 24 shift/reduce conflicts.
State 257 contains 24 shift/reduce conflicts.
State 258 contains 24 shift/reduce conflicts.
State 259 contains 24 shift/reduce conflicts.
State 260 contains 24 shift/reduce conflicts.
State 261 contains 24 shift/reduce conflicts.
State 262 contains 24 shift/reduce conflicts.
State 263 contains 24 shift/reduce conflicts.
State 264 contains 24 shift/reduce conflicts.
State 265 contains 24 shift/reduce conflicts.
State 266 contains 24 shift/reduce conflicts.
State 267 contains 24 shift/reduce conflicts.
State 268 contains 1 shift/reduce conflict.
State 269 contains 1 shift/reduce conflict.
State 278 contains 2 shift/reduce conflicts.
State 279 contains 2 shift/reduce conflicts.
State 287 contains 1 shift/reduce conflict.
State 288 contains 3 shift/reduce conflicts.
State 293 contains 1 shift/reduce conflict.
State 294 contains 1 shift/reduce conflict.
State 308 contains 1 shift/reduce conflict.
State 320 contains 21 shift/reduce conflicts.
State 323 contains 1 shift/reduce conflict.
State 325 contains 1 shift/reduce conflict.
State 328 contains 1 shift/reduce conflict.
State 330 contains 1 shift/reduce conflict.
State 334 contains 1 shift/reduce conflict.
State 338 contains 1 shift/reduce conflict.

Grammar
rule 1    nasl_script ->		/* empty */
rule 2    nasl_script -> lines
rule 3    lines -> line
rule 4    lines -> lines line
rule 5    line -> COMMENT
rule 6    line -> export
rule 7    line -> function
rule 8    line -> command
rule 9    line -> block
rule 10   export -> EXPORT function
rule 11   function -> FUNCTION identifier '(' parameters ')' block
rule 12   function -> FUNCTION identifier '(' ')' block
rule 13   parameters -> parameter ',' parameters
rule 14   parameters -> parameter
rule 15   parameter -> '&' identifier
rule 16   parameter -> assign
rule 17   parameter -> argument
rule 18   command -> simple
rule 19   command -> compound
rule 20   simple -> assign
rule 21   simple -> call_function ';'
rule 22   simple -> break
rule 23   simple -> continue
rule 24   simple -> return
rule 25   simple -> local
rule 26   simple -> global
rule 27   simple -> inc_dec_exp
rule 28   simple -> rep
rule 29   simple -> import
rule 30   simple -> include
rule 31   simple -> empty
rule 32   break -> BREAK ';'
rule 33   continue -> CONTINUE ';'
rule 34   import -> IMPORT '(' string ')' ';'
rule 35   include -> INCLUDE '(' string ')' ';'
rule 36   return -> RETURN expression ';'
rule 37   return -> RETURN '@' ';'
rule 38   return -> RETURN body ';'
rule 39   empty -> ';'
rule 40   global -> GLOBAL vars ';'
rule 41   local -> LOCAL vars ';'
rule 42   rep -> call_function REP integer ';'
rule 43   rep -> call_function REP identifier ';'
rule 44   call_function -> identifier '(' parameters ')'
rule 45   call_function -> identifier '(' ')'
rule 46   call_function -> identifier body_enum_sq '(' ')'
rule 47   call_function -> identifier body_enum_sq '(' parameters ')'
rule 48   call_function -> identifier body_enum_sq body_enum_p '(' ')'
rule 49   call_function -> identifier body_enum_sq body_enum_p '(' parameters ')'
rule 50   call_function -> identifier body_enum_p '(' ')'
rule 51   call_function -> identifier body_enum_p '(' parameters ')'
rule 52   assign -> '=' value
rule 53   assign -> identifier '=' value
rule 54   assign -> identifier '=' assign
rule 55   assign -> identifier '=' ref
rule 56   assign -> identifier body_enum_sq '=' value
rule 57   assign -> identifier '=' list_int
rule 58   assign -> identifier body_enum_sq '=' list_int
rule 59   assign -> identifier body_enum_sq '=' assign
rule 60   assign -> identifier body_enum_sq '=' ref
rule 61   assign -> assign_math_op
rule 62   assign -> assign_shift_op
rule 63   assign -> '(' assign ')'
rule 64   inc_dec_exp -> INC identifier
rule 65   inc_dec_exp -> DEC identifier
rule 66   inc_dec_exp -> identifier INC
rule 67   inc_dec_exp -> identifier DEC
rule 68   inc_dec_exp -> INC identifier body_enum_sq
rule 69   inc_dec_exp -> DEC identifier body_enum_sq
rule 70   inc_dec_exp -> identifier body_enum_sq INC
rule 71   inc_dec_exp -> identifier body_enum_sq DEC
rule 72   assign_math_op -> identifier ADD_ASS value
rule 73   assign_math_op -> identifier SUB_ASS value
rule 74   assign_math_op -> identifier MUL_ASS value
rule 75   assign_math_op -> identifier DIV_ASS value
rule 76   assign_math_op -> identifier MOD_ASS value
rule 77   assign_shift_op -> identifier SR_ASS value
rule 78   assign_shift_op -> identifier SRR_ASS value
rule 79   assign_shift_op -> identifier SL_ASS value
rule 80   value -> expression
rule 81   identifier -> IDENT
rule 82   identifier -> IN_ITER
rule 83   identifier -> REP
rule 84   integer -> INT
rule 85   integer -> TRUE
rule 86   integer -> FALSE
rule 87   string -> STRING
rule 88   ip -> integer '.' integer '.' integer '.' integer
rule 89   null -> _NULL_
rule 90   ref -> '@' IDENT
rule 91   compound -> for_loop
rule 92   compound -> foreach_loop
rule 93   compound -> repeat_loop
rule 94   compound -> while_loop
rule 95   compound -> if_cond
rule 96   compound -> command ELSE
rule 97   for_loop -> FOR '(' if_expr ';' if_expr ';' if_expr ')' block
rule 98   for_loop -> FOR '(' if_expr ';' if_expr ';' if_expr ')' command
rule 99   foreach_loop -> FOREACH identifier '(' if_expr ')' block
rule 100  foreach_loop -> FOREACH identifier '(' if_expr ')' command
rule 101  foreach_loop -> FOREACH '(' identifier IN_ITER if_expr ')' block
rule 102  foreach_loop -> FOREACH '(' identifier IN_ITER if_expr ')' command
rule 103  repeat_loop -> REPEAT block UNTIL if_expr ';'
rule 104  repeat_loop -> REPEAT command UNTIL if_expr ';'
rule 105  while_loop -> WHILE '(' if_expr ')' block
rule 106  while_loop -> WHILE '(' if_expr ')' command
rule 107  if_expr -> expression
rule 108  if_expr -> assign
rule 109  if_expr -> inc_dec_exp
rule 110  if_cond -> IF '(' if_expr ')' block
rule 111  if_cond -> IF '(' if_expr ')' command
rule 112  if_cond -> IF '(' if_expr ')' command ELSE command
rule 113  if_cond -> IF '(' if_expr ')' block ELSE command
rule 114  if_cond -> IF '(' if_expr ')' block ELSE block
rule 115  if_cond -> IF '(' if_expr ')' command ELSE block
rule 116  block -> '{' '}'
rule 117  block -> '{' lines '}'
rule 118  body -> '{' argument_list '}'
rule 119  body_sq -> '[' ']'
rule 120  body_sq -> '[' argument_list ']'
rule 121  body_sq -> '[' integer ']'
rule 122  body_sq -> '[' identifier ']'
rule 123  body_enum_sq -> body_enum_sq body_sq
rule 124  body_enum_sq -> body_sq
rule 125  body_p -> '.' identifier
rule 126  body_enum_p -> body_enum_p body_p
rule 127  body_enum_p -> body_p
rule 128  var -> identifier '=' value
rule 129  var -> identifier '=' ref
rule 130  var -> identifier
rule 131  vars -> var ',' vars
rule 132  vars -> var
rule 133  list_int -> list_int ',' integer
rule 134  list_int -> integer ',' integer
rule 135  argument_list -> argument_list ',' argument
rule 136  argument_list -> argument
rule 137  argument -> string ':' expression
rule 138  argument -> integer ':' expression
rule 139  argument -> string ':' ref
rule 140  argument -> integer ':' ref
rule 141  argument -> identifier ':' expression
rule 142  argument -> identifier ':' ref
rule 143  argument -> expression
rule 144  argument -> ref
rule 145  expression ->		/* empty */
rule 146  expression -> '(' expression ')'
rule 147  expression -> expression AND expression
rule 148  expression -> '!' expression
rule 149  expression -> expression OR expression
rule 150  expression -> expression '+' expression
rule 151  expression -> expression '-' expression
rule 152  expression -> '-' expression
rule 153  expression -> expression '*' expression
rule 154  expression -> expression POWER expression
rule 155  expression -> expression '/' expression
rule 156  expression -> expression '%' expression
rule 157  expression -> expression '&' expression
rule 158  expression -> expression '^' expression
rule 159  expression -> expression '|' expression
rule 160  expression -> expression SR expression
rule 161  expression -> expression SL expression
rule 162  expression -> expression SRR expression
rule 163  expression -> expression SUBSTR_EQ expression
rule 164  expression -> expression SUBSTR_NEQ expression
rule 165  expression -> expression REGEX_NEQ expression
rule 166  expression -> expression REGEX_EQ expression
rule 167  expression -> expression '<' expression
rule 168  expression -> expression '>' expression
rule 169  expression -> expression CMP_GE expression
rule 170  expression -> expression CMP_LE expression
rule 171  expression -> expression CMP_EQ expression
rule 172  expression -> expression CMP_NEQ expression
rule 173  expression -> identifier body_enum_p
rule 174  expression -> '~' expression
rule 175  expression -> identifier
rule 176  expression -> integer
rule 177  expression -> string
rule 178  expression -> ip
rule 179  expression -> null
rule 180  expression -> body
rule 181  expression -> body_sq
rule 182  expression -> identifier body
rule 183  expression -> identifier body_enum_sq
rule 184  expression -> call_function

Terminals, with rules where they appear

$ (-1)
'!' (33) 148
'%' (37) 156
'&' (38) 15 157
'(' (40) 11 12 34 35 44 45 46 47 48 49 50 51 63 97 98 99 100 101 102
    105 106 110 111 112 113 114 115 146
')' (41) 11 12 34 35 44 45 46 47 48 49 50 51 63 97 98 99 100 101 102
    105 106 110 111 112 113 114 115 146
'*' (42) 153
'+' (43) 150
',' (44) 13 131 133 134 135
'-' (45) 151 152
'.' (46) 88 125
'/' (47) 155
':' (58) 137 138 139 140 141 142
';' (59) 21 32 33 34 35 36 37 38 39 40 41 42 43 97 98 103 104
'<' (60) 167
'=' (61) 52 53 54 55 56 57 58 59 60 128 129
'>' (62) 168
'@' (64) 37 90
'[' (91) 119 120 121 122
']' (93) 119 120 121 122
'^' (94) 158
'{' (123) 116 117 118
'|' (124) 159
'}' (125) 116 117 118
'~' (126) 174
error (256)
COMMENT (258) 5
FUNCTION (259) 11 12
LOCAL (260) 41
GLOBAL (261) 40
IF (262) 110 111 112 113 114 115
ELSE (263) 96 112 113 114 115
INCLUDE (264) 35
EXPORT (265) 10
IMPORT (266) 34
RETURN (267) 36 37 38
BREAK (268) 32
CONTINUE (269) 33
FOR (270) 97 98
FOREACH (271) 99 100 101 102
IN_ITER (272) 82 101 102
WHILE (273) 105 106
REPEAT (274) 103 104
REP (275) 42 43 83
UNTIL (276) 103 104
IDENT (277) 81 90
INT (278) 84
STRING (279) 87
FALSE (280) 86
_NULL_ (281) 89
TRUE (282) 85
OR (283) 149
AND (284) 147
ADD_ASS (285) 72
SUB_ASS (286) 73
SUBSTR_EQ (287) 163
SUBSTR_NEQ (288) 164
REGEX_EQ (289) 166
REGEX_NEQ (290) 165
DEC (291) 65 67 69 71
INC (292) 64 66 68 70
DIV_ASS (293) 75
MUL_ASS (294) 74
MOD_ASS (295) 76
POWER (296) 154
CMP_EQ (297) 171
CMP_GE (298) 169
CMP_LE (299) 170
CMP_NEQ (300) 172
SL (301) 161
SR (302) 160
SRR (303) 162
SRR_ASS (304) 78
SR_ASS (305) 77
SL_ASS (306) 79

Nonterminals, with rules where they appear

nasl_script (76)
    on left: 1 2
lines (77)
    on left: 3 4, on right: 2 4 117
line (78)
    on left: 5 6 7 8 9, on right: 3 4
export (79)
    on left: 10, on right: 6
function (80)
    on left: 11 12, on right: 7 10
parameters (81)
    on left: 13 14, on right: 11 13 44 47 49 51
parameter (82)
    on left: 15 16 17, on right: 13 14
command (83)
    on left: 18 19, on right: 8 96 98 100 102 104 106 111 112 113 115
simple (84)
    on left: 20 21 22 23 24 25 26 27 28 29 30 31, on right: 18
break (85)
    on left: 32, on right: 22
continue (86)
    on left: 33, on right: 23
import (87)
    on left: 34, on right: 29
include (88)
    on left: 35, on right: 30
return (89)
    on left: 36 37 38, on right: 24
empty (90)
    on left: 39, on right: 31
global (91)
    on left: 40, on right: 26
local (92)
    on left: 41, on right: 25
rep (93)
    on left: 42 43, on right: 28
call_function (94)
    on left: 44 45 46 47 48 49 50 51, on right: 21 42 43 184
assign (95)
    on left: 52 53 54 55 56 57 58 59 60 61 62 63, on right: 16 20 54
    59 63 108
inc_dec_exp (96)
    on left: 64 65 66 67 68 69 70 71, on right: 27 109
assign_math_op (97)
    on left: 72 73 74 75 76, on right: 61
assign_shift_op (98)
    on left: 77 78 79, on right: 62
value (99)
    on left: 80, on right: 52 53 56 72 73 74 75 76 77 78 79 128
identifier (100)
    on left: 81 82 83, on right: 11 12 15 43 44 45 46 47 48 49 50 51
    53 54 55 56 57 58 59 60 64 65 66 67 68 69 70 71 72 73 74 75 76
    77 78 79 99 100 101 102 122 125 128 129 130 141 142 173 175 182
    183
integer (101)
    on left: 84 85 86, on right: 42 88 121 133 134 138 140 176
string (102)
    on left: 87, on right: 34 35 137 139 177
ip (103)
    on left: 88, on right: 178
null (104)
    on left: 89, on right: 179
ref (105)
    on left: 90, on right: 55 60 129 139 140 142 144
compound (106)
    on left: 91 92 93 94 95 96, on right: 19
for_loop (107)
    on left: 97 98, on right: 91
foreach_loop (108)
    on left: 99 100 101 102, on right: 92
repeat_loop (109)
    on left: 103 104, on right: 93
while_loop (110)
    on left: 105 106, on right: 94
if_expr (111)
    on left: 107 108 109, on right: 97 98 99 100 101 102 103 104 105
    106 110 111 112 113 114 115
if_cond (112)
    on left: 110 111 112 113 114 115, on right: 95
block (113)
    on left: 116 117, on right: 9 11 12 97 99 101 103 105 110 113 114
    115
body (114)
    on left: 118, on right: 38 180 182
body_sq (115)
    on left: 119 120 121 122, on right: 123 124 181
body_enum_sq (116)
    on left: 123 124, on right: 46 47 48 49 56 58 59 60 68 69 70 71
    123 183
body_p (117)
    on left: 125, on right: 126 127
body_enum_p (118)
    on left: 126 127, on right: 48 49 50 51 126 173
var (119)
    on left: 128 129 130, on right: 131 132
vars (120)
    on left: 131 132, on right: 40 41 131
list_int (121)
    on left: 133 134, on right: 57 58 133
argument_list (122)
    on left: 135 136, on right: 118 120 135
argument (123)
    on left: 137 138 139 140 141 142 143 144, on right: 17 135 136
expression (124)
    on left: 145 146 147 148 149 150 151 152 153 154 155 156 157 158
    159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174
    175 176 177 178 179 180 181 182 183 184, on right: 36 80 107 137
    138 141 143 146 147 148 149 150 151 152 153 154 155 156 157 158
    159 160 161 162 163 164 165 166 167 168 169 170 171 172 174


state 0

    COMMENT	shift, and go to state 1
    FUNCTION	shift, and go to state 2
    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    EXPORT	shift, and go to state 7
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    DEC 	shift, and go to state 19
    INC 	shift, and go to state 20
    '(' 	shift, and go to state 21
    ';' 	shift, and go to state 22
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 24

    $default	reduce using rule 1 (nasl_script)

    nasl_script	go to state 340
    lines	go to state 25
    line	go to state 26
    export	go to state 27
    function	go to state 28
    command	go to state 29
    simple	go to state 30
    break	go to state 31
    continue	go to state 32
    import	go to state 33
    include	go to state 34
    return	go to state 35
    empty	go to state 36
    global	go to state 37
    local	go to state 38
    rep 	go to state 39
    call_function	go to state 40
    assign	go to state 41
    inc_dec_exp	go to state 42
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 45
    compound	go to state 46
    for_loop	go to state 47
    foreach_loop	go to state 48
    repeat_loop	go to state 49
    while_loop	go to state 50
    if_cond	go to state 51
    block	go to state 52



state 1

    line  ->  COMMENT .   (rule 5)

    $default	reduce using rule 5 (line)



state 2

    function  ->  FUNCTION . identifier '(' parameters ')' block   (rule 11)
    function  ->  FUNCTION . identifier '(' ')' block   (rule 12)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18

    identifier	go to state 53



state 3

    local  ->  LOCAL . vars ';'   (rule 41)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18

    identifier	go to state 54
    var 	go to state 55
    vars	go to state 56



state 4

    global  ->  GLOBAL . vars ';'   (rule 40)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18

    identifier	go to state 54
    var 	go to state 55
    vars	go to state 57



state 5

    if_cond  ->  IF . '(' if_expr ')' block   (rule 110)
    if_cond  ->  IF . '(' if_expr ')' command   (rule 111)
    if_cond  ->  IF . '(' if_expr ')' command ELSE command   (rule 112)
    if_cond  ->  IF . '(' if_expr ')' block ELSE command   (rule 113)
    if_cond  ->  IF . '(' if_expr ')' block ELSE block   (rule 114)
    if_cond  ->  IF . '(' if_expr ')' command ELSE block   (rule 115)

    '(' 	shift, and go to state 58



state 6

    include  ->  INCLUDE . '(' string ')' ';'   (rule 35)

    '(' 	shift, and go to state 59



state 7

    export  ->  EXPORT . function   (rule 10)

    FUNCTION	shift, and go to state 2

    function	go to state 60



state 8

    import  ->  IMPORT . '(' string ')' ';'   (rule 34)

    '(' 	shift, and go to state 61



state 9

    return  ->  RETURN . expression ';'   (rule 36)
    return  ->  RETURN . '@' ';'   (rule 37)
    return  ->  RETURN . body ';'   (rule 38)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '@' 	shift, and go to state 68
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 80
    body_sq	go to state 81
    expression	go to state 82



state 10

    break  ->  BREAK . ';'   (rule 32)

    ';' 	shift, and go to state 83



state 11

    continue  ->  CONTINUE . ';'   (rule 33)

    ';' 	shift, and go to state 84



state 12

    for_loop  ->  FOR . '(' if_expr ';' if_expr ';' if_expr ')' block   (rule 97)
    for_loop  ->  FOR . '(' if_expr ';' if_expr ';' if_expr ')' command   (rule 98)

    '(' 	shift, and go to state 85



state 13

    foreach_loop  ->  FOREACH . identifier '(' if_expr ')' block   (rule 99)
    foreach_loop  ->  FOREACH . identifier '(' if_expr ')' command   (rule 100)
    foreach_loop  ->  FOREACH . '(' identifier IN_ITER if_expr ')' block   (rule 101)
    foreach_loop  ->  FOREACH . '(' identifier IN_ITER if_expr ')' command   (rule 102)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    '(' 	shift, and go to state 86

    identifier	go to state 87



state 14

    identifier  ->  IN_ITER .   (rule 82)

    $default	reduce using rule 82 (identifier)



state 15

    while_loop  ->  WHILE . '(' if_expr ')' block   (rule 105)
    while_loop  ->  WHILE . '(' if_expr ')' command   (rule 106)

    '(' 	shift, and go to state 88



state 16

    repeat_loop  ->  REPEAT . block UNTIL if_expr ';'   (rule 103)
    repeat_loop  ->  REPEAT . command UNTIL if_expr ';'   (rule 104)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    DEC 	shift, and go to state 19
    INC 	shift, and go to state 20
    '(' 	shift, and go to state 21
    ';' 	shift, and go to state 22
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 24

    command	go to state 89
    simple	go to state 30
    break	go to state 31
    continue	go to state 32
    import	go to state 33
    include	go to state 34
    return	go to state 35
    empty	go to state 36
    global	go to state 37
    local	go to state 38
    rep 	go to state 39
    call_function	go to state 40
    assign	go to state 41
    inc_dec_exp	go to state 42
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 45
    compound	go to state 46
    for_loop	go to state 47
    foreach_loop	go to state 48
    repeat_loop	go to state 49
    while_loop	go to state 50
    if_cond	go to state 51
    block	go to state 90



state 17

    identifier  ->  REP .   (rule 83)

    $default	reduce using rule 83 (identifier)



state 18

    identifier  ->  IDENT .   (rule 81)

    $default	reduce using rule 81 (identifier)



state 19

    inc_dec_exp  ->  DEC . identifier   (rule 65)
    inc_dec_exp  ->  DEC . identifier body_enum_sq   (rule 69)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18

    identifier	go to state 91



state 20

    inc_dec_exp  ->  INC . identifier   (rule 64)
    inc_dec_exp  ->  INC . identifier body_enum_sq   (rule 68)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18

    identifier	go to state 92



state 21

    assign  ->  '(' . assign ')'   (rule 63)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    '(' 	shift, and go to state 21
    '=' 	shift, and go to state 23

    assign	go to state 93
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 94



state 22

    empty  ->  ';' .   (rule 39)

    $default	reduce using rule 39 (empty)



state 23

    assign  ->  '=' . value   (rule 52)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    value	go to state 95
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 97



state 24

    block  ->  '{' . '}'   (rule 116)
    block  ->  '{' . lines '}'   (rule 117)

    COMMENT	shift, and go to state 1
    FUNCTION	shift, and go to state 2
    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    EXPORT	shift, and go to state 7
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    DEC 	shift, and go to state 19
    INC 	shift, and go to state 20
    '(' 	shift, and go to state 21
    ';' 	shift, and go to state 22
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 24
    '}' 	shift, and go to state 98

    lines	go to state 99
    line	go to state 26
    export	go to state 27
    function	go to state 28
    command	go to state 29
    simple	go to state 30
    break	go to state 31
    continue	go to state 32
    import	go to state 33
    include	go to state 34
    return	go to state 35
    empty	go to state 36
    global	go to state 37
    local	go to state 38
    rep 	go to state 39
    call_function	go to state 40
    assign	go to state 41
    inc_dec_exp	go to state 42
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 45
    compound	go to state 46
    for_loop	go to state 47
    foreach_loop	go to state 48
    repeat_loop	go to state 49
    while_loop	go to state 50
    if_cond	go to state 51
    block	go to state 52



state 25

    nasl_script  ->  lines .   (rule 2)
    lines  ->  lines . line   (rule 4)

    COMMENT	shift, and go to state 1
    FUNCTION	shift, and go to state 2
    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    EXPORT	shift, and go to state 7
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    DEC 	shift, and go to state 19
    INC 	shift, and go to state 20
    '(' 	shift, and go to state 21
    ';' 	shift, and go to state 22
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 24

    $default	reduce using rule 2 (nasl_script)

    line	go to state 100
    export	go to state 27
    function	go to state 28
    command	go to state 29
    simple	go to state 30
    break	go to state 31
    continue	go to state 32
    import	go to state 33
    include	go to state 34
    return	go to state 35
    empty	go to state 36
    global	go to state 37
    local	go to state 38
    rep 	go to state 39
    call_function	go to state 40
    assign	go to state 41
    inc_dec_exp	go to state 42
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 45
    compound	go to state 46
    for_loop	go to state 47
    foreach_loop	go to state 48
    repeat_loop	go to state 49
    while_loop	go to state 50
    if_cond	go to state 51
    block	go to state 52



state 26

    lines  ->  line .   (rule 3)

    $default	reduce using rule 3 (lines)



state 27

    line  ->  export .   (rule 6)

    $default	reduce using rule 6 (line)



state 28

    line  ->  function .   (rule 7)

    $default	reduce using rule 7 (line)



state 29

    line  ->  command .   (rule 8)
    compound  ->  command . ELSE   (rule 96)

    ELSE	shift, and go to state 101

    $default	reduce using rule 8 (line)



state 30

    command  ->  simple .   (rule 18)

    $default	reduce using rule 18 (command)



state 31

    simple  ->  break .   (rule 22)

    $default	reduce using rule 22 (simple)



state 32

    simple  ->  continue .   (rule 23)

    $default	reduce using rule 23 (simple)



state 33

    simple  ->  import .   (rule 29)

    $default	reduce using rule 29 (simple)



state 34

    simple  ->  include .   (rule 30)

    $default	reduce using rule 30 (simple)



state 35

    simple  ->  return .   (rule 24)

    $default	reduce using rule 24 (simple)



state 36

    simple  ->  empty .   (rule 31)

    $default	reduce using rule 31 (simple)



state 37

    simple  ->  global .   (rule 26)

    $default	reduce using rule 26 (simple)



state 38

    simple  ->  local .   (rule 25)

    $default	reduce using rule 25 (simple)



state 39

    simple  ->  rep .   (rule 28)

    $default	reduce using rule 28 (simple)



state 40

    simple  ->  call_function . ';'   (rule 21)
    rep  ->  call_function . REP integer ';'   (rule 42)
    rep  ->  call_function . REP identifier ';'   (rule 43)

    REP 	shift, and go to state 102
    ';' 	shift, and go to state 103



state 41

    simple  ->  assign .   (rule 20)

    $default	reduce using rule 20 (simple)



state 42

    simple  ->  inc_dec_exp .   (rule 27)

    $default	reduce using rule 27 (simple)



state 43

    assign  ->  assign_math_op .   (rule 61)

    $default	reduce using rule 61 (assign)



state 44

    assign  ->  assign_shift_op .   (rule 62)

    $default	reduce using rule 62 (assign)



state 45

    call_function  ->  identifier . '(' parameters ')'   (rule 44)
    call_function  ->  identifier . '(' ')'   (rule 45)
    call_function  ->  identifier . body_enum_sq '(' ')'   (rule 46)
    call_function  ->  identifier . body_enum_sq '(' parameters ')'   (rule 47)
    call_function  ->  identifier . body_enum_sq body_enum_p '(' ')'   (rule 48)
    call_function  ->  identifier . body_enum_sq body_enum_p '(' parameters ')'   (rule 49)
    call_function  ->  identifier . body_enum_p '(' ')'   (rule 50)
    call_function  ->  identifier . body_enum_p '(' parameters ')'   (rule 51)
    assign  ->  identifier . '=' value   (rule 53)
    assign  ->  identifier . '=' assign   (rule 54)
    assign  ->  identifier . '=' ref   (rule 55)
    assign  ->  identifier . body_enum_sq '=' value   (rule 56)
    assign  ->  identifier . '=' list_int   (rule 57)
    assign  ->  identifier . body_enum_sq '=' list_int   (rule 58)
    assign  ->  identifier . body_enum_sq '=' assign   (rule 59)
    assign  ->  identifier . body_enum_sq '=' ref   (rule 60)
    inc_dec_exp  ->  identifier . INC   (rule 66)
    inc_dec_exp  ->  identifier . DEC   (rule 67)
    inc_dec_exp  ->  identifier . body_enum_sq INC   (rule 70)
    inc_dec_exp  ->  identifier . body_enum_sq DEC   (rule 71)
    assign_math_op  ->  identifier . ADD_ASS value   (rule 72)
    assign_math_op  ->  identifier . SUB_ASS value   (rule 73)
    assign_math_op  ->  identifier . MUL_ASS value   (rule 74)
    assign_math_op  ->  identifier . DIV_ASS value   (rule 75)
    assign_math_op  ->  identifier . MOD_ASS value   (rule 76)
    assign_shift_op  ->  identifier . SR_ASS value   (rule 77)
    assign_shift_op  ->  identifier . SRR_ASS value   (rule 78)
    assign_shift_op  ->  identifier . SL_ASS value   (rule 79)

    ADD_ASS	shift, and go to state 104
    SUB_ASS	shift, and go to state 105
    DEC 	shift, and go to state 106
    INC 	shift, and go to state 107
    DIV_ASS	shift, and go to state 108
    MUL_ASS	shift, and go to state 109
    MOD_ASS	shift, and go to state 110
    SRR_ASS	shift, and go to state 111
    SR_ASS	shift, and go to state 112
    SL_ASS	shift, and go to state 113
    '(' 	shift, and go to state 114
    '=' 	shift, and go to state 115
    '.' 	shift, and go to state 116
    '[' 	shift, and go to state 70

    body_sq	go to state 117
    body_enum_sq	go to state 118
    body_p	go to state 119
    body_enum_p	go to state 120



state 46

    command  ->  compound .   (rule 19)

    $default	reduce using rule 19 (command)



state 47

    compound  ->  for_loop .   (rule 91)

    $default	reduce using rule 91 (compound)



state 48

    compound  ->  foreach_loop .   (rule 92)

    $default	reduce using rule 92 (compound)



state 49

    compound  ->  repeat_loop .   (rule 93)

    $default	reduce using rule 93 (compound)



state 50

    compound  ->  while_loop .   (rule 94)

    $default	reduce using rule 94 (compound)



state 51

    compound  ->  if_cond .   (rule 95)

    $default	reduce using rule 95 (compound)



state 52

    line  ->  block .   (rule 9)

    $default	reduce using rule 9 (line)



state 53

    function  ->  FUNCTION identifier . '(' parameters ')' block   (rule 11)
    function  ->  FUNCTION identifier . '(' ')' block   (rule 12)

    '(' 	shift, and go to state 121



state 54

    var  ->  identifier . '=' value   (rule 128)
    var  ->  identifier . '=' ref   (rule 129)
    var  ->  identifier .   (rule 130)

    '=' 	shift, and go to state 122

    $default	reduce using rule 130 (var)



state 55

    vars  ->  var . ',' vars   (rule 131)
    vars  ->  var .   (rule 132)

    ',' 	shift, and go to state 123

    $default	reduce using rule 132 (vars)



state 56

    local  ->  LOCAL vars . ';'   (rule 41)

    ';' 	shift, and go to state 124



state 57

    global  ->  GLOBAL vars . ';'   (rule 40)

    ';' 	shift, and go to state 125



state 58

    if_cond  ->  IF '(' . if_expr ')' block   (rule 110)
    if_cond  ->  IF '(' . if_expr ')' command   (rule 111)
    if_cond  ->  IF '(' . if_expr ')' command ELSE command   (rule 112)
    if_cond  ->  IF '(' . if_expr ')' block ELSE command   (rule 113)
    if_cond  ->  IF '(' . if_expr ')' block ELSE block   (rule 114)
    if_cond  ->  IF '(' . if_expr ')' command ELSE block   (rule 115)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    DEC 	shift, and go to state 19
    INC 	shift, and go to state 20
    '(' 	shift, and go to state 126
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    assign	go to state 127
    inc_dec_exp	go to state 128
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 129
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    if_expr	go to state 130
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 131



state 59

    include  ->  INCLUDE '(' . string ')' ';'   (rule 35)

    STRING	shift, and go to state 63

    string	go to state 132



state 60

    export  ->  EXPORT function .   (rule 10)

    $default	reduce using rule 10 (export)



state 61

    import  ->  IMPORT '(' . string ')' ';'   (rule 34)

    STRING	shift, and go to state 63

    string	go to state 133



state 62

    integer  ->  INT .   (rule 84)

    $default	reduce using rule 84 (integer)



state 63

    string  ->  STRING .   (rule 87)

    $default	reduce using rule 87 (string)



state 64

    integer  ->  FALSE .   (rule 86)

    $default	reduce using rule 86 (integer)



state 65

    null  ->  _NULL_ .   (rule 89)

    $default	reduce using rule 89 (null)



state 66

    integer  ->  TRUE .   (rule 85)

    $default	reduce using rule 85 (integer)



state 67

    expression  ->  '(' . expression ')'   (rule 146)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 134



state 68

    return  ->  RETURN '@' . ';'   (rule 37)

    ';' 	shift, and go to state 135



state 69

    body  ->  '{' . argument_list '}'   (rule 118)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '@' 	shift, and go to state 136
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 137
    integer	go to state 138
    string	go to state 139
    ip  	go to state 78
    null	go to state 79
    ref 	go to state 140
    body	go to state 96
    body_sq	go to state 81
    argument_list	go to state 141
    argument	go to state 142
    expression	go to state 143



state 70

    body_sq  ->  '[' . ']'   (rule 119)
    body_sq  ->  '[' . argument_list ']'   (rule 120)
    body_sq  ->  '[' . integer ']'   (rule 121)
    body_sq  ->  '[' . identifier ']'   (rule 122)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '@' 	shift, and go to state 136
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    ']' 	shift, and go to state 144
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    ']' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 145
    integer	go to state 146
    string	go to state 139
    ip  	go to state 78
    null	go to state 79
    ref 	go to state 140
    body	go to state 96
    body_sq	go to state 81
    argument_list	go to state 147
    argument	go to state 142
    expression	go to state 143



state 71

    expression  ->  '!' . expression   (rule 148)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 148



state 72

    expression  ->  '-' . expression   (rule 152)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 149



state 73

    expression  ->  '~' . expression   (rule 174)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 150



state 74

    expression  ->  call_function .   (rule 184)

    $default	reduce using rule 184 (expression)



state 75

    call_function  ->  identifier . '(' parameters ')'   (rule 44)
    call_function  ->  identifier . '(' ')'   (rule 45)
    call_function  ->  identifier . body_enum_sq '(' ')'   (rule 46)
    call_function  ->  identifier . body_enum_sq '(' parameters ')'   (rule 47)
    call_function  ->  identifier . body_enum_sq body_enum_p '(' ')'   (rule 48)
    call_function  ->  identifier . body_enum_sq body_enum_p '(' parameters ')'   (rule 49)
    call_function  ->  identifier . body_enum_p '(' ')'   (rule 50)
    call_function  ->  identifier . body_enum_p '(' parameters ')'   (rule 51)
    expression  ->  identifier . body_enum_p   (rule 173)
    expression  ->  identifier .   (rule 175)
    expression  ->  identifier . body   (rule 182)
    expression  ->  identifier . body_enum_sq   (rule 183)

    '(' 	shift, and go to state 114
    '.' 	shift, and go to state 116
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70

    '(' 	[reduce using rule 175 (expression)]
    '{' 	[reduce using rule 175 (expression)]
    $default	reduce using rule 175 (expression)

    body	go to state 151
    body_sq	go to state 117
    body_enum_sq	go to state 152
    body_p	go to state 119
    body_enum_p	go to state 153



state 76

    ip  ->  integer . '.' integer '.' integer '.' integer   (rule 88)
    expression  ->  integer .   (rule 176)

    '.' 	shift, and go to state 154

    $default	reduce using rule 176 (expression)



state 77

    expression  ->  string .   (rule 177)

    $default	reduce using rule 177 (expression)



state 78

    expression  ->  ip .   (rule 178)

    $default	reduce using rule 178 (expression)



state 79

    expression  ->  null .   (rule 179)

    $default	reduce using rule 179 (expression)



state 80

    return  ->  RETURN body . ';'   (rule 38)
    expression  ->  body .   (rule 180)

    ';' 	shift, and go to state 155

    ';' 	[reduce using rule 180 (expression)]
    $default	reduce using rule 180 (expression)



state 81

    expression  ->  body_sq .   (rule 181)

    $default	reduce using rule 181 (expression)



state 82

    return  ->  RETURN expression . ';'   (rule 36)
    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    ';' 	shift, and go to state 171
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180



state 83

    break  ->  BREAK ';' .   (rule 32)

    $default	reduce using rule 32 (break)



state 84

    continue  ->  CONTINUE ';' .   (rule 33)

    $default	reduce using rule 33 (continue)



state 85

    for_loop  ->  FOR '(' . if_expr ';' if_expr ';' if_expr ')' block   (rule 97)
    for_loop  ->  FOR '(' . if_expr ';' if_expr ';' if_expr ')' command   (rule 98)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    DEC 	shift, and go to state 19
    INC 	shift, and go to state 20
    '(' 	shift, and go to state 126
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    assign	go to state 127
    inc_dec_exp	go to state 128
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 129
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    if_expr	go to state 181
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 131



state 86

    foreach_loop  ->  FOREACH '(' . identifier IN_ITER if_expr ')' block   (rule 101)
    foreach_loop  ->  FOREACH '(' . identifier IN_ITER if_expr ')' command   (rule 102)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18

    identifier	go to state 182



state 87

    foreach_loop  ->  FOREACH identifier . '(' if_expr ')' block   (rule 99)
    foreach_loop  ->  FOREACH identifier . '(' if_expr ')' command   (rule 100)

    '(' 	shift, and go to state 183



state 88

    while_loop  ->  WHILE '(' . if_expr ')' block   (rule 105)
    while_loop  ->  WHILE '(' . if_expr ')' command   (rule 106)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    DEC 	shift, and go to state 19
    INC 	shift, and go to state 20
    '(' 	shift, and go to state 126
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    assign	go to state 127
    inc_dec_exp	go to state 128
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 129
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    if_expr	go to state 184
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 131



state 89

    compound  ->  command . ELSE   (rule 96)
    repeat_loop  ->  REPEAT command . UNTIL if_expr ';'   (rule 104)

    ELSE	shift, and go to state 101
    UNTIL	shift, and go to state 185



state 90

    repeat_loop  ->  REPEAT block . UNTIL if_expr ';'   (rule 103)

    UNTIL	shift, and go to state 186



state 91

    inc_dec_exp  ->  DEC identifier .   (rule 65)
    inc_dec_exp  ->  DEC identifier . body_enum_sq   (rule 69)

    '[' 	shift, and go to state 70

    $default	reduce using rule 65 (inc_dec_exp)

    body_sq	go to state 117
    body_enum_sq	go to state 187



state 92

    inc_dec_exp  ->  INC identifier .   (rule 64)
    inc_dec_exp  ->  INC identifier . body_enum_sq   (rule 68)

    '[' 	shift, and go to state 70

    $default	reduce using rule 64 (inc_dec_exp)

    body_sq	go to state 117
    body_enum_sq	go to state 188



state 93

    assign  ->  '(' assign . ')'   (rule 63)

    ')' 	shift, and go to state 189



state 94

    assign  ->  identifier . '=' value   (rule 53)
    assign  ->  identifier . '=' assign   (rule 54)
    assign  ->  identifier . '=' ref   (rule 55)
    assign  ->  identifier . body_enum_sq '=' value   (rule 56)
    assign  ->  identifier . '=' list_int   (rule 57)
    assign  ->  identifier . body_enum_sq '=' list_int   (rule 58)
    assign  ->  identifier . body_enum_sq '=' assign   (rule 59)
    assign  ->  identifier . body_enum_sq '=' ref   (rule 60)
    assign_math_op  ->  identifier . ADD_ASS value   (rule 72)
    assign_math_op  ->  identifier . SUB_ASS value   (rule 73)
    assign_math_op  ->  identifier . MUL_ASS value   (rule 74)
    assign_math_op  ->  identifier . DIV_ASS value   (rule 75)
    assign_math_op  ->  identifier . MOD_ASS value   (rule 76)
    assign_shift_op  ->  identifier . SR_ASS value   (rule 77)
    assign_shift_op  ->  identifier . SRR_ASS value   (rule 78)
    assign_shift_op  ->  identifier . SL_ASS value   (rule 79)

    ADD_ASS	shift, and go to state 104
    SUB_ASS	shift, and go to state 105
    DIV_ASS	shift, and go to state 108
    MUL_ASS	shift, and go to state 109
    MOD_ASS	shift, and go to state 110
    SRR_ASS	shift, and go to state 111
    SR_ASS	shift, and go to state 112
    SL_ASS	shift, and go to state 113
    '=' 	shift, and go to state 115
    '[' 	shift, and go to state 70

    body_sq	go to state 117
    body_enum_sq	go to state 190



state 95

    assign  ->  '=' value .   (rule 52)

    $default	reduce using rule 52 (assign)



state 96

    expression  ->  body .   (rule 180)

    $default	reduce using rule 180 (expression)



state 97

    value  ->  expression .   (rule 80)
    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    $default	reduce using rule 80 (value)



state 98

    block  ->  '{' '}' .   (rule 116)

    $default	reduce using rule 116 (block)



state 99

    lines  ->  lines . line   (rule 4)
    block  ->  '{' lines . '}'   (rule 117)

    COMMENT	shift, and go to state 1
    FUNCTION	shift, and go to state 2
    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    EXPORT	shift, and go to state 7
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    DEC 	shift, and go to state 19
    INC 	shift, and go to state 20
    '(' 	shift, and go to state 21
    ';' 	shift, and go to state 22
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 24
    '}' 	shift, and go to state 191

    line	go to state 100
    export	go to state 27
    function	go to state 28
    command	go to state 29
    simple	go to state 30
    break	go to state 31
    continue	go to state 32
    import	go to state 33
    include	go to state 34
    return	go to state 35
    empty	go to state 36
    global	go to state 37
    local	go to state 38
    rep 	go to state 39
    call_function	go to state 40
    assign	go to state 41
    inc_dec_exp	go to state 42
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 45
    compound	go to state 46
    for_loop	go to state 47
    foreach_loop	go to state 48
    repeat_loop	go to state 49
    while_loop	go to state 50
    if_cond	go to state 51
    block	go to state 52



state 100

    lines  ->  lines line .   (rule 4)

    $default	reduce using rule 4 (lines)



state 101

    compound  ->  command ELSE .   (rule 96)

    $default	reduce using rule 96 (compound)



state 102

    rep  ->  call_function REP . integer ';'   (rule 42)
    rep  ->  call_function REP . identifier ';'   (rule 43)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    FALSE	shift, and go to state 64
    TRUE	shift, and go to state 66

    identifier	go to state 192
    integer	go to state 193



state 103

    simple  ->  call_function ';' .   (rule 21)

    $default	reduce using rule 21 (simple)



state 104

    assign_math_op  ->  identifier ADD_ASS . value   (rule 72)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    value	go to state 194
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 97



state 105

    assign_math_op  ->  identifier SUB_ASS . value   (rule 73)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    value	go to state 195
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 97



state 106

    inc_dec_exp  ->  identifier DEC .   (rule 67)

    $default	reduce using rule 67 (inc_dec_exp)



state 107

    inc_dec_exp  ->  identifier INC .   (rule 66)

    $default	reduce using rule 66 (inc_dec_exp)



state 108

    assign_math_op  ->  identifier DIV_ASS . value   (rule 75)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    value	go to state 196
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 97



state 109

    assign_math_op  ->  identifier MUL_ASS . value   (rule 74)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    value	go to state 197
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 97



state 110

    assign_math_op  ->  identifier MOD_ASS . value   (rule 76)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    value	go to state 198
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 97



state 111

    assign_shift_op  ->  identifier SRR_ASS . value   (rule 78)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    value	go to state 199
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 97



state 112

    assign_shift_op  ->  identifier SR_ASS . value   (rule 77)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    value	go to state 200
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 97



state 113

    assign_shift_op  ->  identifier SL_ASS . value   (rule 79)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    value	go to state 201
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 97



state 114

    call_function  ->  identifier '(' . parameters ')'   (rule 44)
    call_function  ->  identifier '(' . ')'   (rule 45)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 126
    ')' 	shift, and go to state 202
    '&' 	shift, and go to state 203
    '@' 	shift, and go to state 136
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    ')' 	[reduce using rule 145 (expression)]
    '&' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    parameters	go to state 204
    parameter	go to state 205
    call_function	go to state 74
    assign	go to state 206
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 207
    integer	go to state 138
    string	go to state 139
    ip  	go to state 78
    null	go to state 79
    ref 	go to state 140
    body	go to state 96
    body_sq	go to state 81
    argument	go to state 208
    expression	go to state 143



state 115

    assign  ->  identifier '=' . value   (rule 53)
    assign  ->  identifier '=' . assign   (rule 54)
    assign  ->  identifier '=' . ref   (rule 55)
    assign  ->  identifier '=' . list_int   (rule 57)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 126
    '@' 	shift, and go to state 136
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '=' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    assign	go to state 209
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    value	go to state 210
    identifier	go to state 211
    integer	go to state 212
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    ref 	go to state 213
    body	go to state 96
    body_sq	go to state 81
    list_int	go to state 214
    expression	go to state 97



state 116

    body_p  ->  '.' . identifier   (rule 125)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18

    identifier	go to state 215



state 117

    body_enum_sq  ->  body_sq .   (rule 124)

    $default	reduce using rule 124 (body_enum_sq)



state 118

    call_function  ->  identifier body_enum_sq . '(' ')'   (rule 46)
    call_function  ->  identifier body_enum_sq . '(' parameters ')'   (rule 47)
    call_function  ->  identifier body_enum_sq . body_enum_p '(' ')'   (rule 48)
    call_function  ->  identifier body_enum_sq . body_enum_p '(' parameters ')'   (rule 49)
    assign  ->  identifier body_enum_sq . '=' value   (rule 56)
    assign  ->  identifier body_enum_sq . '=' list_int   (rule 58)
    assign  ->  identifier body_enum_sq . '=' assign   (rule 59)
    assign  ->  identifier body_enum_sq . '=' ref   (rule 60)
    inc_dec_exp  ->  identifier body_enum_sq . INC   (rule 70)
    inc_dec_exp  ->  identifier body_enum_sq . DEC   (rule 71)
    body_enum_sq  ->  body_enum_sq . body_sq   (rule 123)

    DEC 	shift, and go to state 216
    INC 	shift, and go to state 217
    '(' 	shift, and go to state 218
    '=' 	shift, and go to state 219
    '.' 	shift, and go to state 116
    '[' 	shift, and go to state 70

    body_sq	go to state 220
    body_p	go to state 119
    body_enum_p	go to state 221



state 119

    body_enum_p  ->  body_p .   (rule 127)

    $default	reduce using rule 127 (body_enum_p)



state 120

    call_function  ->  identifier body_enum_p . '(' ')'   (rule 50)
    call_function  ->  identifier body_enum_p . '(' parameters ')'   (rule 51)
    body_enum_p  ->  body_enum_p . body_p   (rule 126)

    '(' 	shift, and go to state 222
    '.' 	shift, and go to state 116

    body_p	go to state 223



state 121

    function  ->  FUNCTION identifier '(' . parameters ')' block   (rule 11)
    function  ->  FUNCTION identifier '(' . ')' block   (rule 12)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 126
    ')' 	shift, and go to state 224
    '&' 	shift, and go to state 203
    '@' 	shift, and go to state 136
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    ')' 	[reduce using rule 145 (expression)]
    '&' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    parameters	go to state 225
    parameter	go to state 205
    call_function	go to state 74
    assign	go to state 206
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 207
    integer	go to state 138
    string	go to state 139
    ip  	go to state 78
    null	go to state 79
    ref 	go to state 140
    body	go to state 96
    body_sq	go to state 81
    argument	go to state 208
    expression	go to state 143



state 122

    var  ->  identifier '=' . value   (rule 128)
    var  ->  identifier '=' . ref   (rule 129)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '@' 	shift, and go to state 136
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    value	go to state 226
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    ref 	go to state 227
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 97



state 123

    vars  ->  var ',' . vars   (rule 131)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18

    identifier	go to state 54
    var 	go to state 55
    vars	go to state 228



state 124

    local  ->  LOCAL vars ';' .   (rule 41)

    $default	reduce using rule 41 (local)



state 125

    global  ->  GLOBAL vars ';' .   (rule 40)

    $default	reduce using rule 40 (global)



state 126

    assign  ->  '(' . assign ')'   (rule 63)
    expression  ->  '(' . expression ')'   (rule 146)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 126
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    assign	go to state 93
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 211
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 134



state 127

    if_expr  ->  assign .   (rule 108)

    $default	reduce using rule 108 (if_expr)



state 128

    if_expr  ->  inc_dec_exp .   (rule 109)

    $default	reduce using rule 109 (if_expr)



state 129

    call_function  ->  identifier . '(' parameters ')'   (rule 44)
    call_function  ->  identifier . '(' ')'   (rule 45)
    call_function  ->  identifier . body_enum_sq '(' ')'   (rule 46)
    call_function  ->  identifier . body_enum_sq '(' parameters ')'   (rule 47)
    call_function  ->  identifier . body_enum_sq body_enum_p '(' ')'   (rule 48)
    call_function  ->  identifier . body_enum_sq body_enum_p '(' parameters ')'   (rule 49)
    call_function  ->  identifier . body_enum_p '(' ')'   (rule 50)
    call_function  ->  identifier . body_enum_p '(' parameters ')'   (rule 51)
    assign  ->  identifier . '=' value   (rule 53)
    assign  ->  identifier . '=' assign   (rule 54)
    assign  ->  identifier . '=' ref   (rule 55)
    assign  ->  identifier . body_enum_sq '=' value   (rule 56)
    assign  ->  identifier . '=' list_int   (rule 57)
    assign  ->  identifier . body_enum_sq '=' list_int   (rule 58)
    assign  ->  identifier . body_enum_sq '=' assign   (rule 59)
    assign  ->  identifier . body_enum_sq '=' ref   (rule 60)
    inc_dec_exp  ->  identifier . INC   (rule 66)
    inc_dec_exp  ->  identifier . DEC   (rule 67)
    inc_dec_exp  ->  identifier . body_enum_sq INC   (rule 70)
    inc_dec_exp  ->  identifier . body_enum_sq DEC   (rule 71)
    assign_math_op  ->  identifier . ADD_ASS value   (rule 72)
    assign_math_op  ->  identifier . SUB_ASS value   (rule 73)
    assign_math_op  ->  identifier . MUL_ASS value   (rule 74)
    assign_math_op  ->  identifier . DIV_ASS value   (rule 75)
    assign_math_op  ->  identifier . MOD_ASS value   (rule 76)
    assign_shift_op  ->  identifier . SR_ASS value   (rule 77)
    assign_shift_op  ->  identifier . SRR_ASS value   (rule 78)
    assign_shift_op  ->  identifier . SL_ASS value   (rule 79)
    expression  ->  identifier . body_enum_p   (rule 173)
    expression  ->  identifier .   (rule 175)
    expression  ->  identifier . body   (rule 182)
    expression  ->  identifier . body_enum_sq   (rule 183)

    ADD_ASS	shift, and go to state 104
    SUB_ASS	shift, and go to state 105
    DEC 	shift, and go to state 106
    INC 	shift, and go to state 107
    DIV_ASS	shift, and go to state 108
    MUL_ASS	shift, and go to state 109
    MOD_ASS	shift, and go to state 110
    SRR_ASS	shift, and go to state 111
    SR_ASS	shift, and go to state 112
    SL_ASS	shift, and go to state 113
    '(' 	shift, and go to state 114
    '=' 	shift, and go to state 115
    '.' 	shift, and go to state 116
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70

    $default	reduce using rule 175 (expression)

    body	go to state 151
    body_sq	go to state 117
    body_enum_sq	go to state 229
    body_p	go to state 119
    body_enum_p	go to state 153



state 130

    if_cond  ->  IF '(' if_expr . ')' block   (rule 110)
    if_cond  ->  IF '(' if_expr . ')' command   (rule 111)
    if_cond  ->  IF '(' if_expr . ')' command ELSE command   (rule 112)
    if_cond  ->  IF '(' if_expr . ')' block ELSE command   (rule 113)
    if_cond  ->  IF '(' if_expr . ')' block ELSE block   (rule 114)
    if_cond  ->  IF '(' if_expr . ')' command ELSE block   (rule 115)

    ')' 	shift, and go to state 230



state 131

    if_expr  ->  expression .   (rule 107)
    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    $default	reduce using rule 107 (if_expr)



state 132

    include  ->  INCLUDE '(' string . ')' ';'   (rule 35)

    ')' 	shift, and go to state 231



state 133

    import  ->  IMPORT '(' string . ')' ';'   (rule 34)

    ')' 	shift, and go to state 232



state 134

    expression  ->  '(' expression . ')'   (rule 146)
    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    ')' 	shift, and go to state 233
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180



state 135

    return  ->  RETURN '@' ';' .   (rule 37)

    $default	reduce using rule 37 (return)



state 136

    ref  ->  '@' . IDENT   (rule 90)

    IDENT	shift, and go to state 234



state 137

    call_function  ->  identifier . '(' parameters ')'   (rule 44)
    call_function  ->  identifier . '(' ')'   (rule 45)
    call_function  ->  identifier . body_enum_sq '(' ')'   (rule 46)
    call_function  ->  identifier . body_enum_sq '(' parameters ')'   (rule 47)
    call_function  ->  identifier . body_enum_sq body_enum_p '(' ')'   (rule 48)
    call_function  ->  identifier . body_enum_sq body_enum_p '(' parameters ')'   (rule 49)
    call_function  ->  identifier . body_enum_p '(' ')'   (rule 50)
    call_function  ->  identifier . body_enum_p '(' parameters ')'   (rule 51)
    argument  ->  identifier . ':' expression   (rule 141)
    argument  ->  identifier . ':' ref   (rule 142)
    expression  ->  identifier . body_enum_p   (rule 173)
    expression  ->  identifier .   (rule 175)
    expression  ->  identifier . body   (rule 182)
    expression  ->  identifier . body_enum_sq   (rule 183)

    '(' 	shift, and go to state 114
    '.' 	shift, and go to state 116
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    ':' 	shift, and go to state 235

    $default	reduce using rule 175 (expression)

    body	go to state 151
    body_sq	go to state 117
    body_enum_sq	go to state 152
    body_p	go to state 119
    body_enum_p	go to state 153



state 138

    ip  ->  integer . '.' integer '.' integer '.' integer   (rule 88)
    argument  ->  integer . ':' expression   (rule 138)
    argument  ->  integer . ':' ref   (rule 140)
    expression  ->  integer .   (rule 176)

    '.' 	shift, and go to state 154
    ':' 	shift, and go to state 236

    $default	reduce using rule 176 (expression)



state 139

    argument  ->  string . ':' expression   (rule 137)
    argument  ->  string . ':' ref   (rule 139)
    expression  ->  string .   (rule 177)

    ':' 	shift, and go to state 237

    $default	reduce using rule 177 (expression)



state 140

    argument  ->  ref .   (rule 144)

    $default	reduce using rule 144 (argument)



state 141

    body  ->  '{' argument_list . '}'   (rule 118)
    argument_list  ->  argument_list . ',' argument   (rule 135)

    ',' 	shift, and go to state 238
    '}' 	shift, and go to state 239



state 142

    argument_list  ->  argument .   (rule 136)

    $default	reduce using rule 136 (argument_list)



state 143

    argument  ->  expression .   (rule 143)
    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    $default	reduce using rule 143 (argument)



state 144

    body_sq  ->  '[' ']' .   (rule 119)

    $default	reduce using rule 119 (body_sq)



state 145

    call_function  ->  identifier . '(' parameters ')'   (rule 44)
    call_function  ->  identifier . '(' ')'   (rule 45)
    call_function  ->  identifier . body_enum_sq '(' ')'   (rule 46)
    call_function  ->  identifier . body_enum_sq '(' parameters ')'   (rule 47)
    call_function  ->  identifier . body_enum_sq body_enum_p '(' ')'   (rule 48)
    call_function  ->  identifier . body_enum_sq body_enum_p '(' parameters ')'   (rule 49)
    call_function  ->  identifier . body_enum_p '(' ')'   (rule 50)
    call_function  ->  identifier . body_enum_p '(' parameters ')'   (rule 51)
    body_sq  ->  '[' identifier . ']'   (rule 122)
    argument  ->  identifier . ':' expression   (rule 141)
    argument  ->  identifier . ':' ref   (rule 142)
    expression  ->  identifier . body_enum_p   (rule 173)
    expression  ->  identifier .   (rule 175)
    expression  ->  identifier . body   (rule 182)
    expression  ->  identifier . body_enum_sq   (rule 183)

    '(' 	shift, and go to state 114
    '.' 	shift, and go to state 116
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    ']' 	shift, and go to state 240
    ':' 	shift, and go to state 235

    ']' 	[reduce using rule 175 (expression)]
    $default	reduce using rule 175 (expression)

    body	go to state 151
    body_sq	go to state 117
    body_enum_sq	go to state 152
    body_p	go to state 119
    body_enum_p	go to state 153



state 146

    ip  ->  integer . '.' integer '.' integer '.' integer   (rule 88)
    body_sq  ->  '[' integer . ']'   (rule 121)
    argument  ->  integer . ':' expression   (rule 138)
    argument  ->  integer . ':' ref   (rule 140)
    expression  ->  integer .   (rule 176)

    '.' 	shift, and go to state 154
    ']' 	shift, and go to state 241
    ':' 	shift, and go to state 236

    ']' 	[reduce using rule 176 (expression)]
    $default	reduce using rule 176 (expression)



state 147

    body_sq  ->  '[' argument_list . ']'   (rule 120)
    argument_list  ->  argument_list . ',' argument   (rule 135)

    ',' 	shift, and go to state 238
    ']' 	shift, and go to state 242



state 148

    expression  ->  expression . AND expression   (rule 147)
    expression  ->  '!' expression .   (rule 148)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    OR  	[reduce using rule 148 (expression)]
    AND 	[reduce using rule 148 (expression)]
    SUBSTR_EQ	[reduce using rule 148 (expression)]
    SUBSTR_NEQ	[reduce using rule 148 (expression)]
    REGEX_EQ	[reduce using rule 148 (expression)]
    REGEX_NEQ	[reduce using rule 148 (expression)]
    POWER	[reduce using rule 148 (expression)]
    CMP_EQ	[reduce using rule 148 (expression)]
    CMP_GE	[reduce using rule 148 (expression)]
    CMP_LE	[reduce using rule 148 (expression)]
    CMP_NEQ	[reduce using rule 148 (expression)]
    SL  	[reduce using rule 148 (expression)]
    SR  	[reduce using rule 148 (expression)]
    SRR 	[reduce using rule 148 (expression)]
    '&' 	[reduce using rule 148 (expression)]
    '+' 	[reduce using rule 148 (expression)]
    '-' 	[reduce using rule 148 (expression)]
    '*' 	[reduce using rule 148 (expression)]
    '/' 	[reduce using rule 148 (expression)]
    '%' 	[reduce using rule 148 (expression)]
    '^' 	[reduce using rule 148 (expression)]
    '|' 	[reduce using rule 148 (expression)]
    '<' 	[reduce using rule 148 (expression)]
    '>' 	[reduce using rule 148 (expression)]
    $default	reduce using rule 148 (expression)



state 149

    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  '-' expression .   (rule 152)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    OR  	[reduce using rule 152 (expression)]
    AND 	[reduce using rule 152 (expression)]
    SUBSTR_EQ	[reduce using rule 152 (expression)]
    SUBSTR_NEQ	[reduce using rule 152 (expression)]
    REGEX_EQ	[reduce using rule 152 (expression)]
    REGEX_NEQ	[reduce using rule 152 (expression)]
    POWER	[reduce using rule 152 (expression)]
    CMP_EQ	[reduce using rule 152 (expression)]
    CMP_GE	[reduce using rule 152 (expression)]
    CMP_LE	[reduce using rule 152 (expression)]
    CMP_NEQ	[reduce using rule 152 (expression)]
    SL  	[reduce using rule 152 (expression)]
    SR  	[reduce using rule 152 (expression)]
    SRR 	[reduce using rule 152 (expression)]
    '&' 	[reduce using rule 152 (expression)]
    '+' 	[reduce using rule 152 (expression)]
    '-' 	[reduce using rule 152 (expression)]
    '*' 	[reduce using rule 152 (expression)]
    '/' 	[reduce using rule 152 (expression)]
    '%' 	[reduce using rule 152 (expression)]
    '^' 	[reduce using rule 152 (expression)]
    '|' 	[reduce using rule 152 (expression)]
    '<' 	[reduce using rule 152 (expression)]
    '>' 	[reduce using rule 152 (expression)]
    $default	reduce using rule 152 (expression)



state 150

    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)
    expression  ->  '~' expression .   (rule 174)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    OR  	[reduce using rule 174 (expression)]
    AND 	[reduce using rule 174 (expression)]
    SUBSTR_EQ	[reduce using rule 174 (expression)]
    SUBSTR_NEQ	[reduce using rule 174 (expression)]
    REGEX_EQ	[reduce using rule 174 (expression)]
    REGEX_NEQ	[reduce using rule 174 (expression)]
    POWER	[reduce using rule 174 (expression)]
    CMP_EQ	[reduce using rule 174 (expression)]
    CMP_GE	[reduce using rule 174 (expression)]
    CMP_LE	[reduce using rule 174 (expression)]
    CMP_NEQ	[reduce using rule 174 (expression)]
    SL  	[reduce using rule 174 (expression)]
    SR  	[reduce using rule 174 (expression)]
    SRR 	[reduce using rule 174 (expression)]
    '&' 	[reduce using rule 174 (expression)]
    '+' 	[reduce using rule 174 (expression)]
    '-' 	[reduce using rule 174 (expression)]
    '*' 	[reduce using rule 174 (expression)]
    '/' 	[reduce using rule 174 (expression)]
    '%' 	[reduce using rule 174 (expression)]
    '^' 	[reduce using rule 174 (expression)]
    '|' 	[reduce using rule 174 (expression)]
    '<' 	[reduce using rule 174 (expression)]
    '>' 	[reduce using rule 174 (expression)]
    $default	reduce using rule 174 (expression)



state 151

    expression  ->  identifier body .   (rule 182)

    $default	reduce using rule 182 (expression)



state 152

    call_function  ->  identifier body_enum_sq . '(' ')'   (rule 46)
    call_function  ->  identifier body_enum_sq . '(' parameters ')'   (rule 47)
    call_function  ->  identifier body_enum_sq . body_enum_p '(' ')'   (rule 48)
    call_function  ->  identifier body_enum_sq . body_enum_p '(' parameters ')'   (rule 49)
    body_enum_sq  ->  body_enum_sq . body_sq   (rule 123)
    expression  ->  identifier body_enum_sq .   (rule 183)

    '(' 	shift, and go to state 218
    '.' 	shift, and go to state 116
    '[' 	shift, and go to state 70

    '(' 	[reduce using rule 183 (expression)]
    $default	reduce using rule 183 (expression)

    body_sq	go to state 220
    body_p	go to state 119
    body_enum_p	go to state 221



state 153

    call_function  ->  identifier body_enum_p . '(' ')'   (rule 50)
    call_function  ->  identifier body_enum_p . '(' parameters ')'   (rule 51)
    body_enum_p  ->  body_enum_p . body_p   (rule 126)
    expression  ->  identifier body_enum_p .   (rule 173)

    '(' 	shift, and go to state 222
    '.' 	shift, and go to state 116

    '(' 	[reduce using rule 173 (expression)]
    $default	reduce using rule 173 (expression)

    body_p	go to state 223



state 154

    ip  ->  integer '.' . integer '.' integer '.' integer   (rule 88)

    INT 	shift, and go to state 62
    FALSE	shift, and go to state 64
    TRUE	shift, and go to state 66

    integer	go to state 243



state 155

    return  ->  RETURN body ';' .   (rule 38)

    $default	reduce using rule 38 (return)



state 156

    expression  ->  expression OR . expression   (rule 149)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 244



state 157

    expression  ->  expression AND . expression   (rule 147)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 245



state 158

    expression  ->  expression SUBSTR_EQ . expression   (rule 163)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 246



state 159

    expression  ->  expression SUBSTR_NEQ . expression   (rule 164)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 247



state 160

    expression  ->  expression REGEX_EQ . expression   (rule 166)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 248



state 161

    expression  ->  expression REGEX_NEQ . expression   (rule 165)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 249



state 162

    expression  ->  expression POWER . expression   (rule 154)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 250



state 163

    expression  ->  expression CMP_EQ . expression   (rule 171)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 251



state 164

    expression  ->  expression CMP_GE . expression   (rule 169)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 252



state 165

    expression  ->  expression CMP_LE . expression   (rule 170)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 253



state 166

    expression  ->  expression CMP_NEQ . expression   (rule 172)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 254



state 167

    expression  ->  expression SL . expression   (rule 161)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 255



state 168

    expression  ->  expression SR . expression   (rule 160)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 256



state 169

    expression  ->  expression SRR . expression   (rule 162)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 257



state 170

    expression  ->  expression '&' . expression   (rule 157)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 258



state 171

    return  ->  RETURN expression ';' .   (rule 36)

    $default	reduce using rule 36 (return)



state 172

    expression  ->  expression '+' . expression   (rule 150)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 259



state 173

    expression  ->  expression '-' . expression   (rule 151)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 260



state 174

    expression  ->  expression '*' . expression   (rule 153)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 261



state 175

    expression  ->  expression '/' . expression   (rule 155)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 262



state 176

    expression  ->  expression '%' . expression   (rule 156)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 263



state 177

    expression  ->  expression '^' . expression   (rule 158)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 264



state 178

    expression  ->  expression '|' . expression   (rule 159)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 265



state 179

    expression  ->  expression '<' . expression   (rule 167)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 266



state 180

    expression  ->  expression '>' . expression   (rule 168)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 267



state 181

    for_loop  ->  FOR '(' if_expr . ';' if_expr ';' if_expr ')' block   (rule 97)
    for_loop  ->  FOR '(' if_expr . ';' if_expr ';' if_expr ')' command   (rule 98)

    ';' 	shift, and go to state 268



state 182

    foreach_loop  ->  FOREACH '(' identifier . IN_ITER if_expr ')' block   (rule 101)
    foreach_loop  ->  FOREACH '(' identifier . IN_ITER if_expr ')' command   (rule 102)

    IN_ITER	shift, and go to state 269



state 183

    foreach_loop  ->  FOREACH identifier '(' . if_expr ')' block   (rule 99)
    foreach_loop  ->  FOREACH identifier '(' . if_expr ')' command   (rule 100)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    DEC 	shift, and go to state 19
    INC 	shift, and go to state 20
    '(' 	shift, and go to state 126
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    assign	go to state 127
    inc_dec_exp	go to state 128
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 129
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    if_expr	go to state 270
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 131



state 184

    while_loop  ->  WHILE '(' if_expr . ')' block   (rule 105)
    while_loop  ->  WHILE '(' if_expr . ')' command   (rule 106)

    ')' 	shift, and go to state 271



state 185

    repeat_loop  ->  REPEAT command UNTIL . if_expr ';'   (rule 104)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    DEC 	shift, and go to state 19
    INC 	shift, and go to state 20
    '(' 	shift, and go to state 126
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    assign	go to state 127
    inc_dec_exp	go to state 128
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 129
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    if_expr	go to state 272
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 131



state 186

    repeat_loop  ->  REPEAT block UNTIL . if_expr ';'   (rule 103)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    DEC 	shift, and go to state 19
    INC 	shift, and go to state 20
    '(' 	shift, and go to state 126
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    assign	go to state 127
    inc_dec_exp	go to state 128
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 129
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    if_expr	go to state 273
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 131



state 187

    inc_dec_exp  ->  DEC identifier body_enum_sq .   (rule 69)
    body_enum_sq  ->  body_enum_sq . body_sq   (rule 123)

    '[' 	shift, and go to state 70

    $default	reduce using rule 69 (inc_dec_exp)

    body_sq	go to state 220



state 188

    inc_dec_exp  ->  INC identifier body_enum_sq .   (rule 68)
    body_enum_sq  ->  body_enum_sq . body_sq   (rule 123)

    '[' 	shift, and go to state 70

    $default	reduce using rule 68 (inc_dec_exp)

    body_sq	go to state 220



state 189

    assign  ->  '(' assign ')' .   (rule 63)

    $default	reduce using rule 63 (assign)



state 190

    assign  ->  identifier body_enum_sq . '=' value   (rule 56)
    assign  ->  identifier body_enum_sq . '=' list_int   (rule 58)
    assign  ->  identifier body_enum_sq . '=' assign   (rule 59)
    assign  ->  identifier body_enum_sq . '=' ref   (rule 60)
    body_enum_sq  ->  body_enum_sq . body_sq   (rule 123)

    '=' 	shift, and go to state 219
    '[' 	shift, and go to state 70

    body_sq	go to state 220



state 191

    block  ->  '{' lines '}' .   (rule 117)

    $default	reduce using rule 117 (block)



state 192

    rep  ->  call_function REP identifier . ';'   (rule 43)

    ';' 	shift, and go to state 274



state 193

    rep  ->  call_function REP integer . ';'   (rule 42)

    ';' 	shift, and go to state 275



state 194

    assign_math_op  ->  identifier ADD_ASS value .   (rule 72)

    $default	reduce using rule 72 (assign_math_op)



state 195

    assign_math_op  ->  identifier SUB_ASS value .   (rule 73)

    $default	reduce using rule 73 (assign_math_op)



state 196

    assign_math_op  ->  identifier DIV_ASS value .   (rule 75)

    $default	reduce using rule 75 (assign_math_op)



state 197

    assign_math_op  ->  identifier MUL_ASS value .   (rule 74)

    $default	reduce using rule 74 (assign_math_op)



state 198

    assign_math_op  ->  identifier MOD_ASS value .   (rule 76)

    $default	reduce using rule 76 (assign_math_op)



state 199

    assign_shift_op  ->  identifier SRR_ASS value .   (rule 78)

    $default	reduce using rule 78 (assign_shift_op)



state 200

    assign_shift_op  ->  identifier SR_ASS value .   (rule 77)

    $default	reduce using rule 77 (assign_shift_op)



state 201

    assign_shift_op  ->  identifier SL_ASS value .   (rule 79)

    $default	reduce using rule 79 (assign_shift_op)



state 202

    call_function  ->  identifier '(' ')' .   (rule 45)

    $default	reduce using rule 45 (call_function)



state 203

    parameter  ->  '&' . identifier   (rule 15)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18

    identifier	go to state 276



state 204

    call_function  ->  identifier '(' parameters . ')'   (rule 44)

    ')' 	shift, and go to state 277



state 205

    parameters  ->  parameter . ',' parameters   (rule 13)
    parameters  ->  parameter .   (rule 14)

    ',' 	shift, and go to state 278

    $default	reduce using rule 14 (parameters)



state 206

    parameter  ->  assign .   (rule 16)

    $default	reduce using rule 16 (parameter)



state 207

    call_function  ->  identifier . '(' parameters ')'   (rule 44)
    call_function  ->  identifier . '(' ')'   (rule 45)
    call_function  ->  identifier . body_enum_sq '(' ')'   (rule 46)
    call_function  ->  identifier . body_enum_sq '(' parameters ')'   (rule 47)
    call_function  ->  identifier . body_enum_sq body_enum_p '(' ')'   (rule 48)
    call_function  ->  identifier . body_enum_sq body_enum_p '(' parameters ')'   (rule 49)
    call_function  ->  identifier . body_enum_p '(' ')'   (rule 50)
    call_function  ->  identifier . body_enum_p '(' parameters ')'   (rule 51)
    assign  ->  identifier . '=' value   (rule 53)
    assign  ->  identifier . '=' assign   (rule 54)
    assign  ->  identifier . '=' ref   (rule 55)
    assign  ->  identifier . body_enum_sq '=' value   (rule 56)
    assign  ->  identifier . '=' list_int   (rule 57)
    assign  ->  identifier . body_enum_sq '=' list_int   (rule 58)
    assign  ->  identifier . body_enum_sq '=' assign   (rule 59)
    assign  ->  identifier . body_enum_sq '=' ref   (rule 60)
    assign_math_op  ->  identifier . ADD_ASS value   (rule 72)
    assign_math_op  ->  identifier . SUB_ASS value   (rule 73)
    assign_math_op  ->  identifier . MUL_ASS value   (rule 74)
    assign_math_op  ->  identifier . DIV_ASS value   (rule 75)
    assign_math_op  ->  identifier . MOD_ASS value   (rule 76)
    assign_shift_op  ->  identifier . SR_ASS value   (rule 77)
    assign_shift_op  ->  identifier . SRR_ASS value   (rule 78)
    assign_shift_op  ->  identifier . SL_ASS value   (rule 79)
    argument  ->  identifier . ':' expression   (rule 141)
    argument  ->  identifier . ':' ref   (rule 142)
    expression  ->  identifier . body_enum_p   (rule 173)
    expression  ->  identifier .   (rule 175)
    expression  ->  identifier . body   (rule 182)
    expression  ->  identifier . body_enum_sq   (rule 183)

    ADD_ASS	shift, and go to state 104
    SUB_ASS	shift, and go to state 105
    DIV_ASS	shift, and go to state 108
    MUL_ASS	shift, and go to state 109
    MOD_ASS	shift, and go to state 110
    SRR_ASS	shift, and go to state 111
    SR_ASS	shift, and go to state 112
    SL_ASS	shift, and go to state 113
    '(' 	shift, and go to state 114
    '=' 	shift, and go to state 115
    '.' 	shift, and go to state 116
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    ':' 	shift, and go to state 235

    $default	reduce using rule 175 (expression)

    body	go to state 151
    body_sq	go to state 117
    body_enum_sq	go to state 279
    body_p	go to state 119
    body_enum_p	go to state 153



state 208

    parameter  ->  argument .   (rule 17)

    $default	reduce using rule 17 (parameter)



state 209

    assign  ->  identifier '=' assign .   (rule 54)

    $default	reduce using rule 54 (assign)



state 210

    assign  ->  identifier '=' value .   (rule 53)

    $default	reduce using rule 53 (assign)



state 211

    call_function  ->  identifier . '(' parameters ')'   (rule 44)
    call_function  ->  identifier . '(' ')'   (rule 45)
    call_function  ->  identifier . body_enum_sq '(' ')'   (rule 46)
    call_function  ->  identifier . body_enum_sq '(' parameters ')'   (rule 47)
    call_function  ->  identifier . body_enum_sq body_enum_p '(' ')'   (rule 48)
    call_function  ->  identifier . body_enum_sq body_enum_p '(' parameters ')'   (rule 49)
    call_function  ->  identifier . body_enum_p '(' ')'   (rule 50)
    call_function  ->  identifier . body_enum_p '(' parameters ')'   (rule 51)
    assign  ->  identifier . '=' value   (rule 53)
    assign  ->  identifier . '=' assign   (rule 54)
    assign  ->  identifier . '=' ref   (rule 55)
    assign  ->  identifier . body_enum_sq '=' value   (rule 56)
    assign  ->  identifier . '=' list_int   (rule 57)
    assign  ->  identifier . body_enum_sq '=' list_int   (rule 58)
    assign  ->  identifier . body_enum_sq '=' assign   (rule 59)
    assign  ->  identifier . body_enum_sq '=' ref   (rule 60)
    assign_math_op  ->  identifier . ADD_ASS value   (rule 72)
    assign_math_op  ->  identifier . SUB_ASS value   (rule 73)
    assign_math_op  ->  identifier . MUL_ASS value   (rule 74)
    assign_math_op  ->  identifier . DIV_ASS value   (rule 75)
    assign_math_op  ->  identifier . MOD_ASS value   (rule 76)
    assign_shift_op  ->  identifier . SR_ASS value   (rule 77)
    assign_shift_op  ->  identifier . SRR_ASS value   (rule 78)
    assign_shift_op  ->  identifier . SL_ASS value   (rule 79)
    expression  ->  identifier . body_enum_p   (rule 173)
    expression  ->  identifier .   (rule 175)
    expression  ->  identifier . body   (rule 182)
    expression  ->  identifier . body_enum_sq   (rule 183)

    ADD_ASS	shift, and go to state 104
    SUB_ASS	shift, and go to state 105
    DIV_ASS	shift, and go to state 108
    MUL_ASS	shift, and go to state 109
    MOD_ASS	shift, and go to state 110
    SRR_ASS	shift, and go to state 111
    SR_ASS	shift, and go to state 112
    SL_ASS	shift, and go to state 113
    '(' 	shift, and go to state 114
    '=' 	shift, and go to state 115
    '.' 	shift, and go to state 116
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70

    '(' 	[reduce using rule 175 (expression)]
    '=' 	[reduce using rule 175 (expression)]
    '{' 	[reduce using rule 175 (expression)]
    $default	reduce using rule 175 (expression)

    body	go to state 151
    body_sq	go to state 117
    body_enum_sq	go to state 279
    body_p	go to state 119
    body_enum_p	go to state 153



state 212

    ip  ->  integer . '.' integer '.' integer '.' integer   (rule 88)
    list_int  ->  integer . ',' integer   (rule 134)
    expression  ->  integer .   (rule 176)

    ',' 	shift, and go to state 280
    '.' 	shift, and go to state 154

    ',' 	[reduce using rule 176 (expression)]
    $default	reduce using rule 176 (expression)



state 213

    assign  ->  identifier '=' ref .   (rule 55)

    $default	reduce using rule 55 (assign)



state 214

    assign  ->  identifier '=' list_int .   (rule 57)
    list_int  ->  list_int . ',' integer   (rule 133)

    ',' 	shift, and go to state 281

    ',' 	[reduce using rule 57 (assign)]
    $default	reduce using rule 57 (assign)



state 215

    body_p  ->  '.' identifier .   (rule 125)

    $default	reduce using rule 125 (body_p)



state 216

    inc_dec_exp  ->  identifier body_enum_sq DEC .   (rule 71)

    $default	reduce using rule 71 (inc_dec_exp)



state 217

    inc_dec_exp  ->  identifier body_enum_sq INC .   (rule 70)

    $default	reduce using rule 70 (inc_dec_exp)



state 218

    call_function  ->  identifier body_enum_sq '(' . ')'   (rule 46)
    call_function  ->  identifier body_enum_sq '(' . parameters ')'   (rule 47)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 126
    ')' 	shift, and go to state 282
    '&' 	shift, and go to state 203
    '@' 	shift, and go to state 136
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    ')' 	[reduce using rule 145 (expression)]
    '&' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    parameters	go to state 283
    parameter	go to state 205
    call_function	go to state 74
    assign	go to state 206
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 207
    integer	go to state 138
    string	go to state 139
    ip  	go to state 78
    null	go to state 79
    ref 	go to state 140
    body	go to state 96
    body_sq	go to state 81
    argument	go to state 208
    expression	go to state 143



state 219

    assign  ->  identifier body_enum_sq '=' . value   (rule 56)
    assign  ->  identifier body_enum_sq '=' . list_int   (rule 58)
    assign  ->  identifier body_enum_sq '=' . assign   (rule 59)
    assign  ->  identifier body_enum_sq '=' . ref   (rule 60)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 126
    '@' 	shift, and go to state 136
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    IN_ITER	[reduce using rule 145 (expression)]
    REP 	[reduce using rule 145 (expression)]
    IDENT	[reduce using rule 145 (expression)]
    '(' 	[reduce using rule 145 (expression)]
    '=' 	[reduce using rule 145 (expression)]
    '{' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    assign	go to state 284
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    value	go to state 285
    identifier	go to state 211
    integer	go to state 212
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    ref 	go to state 286
    body	go to state 96
    body_sq	go to state 81
    list_int	go to state 287
    expression	go to state 97



state 220

    body_enum_sq  ->  body_enum_sq body_sq .   (rule 123)

    $default	reduce using rule 123 (body_enum_sq)



state 221

    call_function  ->  identifier body_enum_sq body_enum_p . '(' ')'   (rule 48)
    call_function  ->  identifier body_enum_sq body_enum_p . '(' parameters ')'   (rule 49)
    body_enum_p  ->  body_enum_p . body_p   (rule 126)

    '(' 	shift, and go to state 288
    '.' 	shift, and go to state 116

    body_p	go to state 223



state 222

    call_function  ->  identifier body_enum_p '(' . ')'   (rule 50)
    call_function  ->  identifier body_enum_p '(' . parameters ')'   (rule 51)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 126
    ')' 	shift, and go to state 289
    '&' 	shift, and go to state 203
    '@' 	shift, and go to state 136
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    ')' 	[reduce using rule 145 (expression)]
    '&' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    parameters	go to state 290
    parameter	go to state 205
    call_function	go to state 74
    assign	go to state 206
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 207
    integer	go to state 138
    string	go to state 139
    ip  	go to state 78
    null	go to state 79
    ref 	go to state 140
    body	go to state 96
    body_sq	go to state 81
    argument	go to state 208
    expression	go to state 143



state 223

    body_enum_p  ->  body_enum_p body_p .   (rule 126)

    $default	reduce using rule 126 (body_enum_p)



state 224

    function  ->  FUNCTION identifier '(' ')' . block   (rule 12)

    '{' 	shift, and go to state 24

    block	go to state 291



state 225

    function  ->  FUNCTION identifier '(' parameters . ')' block   (rule 11)

    ')' 	shift, and go to state 292



state 226

    var  ->  identifier '=' value .   (rule 128)

    $default	reduce using rule 128 (var)



state 227

    var  ->  identifier '=' ref .   (rule 129)

    $default	reduce using rule 129 (var)



state 228

    vars  ->  var ',' vars .   (rule 131)

    $default	reduce using rule 131 (vars)



state 229

    call_function  ->  identifier body_enum_sq . '(' ')'   (rule 46)
    call_function  ->  identifier body_enum_sq . '(' parameters ')'   (rule 47)
    call_function  ->  identifier body_enum_sq . body_enum_p '(' ')'   (rule 48)
    call_function  ->  identifier body_enum_sq . body_enum_p '(' parameters ')'   (rule 49)
    assign  ->  identifier body_enum_sq . '=' value   (rule 56)
    assign  ->  identifier body_enum_sq . '=' list_int   (rule 58)
    assign  ->  identifier body_enum_sq . '=' assign   (rule 59)
    assign  ->  identifier body_enum_sq . '=' ref   (rule 60)
    inc_dec_exp  ->  identifier body_enum_sq . INC   (rule 70)
    inc_dec_exp  ->  identifier body_enum_sq . DEC   (rule 71)
    body_enum_sq  ->  body_enum_sq . body_sq   (rule 123)
    expression  ->  identifier body_enum_sq .   (rule 183)

    DEC 	shift, and go to state 216
    INC 	shift, and go to state 217
    '(' 	shift, and go to state 218
    '=' 	shift, and go to state 219
    '.' 	shift, and go to state 116
    '[' 	shift, and go to state 70

    $default	reduce using rule 183 (expression)

    body_sq	go to state 220
    body_p	go to state 119
    body_enum_p	go to state 221



state 230

    if_cond  ->  IF '(' if_expr ')' . block   (rule 110)
    if_cond  ->  IF '(' if_expr ')' . command   (rule 111)
    if_cond  ->  IF '(' if_expr ')' . command ELSE command   (rule 112)
    if_cond  ->  IF '(' if_expr ')' . block ELSE command   (rule 113)
    if_cond  ->  IF '(' if_expr ')' . block ELSE block   (rule 114)
    if_cond  ->  IF '(' if_expr ')' . command ELSE block   (rule 115)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    DEC 	shift, and go to state 19
    INC 	shift, and go to state 20
    '(' 	shift, and go to state 21
    ';' 	shift, and go to state 22
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 24

    command	go to state 293
    simple	go to state 30
    break	go to state 31
    continue	go to state 32
    import	go to state 33
    include	go to state 34
    return	go to state 35
    empty	go to state 36
    global	go to state 37
    local	go to state 38
    rep 	go to state 39
    call_function	go to state 40
    assign	go to state 41
    inc_dec_exp	go to state 42
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 45
    compound	go to state 46
    for_loop	go to state 47
    foreach_loop	go to state 48
    repeat_loop	go to state 49
    while_loop	go to state 50
    if_cond	go to state 51
    block	go to state 294



state 231

    include  ->  INCLUDE '(' string ')' . ';'   (rule 35)

    ';' 	shift, and go to state 295



state 232

    import  ->  IMPORT '(' string ')' . ';'   (rule 34)

    ';' 	shift, and go to state 296



state 233

    expression  ->  '(' expression ')' .   (rule 146)

    $default	reduce using rule 146 (expression)



state 234

    ref  ->  '@' IDENT .   (rule 90)

    $default	reduce using rule 90 (ref)



state 235

    argument  ->  identifier ':' . expression   (rule 141)
    argument  ->  identifier ':' . ref   (rule 142)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '@' 	shift, and go to state 136
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    ref 	go to state 297
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 298



state 236

    argument  ->  integer ':' . expression   (rule 138)
    argument  ->  integer ':' . ref   (rule 140)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '@' 	shift, and go to state 136
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    ref 	go to state 299
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 300



state 237

    argument  ->  string ':' . expression   (rule 137)
    argument  ->  string ':' . ref   (rule 139)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '@' 	shift, and go to state 136
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 75
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    ref 	go to state 301
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 302



state 238

    argument_list  ->  argument_list ',' . argument   (rule 135)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 67
    '@' 	shift, and go to state 136
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    identifier	go to state 137
    integer	go to state 138
    string	go to state 139
    ip  	go to state 78
    null	go to state 79
    ref 	go to state 140
    body	go to state 96
    body_sq	go to state 81
    argument	go to state 303
    expression	go to state 143



state 239

    body  ->  '{' argument_list '}' .   (rule 118)

    $default	reduce using rule 118 (body)



state 240

    body_sq  ->  '[' identifier ']' .   (rule 122)

    $default	reduce using rule 122 (body_sq)



state 241

    body_sq  ->  '[' integer ']' .   (rule 121)

    $default	reduce using rule 121 (body_sq)



state 242

    body_sq  ->  '[' argument_list ']' .   (rule 120)

    $default	reduce using rule 120 (body_sq)



state 243

    ip  ->  integer '.' integer . '.' integer '.' integer   (rule 88)

    '.' 	shift, and go to state 304



state 244

    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression OR expression .   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    OR  	[reduce using rule 149 (expression)]
    AND 	[reduce using rule 149 (expression)]
    SUBSTR_EQ	[reduce using rule 149 (expression)]
    SUBSTR_NEQ	[reduce using rule 149 (expression)]
    REGEX_EQ	[reduce using rule 149 (expression)]
    REGEX_NEQ	[reduce using rule 149 (expression)]
    POWER	[reduce using rule 149 (expression)]
    CMP_EQ	[reduce using rule 149 (expression)]
    CMP_GE	[reduce using rule 149 (expression)]
    CMP_LE	[reduce using rule 149 (expression)]
    CMP_NEQ	[reduce using rule 149 (expression)]
    SL  	[reduce using rule 149 (expression)]
    SR  	[reduce using rule 149 (expression)]
    SRR 	[reduce using rule 149 (expression)]
    '&' 	[reduce using rule 149 (expression)]
    '+' 	[reduce using rule 149 (expression)]
    '-' 	[reduce using rule 149 (expression)]
    '*' 	[reduce using rule 149 (expression)]
    '/' 	[reduce using rule 149 (expression)]
    '%' 	[reduce using rule 149 (expression)]
    '^' 	[reduce using rule 149 (expression)]
    '|' 	[reduce using rule 149 (expression)]
    '<' 	[reduce using rule 149 (expression)]
    '>' 	[reduce using rule 149 (expression)]
    $default	reduce using rule 149 (expression)



state 245

    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression AND expression .   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    OR  	[reduce using rule 147 (expression)]
    AND 	[reduce using rule 147 (expression)]
    SUBSTR_EQ	[reduce using rule 147 (expression)]
    SUBSTR_NEQ	[reduce using rule 147 (expression)]
    REGEX_EQ	[reduce using rule 147 (expression)]
    REGEX_NEQ	[reduce using rule 147 (expression)]
    POWER	[reduce using rule 147 (expression)]
    CMP_EQ	[reduce using rule 147 (expression)]
    CMP_GE	[reduce using rule 147 (expression)]
    CMP_LE	[reduce using rule 147 (expression)]
    CMP_NEQ	[reduce using rule 147 (expression)]
    SL  	[reduce using rule 147 (expression)]
    SR  	[reduce using rule 147 (expression)]
    SRR 	[reduce using rule 147 (expression)]
    '&' 	[reduce using rule 147 (expression)]
    '+' 	[reduce using rule 147 (expression)]
    '-' 	[reduce using rule 147 (expression)]
    '*' 	[reduce using rule 147 (expression)]
    '/' 	[reduce using rule 147 (expression)]
    '%' 	[reduce using rule 147 (expression)]
    '^' 	[reduce using rule 147 (expression)]
    '|' 	[reduce using rule 147 (expression)]
    '<' 	[reduce using rule 147 (expression)]
    '>' 	[reduce using rule 147 (expression)]
    $default	reduce using rule 147 (expression)



state 246

    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression SUBSTR_EQ expression .   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    OR  	[reduce using rule 163 (expression)]
    AND 	[reduce using rule 163 (expression)]
    SUBSTR_EQ	[reduce using rule 163 (expression)]
    SUBSTR_NEQ	[reduce using rule 163 (expression)]
    REGEX_EQ	[reduce using rule 163 (expression)]
    REGEX_NEQ	[reduce using rule 163 (expression)]
    POWER	[reduce using rule 163 (expression)]
    CMP_EQ	[reduce using rule 163 (expression)]
    CMP_GE	[reduce using rule 163 (expression)]
    CMP_LE	[reduce using rule 163 (expression)]
    CMP_NEQ	[reduce using rule 163 (expression)]
    SL  	[reduce using rule 163 (expression)]
    SR  	[reduce using rule 163 (expression)]
    SRR 	[reduce using rule 163 (expression)]
    '&' 	[reduce using rule 163 (expression)]
    '+' 	[reduce using rule 163 (expression)]
    '-' 	[reduce using rule 163 (expression)]
    '*' 	[reduce using rule 163 (expression)]
    '/' 	[reduce using rule 163 (expression)]
    '%' 	[reduce using rule 163 (expression)]
    '^' 	[reduce using rule 163 (expression)]
    '|' 	[reduce using rule 163 (expression)]
    '<' 	[reduce using rule 163 (expression)]
    '>' 	[reduce using rule 163 (expression)]
    $default	reduce using rule 163 (expression)



state 247

    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression SUBSTR_NEQ expression .   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    OR  	[reduce using rule 164 (expression)]
    AND 	[reduce using rule 164 (expression)]
    SUBSTR_EQ	[reduce using rule 164 (expression)]
    SUBSTR_NEQ	[reduce using rule 164 (expression)]
    REGEX_EQ	[reduce using rule 164 (expression)]
    REGEX_NEQ	[reduce using rule 164 (expression)]
    POWER	[reduce using rule 164 (expression)]
    CMP_EQ	[reduce using rule 164 (expression)]
    CMP_GE	[reduce using rule 164 (expression)]
    CMP_LE	[reduce using rule 164 (expression)]
    CMP_NEQ	[reduce using rule 164 (expression)]
    SL  	[reduce using rule 164 (expression)]
    SR  	[reduce using rule 164 (expression)]
    SRR 	[reduce using rule 164 (expression)]
    '&' 	[reduce using rule 164 (expression)]
    '+' 	[reduce using rule 164 (expression)]
    '-' 	[reduce using rule 164 (expression)]
    '*' 	[reduce using rule 164 (expression)]
    '/' 	[reduce using rule 164 (expression)]
    '%' 	[reduce using rule 164 (expression)]
    '^' 	[reduce using rule 164 (expression)]
    '|' 	[reduce using rule 164 (expression)]
    '<' 	[reduce using rule 164 (expression)]
    '>' 	[reduce using rule 164 (expression)]
    $default	reduce using rule 164 (expression)



state 248

    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression REGEX_EQ expression .   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    OR  	[reduce using rule 166 (expression)]
    AND 	[reduce using rule 166 (expression)]
    SUBSTR_EQ	[reduce using rule 166 (expression)]
    SUBSTR_NEQ	[reduce using rule 166 (expression)]
    REGEX_EQ	[reduce using rule 166 (expression)]
    REGEX_NEQ	[reduce using rule 166 (expression)]
    POWER	[reduce using rule 166 (expression)]
    CMP_EQ	[reduce using rule 166 (expression)]
    CMP_GE	[reduce using rule 166 (expression)]
    CMP_LE	[reduce using rule 166 (expression)]
    CMP_NEQ	[reduce using rule 166 (expression)]
    SL  	[reduce using rule 166 (expression)]
    SR  	[reduce using rule 166 (expression)]
    SRR 	[reduce using rule 166 (expression)]
    '&' 	[reduce using rule 166 (expression)]
    '+' 	[reduce using rule 166 (expression)]
    '-' 	[reduce using rule 166 (expression)]
    '*' 	[reduce using rule 166 (expression)]
    '/' 	[reduce using rule 166 (expression)]
    '%' 	[reduce using rule 166 (expression)]
    '^' 	[reduce using rule 166 (expression)]
    '|' 	[reduce using rule 166 (expression)]
    '<' 	[reduce using rule 166 (expression)]
    '>' 	[reduce using rule 166 (expression)]
    $default	reduce using rule 166 (expression)



state 249

    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression REGEX_NEQ expression .   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    OR  	[reduce using rule 165 (expression)]
    AND 	[reduce using rule 165 (expression)]
    SUBSTR_EQ	[reduce using rule 165 (expression)]
    SUBSTR_NEQ	[reduce using rule 165 (expression)]
    REGEX_EQ	[reduce using rule 165 (expression)]
    REGEX_NEQ	[reduce using rule 165 (expression)]
    POWER	[reduce using rule 165 (expression)]
    CMP_EQ	[reduce using rule 165 (expression)]
    CMP_GE	[reduce using rule 165 (expression)]
    CMP_LE	[reduce using rule 165 (expression)]
    CMP_NEQ	[reduce using rule 165 (expression)]
    SL  	[reduce using rule 165 (expression)]
    SR  	[reduce using rule 165 (expression)]
    SRR 	[reduce using rule 165 (expression)]
    '&' 	[reduce using rule 165 (expression)]
    '+' 	[reduce using rule 165 (expression)]
    '-' 	[reduce using rule 165 (expression)]
    '*' 	[reduce using rule 165 (expression)]
    '/' 	[reduce using rule 165 (expression)]
    '%' 	[reduce using rule 165 (expression)]
    '^' 	[reduce using rule 165 (expression)]
    '|' 	[reduce using rule 165 (expression)]
    '<' 	[reduce using rule 165 (expression)]
    '>' 	[reduce using rule 165 (expression)]
    $default	reduce using rule 165 (expression)



state 250

    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression POWER expression .   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    OR  	[reduce using rule 154 (expression)]
    AND 	[reduce using rule 154 (expression)]
    SUBSTR_EQ	[reduce using rule 154 (expression)]
    SUBSTR_NEQ	[reduce using rule 154 (expression)]
    REGEX_EQ	[reduce using rule 154 (expression)]
    REGEX_NEQ	[reduce using rule 154 (expression)]
    POWER	[reduce using rule 154 (expression)]
    CMP_EQ	[reduce using rule 154 (expression)]
    CMP_GE	[reduce using rule 154 (expression)]
    CMP_LE	[reduce using rule 154 (expression)]
    CMP_NEQ	[reduce using rule 154 (expression)]
    SL  	[reduce using rule 154 (expression)]
    SR  	[reduce using rule 154 (expression)]
    SRR 	[reduce using rule 154 (expression)]
    '&' 	[reduce using rule 154 (expression)]
    '+' 	[reduce using rule 154 (expression)]
    '-' 	[reduce using rule 154 (expression)]
    '*' 	[reduce using rule 154 (expression)]
    '/' 	[reduce using rule 154 (expression)]
    '%' 	[reduce using rule 154 (expression)]
    '^' 	[reduce using rule 154 (expression)]
    '|' 	[reduce using rule 154 (expression)]
    '<' 	[reduce using rule 154 (expression)]
    '>' 	[reduce using rule 154 (expression)]
    $default	reduce using rule 154 (expression)



state 251

    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression CMP_EQ expression .   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    OR  	[reduce using rule 171 (expression)]
    AND 	[reduce using rule 171 (expression)]
    SUBSTR_EQ	[reduce using rule 171 (expression)]
    SUBSTR_NEQ	[reduce using rule 171 (expression)]
    REGEX_EQ	[reduce using rule 171 (expression)]
    REGEX_NEQ	[reduce using rule 171 (expression)]
    POWER	[reduce using rule 171 (expression)]
    CMP_EQ	[reduce using rule 171 (expression)]
    CMP_GE	[reduce using rule 171 (expression)]
    CMP_LE	[reduce using rule 171 (expression)]
    CMP_NEQ	[reduce using rule 171 (expression)]
    SL  	[reduce using rule 171 (expression)]
    SR  	[reduce using rule 171 (expression)]
    SRR 	[reduce using rule 171 (expression)]
    '&' 	[reduce using rule 171 (expression)]
    '+' 	[reduce using rule 171 (expression)]
    '-' 	[reduce using rule 171 (expression)]
    '*' 	[reduce using rule 171 (expression)]
    '/' 	[reduce using rule 171 (expression)]
    '%' 	[reduce using rule 171 (expression)]
    '^' 	[reduce using rule 171 (expression)]
    '|' 	[reduce using rule 171 (expression)]
    '<' 	[reduce using rule 171 (expression)]
    '>' 	[reduce using rule 171 (expression)]
    $default	reduce using rule 171 (expression)



state 252

    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression CMP_GE expression .   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    OR  	[reduce using rule 169 (expression)]
    AND 	[reduce using rule 169 (expression)]
    SUBSTR_EQ	[reduce using rule 169 (expression)]
    SUBSTR_NEQ	[reduce using rule 169 (expression)]
    REGEX_EQ	[reduce using rule 169 (expression)]
    REGEX_NEQ	[reduce using rule 169 (expression)]
    POWER	[reduce using rule 169 (expression)]
    CMP_EQ	[reduce using rule 169 (expression)]
    CMP_GE	[reduce using rule 169 (expression)]
    CMP_LE	[reduce using rule 169 (expression)]
    CMP_NEQ	[reduce using rule 169 (expression)]
    SL  	[reduce using rule 169 (expression)]
    SR  	[reduce using rule 169 (expression)]
    SRR 	[reduce using rule 169 (expression)]
    '&' 	[reduce using rule 169 (expression)]
    '+' 	[reduce using rule 169 (expression)]
    '-' 	[reduce using rule 169 (expression)]
    '*' 	[reduce using rule 169 (expression)]
    '/' 	[reduce using rule 169 (expression)]
    '%' 	[reduce using rule 169 (expression)]
    '^' 	[reduce using rule 169 (expression)]
    '|' 	[reduce using rule 169 (expression)]
    '<' 	[reduce using rule 169 (expression)]
    '>' 	[reduce using rule 169 (expression)]
    $default	reduce using rule 169 (expression)



state 253

    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression CMP_LE expression .   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    OR  	[reduce using rule 170 (expression)]
    AND 	[reduce using rule 170 (expression)]
    SUBSTR_EQ	[reduce using rule 170 (expression)]
    SUBSTR_NEQ	[reduce using rule 170 (expression)]
    REGEX_EQ	[reduce using rule 170 (expression)]
    REGEX_NEQ	[reduce using rule 170 (expression)]
    POWER	[reduce using rule 170 (expression)]
    CMP_EQ	[reduce using rule 170 (expression)]
    CMP_GE	[reduce using rule 170 (expression)]
    CMP_LE	[reduce using rule 170 (expression)]
    CMP_NEQ	[reduce using rule 170 (expression)]
    SL  	[reduce using rule 170 (expression)]
    SR  	[reduce using rule 170 (expression)]
    SRR 	[reduce using rule 170 (expression)]
    '&' 	[reduce using rule 170 (expression)]
    '+' 	[reduce using rule 170 (expression)]
    '-' 	[reduce using rule 170 (expression)]
    '*' 	[reduce using rule 170 (expression)]
    '/' 	[reduce using rule 170 (expression)]
    '%' 	[reduce using rule 170 (expression)]
    '^' 	[reduce using rule 170 (expression)]
    '|' 	[reduce using rule 170 (expression)]
    '<' 	[reduce using rule 170 (expression)]
    '>' 	[reduce using rule 170 (expression)]
    $default	reduce using rule 170 (expression)



state 254

    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)
    expression  ->  expression CMP_NEQ expression .   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    OR  	[reduce using rule 172 (expression)]
    AND 	[reduce using rule 172 (expression)]
    SUBSTR_EQ	[reduce using rule 172 (expression)]
    SUBSTR_NEQ	[reduce using rule 172 (expression)]
    REGEX_EQ	[reduce using rule 172 (expression)]
    REGEX_NEQ	[reduce using rule 172 (expression)]
    POWER	[reduce using rule 172 (expression)]
    CMP_EQ	[reduce using rule 172 (expression)]
    CMP_GE	[reduce using rule 172 (expression)]
    CMP_LE	[reduce using rule 172 (expression)]
    CMP_NEQ	[reduce using rule 172 (expression)]
    SL  	[reduce using rule 172 (expression)]
    SR  	[reduce using rule 172 (expression)]
    SRR 	[reduce using rule 172 (expression)]
    '&' 	[reduce using rule 172 (expression)]
    '+' 	[reduce using rule 172 (expression)]
    '-' 	[reduce using rule 172 (expression)]
    '*' 	[reduce using rule 172 (expression)]
    '/' 	[reduce using rule 172 (expression)]
    '%' 	[reduce using rule 172 (expression)]
    '^' 	[reduce using rule 172 (expression)]
    '|' 	[reduce using rule 172 (expression)]
    '<' 	[reduce using rule 172 (expression)]
    '>' 	[reduce using rule 172 (expression)]
    $default	reduce using rule 172 (expression)



state 255

    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression SL expression .   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    OR  	[reduce using rule 161 (expression)]
    AND 	[reduce using rule 161 (expression)]
    SUBSTR_EQ	[reduce using rule 161 (expression)]
    SUBSTR_NEQ	[reduce using rule 161 (expression)]
    REGEX_EQ	[reduce using rule 161 (expression)]
    REGEX_NEQ	[reduce using rule 161 (expression)]
    POWER	[reduce using rule 161 (expression)]
    CMP_EQ	[reduce using rule 161 (expression)]
    CMP_GE	[reduce using rule 161 (expression)]
    CMP_LE	[reduce using rule 161 (expression)]
    CMP_NEQ	[reduce using rule 161 (expression)]
    SL  	[reduce using rule 161 (expression)]
    SR  	[reduce using rule 161 (expression)]
    SRR 	[reduce using rule 161 (expression)]
    '&' 	[reduce using rule 161 (expression)]
    '+' 	[reduce using rule 161 (expression)]
    '-' 	[reduce using rule 161 (expression)]
    '*' 	[reduce using rule 161 (expression)]
    '/' 	[reduce using rule 161 (expression)]
    '%' 	[reduce using rule 161 (expression)]
    '^' 	[reduce using rule 161 (expression)]
    '|' 	[reduce using rule 161 (expression)]
    '<' 	[reduce using rule 161 (expression)]
    '>' 	[reduce using rule 161 (expression)]
    $default	reduce using rule 161 (expression)



state 256

    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression SR expression .   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    OR  	[reduce using rule 160 (expression)]
    AND 	[reduce using rule 160 (expression)]
    SUBSTR_EQ	[reduce using rule 160 (expression)]
    SUBSTR_NEQ	[reduce using rule 160 (expression)]
    REGEX_EQ	[reduce using rule 160 (expression)]
    REGEX_NEQ	[reduce using rule 160 (expression)]
    POWER	[reduce using rule 160 (expression)]
    CMP_EQ	[reduce using rule 160 (expression)]
    CMP_GE	[reduce using rule 160 (expression)]
    CMP_LE	[reduce using rule 160 (expression)]
    CMP_NEQ	[reduce using rule 160 (expression)]
    SL  	[reduce using rule 160 (expression)]
    SR  	[reduce using rule 160 (expression)]
    SRR 	[reduce using rule 160 (expression)]
    '&' 	[reduce using rule 160 (expression)]
    '+' 	[reduce using rule 160 (expression)]
    '-' 	[reduce using rule 160 (expression)]
    '*' 	[reduce using rule 160 (expression)]
    '/' 	[reduce using rule 160 (expression)]
    '%' 	[reduce using rule 160 (expression)]
    '^' 	[reduce using rule 160 (expression)]
    '|' 	[reduce using rule 160 (expression)]
    '<' 	[reduce using rule 160 (expression)]
    '>' 	[reduce using rule 160 (expression)]
    $default	reduce using rule 160 (expression)



state 257

    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression SRR expression .   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    OR  	[reduce using rule 162 (expression)]
    AND 	[reduce using rule 162 (expression)]
    SUBSTR_EQ	[reduce using rule 162 (expression)]
    SUBSTR_NEQ	[reduce using rule 162 (expression)]
    REGEX_EQ	[reduce using rule 162 (expression)]
    REGEX_NEQ	[reduce using rule 162 (expression)]
    POWER	[reduce using rule 162 (expression)]
    CMP_EQ	[reduce using rule 162 (expression)]
    CMP_GE	[reduce using rule 162 (expression)]
    CMP_LE	[reduce using rule 162 (expression)]
    CMP_NEQ	[reduce using rule 162 (expression)]
    SL  	[reduce using rule 162 (expression)]
    SR  	[reduce using rule 162 (expression)]
    SRR 	[reduce using rule 162 (expression)]
    '&' 	[reduce using rule 162 (expression)]
    '+' 	[reduce using rule 162 (expression)]
    '-' 	[reduce using rule 162 (expression)]
    '*' 	[reduce using rule 162 (expression)]
    '/' 	[reduce using rule 162 (expression)]
    '%' 	[reduce using rule 162 (expression)]
    '^' 	[reduce using rule 162 (expression)]
    '|' 	[reduce using rule 162 (expression)]
    '<' 	[reduce using rule 162 (expression)]
    '>' 	[reduce using rule 162 (expression)]
    $default	reduce using rule 162 (expression)



state 258

    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression '&' expression .   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    OR  	[reduce using rule 157 (expression)]
    AND 	[reduce using rule 157 (expression)]
    SUBSTR_EQ	[reduce using rule 157 (expression)]
    SUBSTR_NEQ	[reduce using rule 157 (expression)]
    REGEX_EQ	[reduce using rule 157 (expression)]
    REGEX_NEQ	[reduce using rule 157 (expression)]
    POWER	[reduce using rule 157 (expression)]
    CMP_EQ	[reduce using rule 157 (expression)]
    CMP_GE	[reduce using rule 157 (expression)]
    CMP_LE	[reduce using rule 157 (expression)]
    CMP_NEQ	[reduce using rule 157 (expression)]
    SL  	[reduce using rule 157 (expression)]
    SR  	[reduce using rule 157 (expression)]
    SRR 	[reduce using rule 157 (expression)]
    '&' 	[reduce using rule 157 (expression)]
    '+' 	[reduce using rule 157 (expression)]
    '-' 	[reduce using rule 157 (expression)]
    '*' 	[reduce using rule 157 (expression)]
    '/' 	[reduce using rule 157 (expression)]
    '%' 	[reduce using rule 157 (expression)]
    '^' 	[reduce using rule 157 (expression)]
    '|' 	[reduce using rule 157 (expression)]
    '<' 	[reduce using rule 157 (expression)]
    '>' 	[reduce using rule 157 (expression)]
    $default	reduce using rule 157 (expression)



state 259

    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression '+' expression .   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    OR  	[reduce using rule 150 (expression)]
    AND 	[reduce using rule 150 (expression)]
    SUBSTR_EQ	[reduce using rule 150 (expression)]
    SUBSTR_NEQ	[reduce using rule 150 (expression)]
    REGEX_EQ	[reduce using rule 150 (expression)]
    REGEX_NEQ	[reduce using rule 150 (expression)]
    POWER	[reduce using rule 150 (expression)]
    CMP_EQ	[reduce using rule 150 (expression)]
    CMP_GE	[reduce using rule 150 (expression)]
    CMP_LE	[reduce using rule 150 (expression)]
    CMP_NEQ	[reduce using rule 150 (expression)]
    SL  	[reduce using rule 150 (expression)]
    SR  	[reduce using rule 150 (expression)]
    SRR 	[reduce using rule 150 (expression)]
    '&' 	[reduce using rule 150 (expression)]
    '+' 	[reduce using rule 150 (expression)]
    '-' 	[reduce using rule 150 (expression)]
    '*' 	[reduce using rule 150 (expression)]
    '/' 	[reduce using rule 150 (expression)]
    '%' 	[reduce using rule 150 (expression)]
    '^' 	[reduce using rule 150 (expression)]
    '|' 	[reduce using rule 150 (expression)]
    '<' 	[reduce using rule 150 (expression)]
    '>' 	[reduce using rule 150 (expression)]
    $default	reduce using rule 150 (expression)



state 260

    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression '-' expression .   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    OR  	[reduce using rule 151 (expression)]
    AND 	[reduce using rule 151 (expression)]
    SUBSTR_EQ	[reduce using rule 151 (expression)]
    SUBSTR_NEQ	[reduce using rule 151 (expression)]
    REGEX_EQ	[reduce using rule 151 (expression)]
    REGEX_NEQ	[reduce using rule 151 (expression)]
    POWER	[reduce using rule 151 (expression)]
    CMP_EQ	[reduce using rule 151 (expression)]
    CMP_GE	[reduce using rule 151 (expression)]
    CMP_LE	[reduce using rule 151 (expression)]
    CMP_NEQ	[reduce using rule 151 (expression)]
    SL  	[reduce using rule 151 (expression)]
    SR  	[reduce using rule 151 (expression)]
    SRR 	[reduce using rule 151 (expression)]
    '&' 	[reduce using rule 151 (expression)]
    '+' 	[reduce using rule 151 (expression)]
    '-' 	[reduce using rule 151 (expression)]
    '*' 	[reduce using rule 151 (expression)]
    '/' 	[reduce using rule 151 (expression)]
    '%' 	[reduce using rule 151 (expression)]
    '^' 	[reduce using rule 151 (expression)]
    '|' 	[reduce using rule 151 (expression)]
    '<' 	[reduce using rule 151 (expression)]
    '>' 	[reduce using rule 151 (expression)]
    $default	reduce using rule 151 (expression)



state 261

    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression '*' expression .   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    OR  	[reduce using rule 153 (expression)]
    AND 	[reduce using rule 153 (expression)]
    SUBSTR_EQ	[reduce using rule 153 (expression)]
    SUBSTR_NEQ	[reduce using rule 153 (expression)]
    REGEX_EQ	[reduce using rule 153 (expression)]
    REGEX_NEQ	[reduce using rule 153 (expression)]
    POWER	[reduce using rule 153 (expression)]
    CMP_EQ	[reduce using rule 153 (expression)]
    CMP_GE	[reduce using rule 153 (expression)]
    CMP_LE	[reduce using rule 153 (expression)]
    CMP_NEQ	[reduce using rule 153 (expression)]
    SL  	[reduce using rule 153 (expression)]
    SR  	[reduce using rule 153 (expression)]
    SRR 	[reduce using rule 153 (expression)]
    '&' 	[reduce using rule 153 (expression)]
    '+' 	[reduce using rule 153 (expression)]
    '-' 	[reduce using rule 153 (expression)]
    '*' 	[reduce using rule 153 (expression)]
    '/' 	[reduce using rule 153 (expression)]
    '%' 	[reduce using rule 153 (expression)]
    '^' 	[reduce using rule 153 (expression)]
    '|' 	[reduce using rule 153 (expression)]
    '<' 	[reduce using rule 153 (expression)]
    '>' 	[reduce using rule 153 (expression)]
    $default	reduce using rule 153 (expression)



state 262

    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression '/' expression .   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    OR  	[reduce using rule 155 (expression)]
    AND 	[reduce using rule 155 (expression)]
    SUBSTR_EQ	[reduce using rule 155 (expression)]
    SUBSTR_NEQ	[reduce using rule 155 (expression)]
    REGEX_EQ	[reduce using rule 155 (expression)]
    REGEX_NEQ	[reduce using rule 155 (expression)]
    POWER	[reduce using rule 155 (expression)]
    CMP_EQ	[reduce using rule 155 (expression)]
    CMP_GE	[reduce using rule 155 (expression)]
    CMP_LE	[reduce using rule 155 (expression)]
    CMP_NEQ	[reduce using rule 155 (expression)]
    SL  	[reduce using rule 155 (expression)]
    SR  	[reduce using rule 155 (expression)]
    SRR 	[reduce using rule 155 (expression)]
    '&' 	[reduce using rule 155 (expression)]
    '+' 	[reduce using rule 155 (expression)]
    '-' 	[reduce using rule 155 (expression)]
    '*' 	[reduce using rule 155 (expression)]
    '/' 	[reduce using rule 155 (expression)]
    '%' 	[reduce using rule 155 (expression)]
    '^' 	[reduce using rule 155 (expression)]
    '|' 	[reduce using rule 155 (expression)]
    '<' 	[reduce using rule 155 (expression)]
    '>' 	[reduce using rule 155 (expression)]
    $default	reduce using rule 155 (expression)



state 263

    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression '%' expression .   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    OR  	[reduce using rule 156 (expression)]
    AND 	[reduce using rule 156 (expression)]
    SUBSTR_EQ	[reduce using rule 156 (expression)]
    SUBSTR_NEQ	[reduce using rule 156 (expression)]
    REGEX_EQ	[reduce using rule 156 (expression)]
    REGEX_NEQ	[reduce using rule 156 (expression)]
    POWER	[reduce using rule 156 (expression)]
    CMP_EQ	[reduce using rule 156 (expression)]
    CMP_GE	[reduce using rule 156 (expression)]
    CMP_LE	[reduce using rule 156 (expression)]
    CMP_NEQ	[reduce using rule 156 (expression)]
    SL  	[reduce using rule 156 (expression)]
    SR  	[reduce using rule 156 (expression)]
    SRR 	[reduce using rule 156 (expression)]
    '&' 	[reduce using rule 156 (expression)]
    '+' 	[reduce using rule 156 (expression)]
    '-' 	[reduce using rule 156 (expression)]
    '*' 	[reduce using rule 156 (expression)]
    '/' 	[reduce using rule 156 (expression)]
    '%' 	[reduce using rule 156 (expression)]
    '^' 	[reduce using rule 156 (expression)]
    '|' 	[reduce using rule 156 (expression)]
    '<' 	[reduce using rule 156 (expression)]
    '>' 	[reduce using rule 156 (expression)]
    $default	reduce using rule 156 (expression)



state 264

    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression '^' expression .   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    OR  	[reduce using rule 158 (expression)]
    AND 	[reduce using rule 158 (expression)]
    SUBSTR_EQ	[reduce using rule 158 (expression)]
    SUBSTR_NEQ	[reduce using rule 158 (expression)]
    REGEX_EQ	[reduce using rule 158 (expression)]
    REGEX_NEQ	[reduce using rule 158 (expression)]
    POWER	[reduce using rule 158 (expression)]
    CMP_EQ	[reduce using rule 158 (expression)]
    CMP_GE	[reduce using rule 158 (expression)]
    CMP_LE	[reduce using rule 158 (expression)]
    CMP_NEQ	[reduce using rule 158 (expression)]
    SL  	[reduce using rule 158 (expression)]
    SR  	[reduce using rule 158 (expression)]
    SRR 	[reduce using rule 158 (expression)]
    '&' 	[reduce using rule 158 (expression)]
    '+' 	[reduce using rule 158 (expression)]
    '-' 	[reduce using rule 158 (expression)]
    '*' 	[reduce using rule 158 (expression)]
    '/' 	[reduce using rule 158 (expression)]
    '%' 	[reduce using rule 158 (expression)]
    '^' 	[reduce using rule 158 (expression)]
    '|' 	[reduce using rule 158 (expression)]
    '<' 	[reduce using rule 158 (expression)]
    '>' 	[reduce using rule 158 (expression)]
    $default	reduce using rule 158 (expression)



state 265

    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression '|' expression .   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    OR  	[reduce using rule 159 (expression)]
    AND 	[reduce using rule 159 (expression)]
    SUBSTR_EQ	[reduce using rule 159 (expression)]
    SUBSTR_NEQ	[reduce using rule 159 (expression)]
    REGEX_EQ	[reduce using rule 159 (expression)]
    REGEX_NEQ	[reduce using rule 159 (expression)]
    POWER	[reduce using rule 159 (expression)]
    CMP_EQ	[reduce using rule 159 (expression)]
    CMP_GE	[reduce using rule 159 (expression)]
    CMP_LE	[reduce using rule 159 (expression)]
    CMP_NEQ	[reduce using rule 159 (expression)]
    SL  	[reduce using rule 159 (expression)]
    SR  	[reduce using rule 159 (expression)]
    SRR 	[reduce using rule 159 (expression)]
    '&' 	[reduce using rule 159 (expression)]
    '+' 	[reduce using rule 159 (expression)]
    '-' 	[reduce using rule 159 (expression)]
    '*' 	[reduce using rule 159 (expression)]
    '/' 	[reduce using rule 159 (expression)]
    '%' 	[reduce using rule 159 (expression)]
    '^' 	[reduce using rule 159 (expression)]
    '|' 	[reduce using rule 159 (expression)]
    '<' 	[reduce using rule 159 (expression)]
    '>' 	[reduce using rule 159 (expression)]
    $default	reduce using rule 159 (expression)



state 266

    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression '<' expression .   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    OR  	[reduce using rule 167 (expression)]
    AND 	[reduce using rule 167 (expression)]
    SUBSTR_EQ	[reduce using rule 167 (expression)]
    SUBSTR_NEQ	[reduce using rule 167 (expression)]
    REGEX_EQ	[reduce using rule 167 (expression)]
    REGEX_NEQ	[reduce using rule 167 (expression)]
    POWER	[reduce using rule 167 (expression)]
    CMP_EQ	[reduce using rule 167 (expression)]
    CMP_GE	[reduce using rule 167 (expression)]
    CMP_LE	[reduce using rule 167 (expression)]
    CMP_NEQ	[reduce using rule 167 (expression)]
    SL  	[reduce using rule 167 (expression)]
    SR  	[reduce using rule 167 (expression)]
    SRR 	[reduce using rule 167 (expression)]
    '&' 	[reduce using rule 167 (expression)]
    '+' 	[reduce using rule 167 (expression)]
    '-' 	[reduce using rule 167 (expression)]
    '*' 	[reduce using rule 167 (expression)]
    '/' 	[reduce using rule 167 (expression)]
    '%' 	[reduce using rule 167 (expression)]
    '^' 	[reduce using rule 167 (expression)]
    '|' 	[reduce using rule 167 (expression)]
    '<' 	[reduce using rule 167 (expression)]
    '>' 	[reduce using rule 167 (expression)]
    $default	reduce using rule 167 (expression)



state 267

    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression '>' expression .   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    OR  	[reduce using rule 168 (expression)]
    AND 	[reduce using rule 168 (expression)]
    SUBSTR_EQ	[reduce using rule 168 (expression)]
    SUBSTR_NEQ	[reduce using rule 168 (expression)]
    REGEX_EQ	[reduce using rule 168 (expression)]
    REGEX_NEQ	[reduce using rule 168 (expression)]
    POWER	[reduce using rule 168 (expression)]
    CMP_EQ	[reduce using rule 168 (expression)]
    CMP_GE	[reduce using rule 168 (expression)]
    CMP_LE	[reduce using rule 168 (expression)]
    CMP_NEQ	[reduce using rule 168 (expression)]
    SL  	[reduce using rule 168 (expression)]
    SR  	[reduce using rule 168 (expression)]
    SRR 	[reduce using rule 168 (expression)]
    '&' 	[reduce using rule 168 (expression)]
    '+' 	[reduce using rule 168 (expression)]
    '-' 	[reduce using rule 168 (expression)]
    '*' 	[reduce using rule 168 (expression)]
    '/' 	[reduce using rule 168 (expression)]
    '%' 	[reduce using rule 168 (expression)]
    '^' 	[reduce using rule 168 (expression)]
    '|' 	[reduce using rule 168 (expression)]
    '<' 	[reduce using rule 168 (expression)]
    '>' 	[reduce using rule 168 (expression)]
    $default	reduce using rule 168 (expression)



state 268

    for_loop  ->  FOR '(' if_expr ';' . if_expr ';' if_expr ')' block   (rule 97)
    for_loop  ->  FOR '(' if_expr ';' . if_expr ';' if_expr ')' command   (rule 98)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    DEC 	shift, and go to state 19
    INC 	shift, and go to state 20
    '(' 	shift, and go to state 126
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    assign	go to state 127
    inc_dec_exp	go to state 128
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 129
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    if_expr	go to state 305
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 131



state 269

    foreach_loop  ->  FOREACH '(' identifier IN_ITER . if_expr ')' block   (rule 101)
    foreach_loop  ->  FOREACH '(' identifier IN_ITER . if_expr ')' command   (rule 102)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    DEC 	shift, and go to state 19
    INC 	shift, and go to state 20
    '(' 	shift, and go to state 126
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    assign	go to state 127
    inc_dec_exp	go to state 128
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 129
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    if_expr	go to state 306
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 131



state 270

    foreach_loop  ->  FOREACH identifier '(' if_expr . ')' block   (rule 99)
    foreach_loop  ->  FOREACH identifier '(' if_expr . ')' command   (rule 100)

    ')' 	shift, and go to state 307



state 271

    while_loop  ->  WHILE '(' if_expr ')' . block   (rule 105)
    while_loop  ->  WHILE '(' if_expr ')' . command   (rule 106)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    DEC 	shift, and go to state 19
    INC 	shift, and go to state 20
    '(' 	shift, and go to state 21
    ';' 	shift, and go to state 22
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 24

    command	go to state 308
    simple	go to state 30
    break	go to state 31
    continue	go to state 32
    import	go to state 33
    include	go to state 34
    return	go to state 35
    empty	go to state 36
    global	go to state 37
    local	go to state 38
    rep 	go to state 39
    call_function	go to state 40
    assign	go to state 41
    inc_dec_exp	go to state 42
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 45
    compound	go to state 46
    for_loop	go to state 47
    foreach_loop	go to state 48
    repeat_loop	go to state 49
    while_loop	go to state 50
    if_cond	go to state 51
    block	go to state 309



state 272

    repeat_loop  ->  REPEAT command UNTIL if_expr . ';'   (rule 104)

    ';' 	shift, and go to state 310



state 273

    repeat_loop  ->  REPEAT block UNTIL if_expr . ';'   (rule 103)

    ';' 	shift, and go to state 311



state 274

    rep  ->  call_function REP identifier ';' .   (rule 43)

    $default	reduce using rule 43 (rep)



state 275

    rep  ->  call_function REP integer ';' .   (rule 42)

    $default	reduce using rule 42 (rep)



state 276

    parameter  ->  '&' identifier .   (rule 15)

    $default	reduce using rule 15 (parameter)



state 277

    call_function  ->  identifier '(' parameters ')' .   (rule 44)

    $default	reduce using rule 44 (call_function)



state 278

    parameters  ->  parameter ',' . parameters   (rule 13)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 126
    '&' 	shift, and go to state 203
    '@' 	shift, and go to state 136
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    '&' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    parameters	go to state 312
    parameter	go to state 205
    call_function	go to state 74
    assign	go to state 206
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 207
    integer	go to state 138
    string	go to state 139
    ip  	go to state 78
    null	go to state 79
    ref 	go to state 140
    body	go to state 96
    body_sq	go to state 81
    argument	go to state 208
    expression	go to state 143



state 279

    call_function  ->  identifier body_enum_sq . '(' ')'   (rule 46)
    call_function  ->  identifier body_enum_sq . '(' parameters ')'   (rule 47)
    call_function  ->  identifier body_enum_sq . body_enum_p '(' ')'   (rule 48)
    call_function  ->  identifier body_enum_sq . body_enum_p '(' parameters ')'   (rule 49)
    assign  ->  identifier body_enum_sq . '=' value   (rule 56)
    assign  ->  identifier body_enum_sq . '=' list_int   (rule 58)
    assign  ->  identifier body_enum_sq . '=' assign   (rule 59)
    assign  ->  identifier body_enum_sq . '=' ref   (rule 60)
    body_enum_sq  ->  body_enum_sq . body_sq   (rule 123)
    expression  ->  identifier body_enum_sq .   (rule 183)

    '(' 	shift, and go to state 218
    '=' 	shift, and go to state 219
    '.' 	shift, and go to state 116
    '[' 	shift, and go to state 70

    '(' 	[reduce using rule 183 (expression)]
    '=' 	[reduce using rule 183 (expression)]
    $default	reduce using rule 183 (expression)

    body_sq	go to state 220
    body_p	go to state 119
    body_enum_p	go to state 221



state 280

    list_int  ->  integer ',' . integer   (rule 134)

    INT 	shift, and go to state 62
    FALSE	shift, and go to state 64
    TRUE	shift, and go to state 66

    integer	go to state 313



state 281

    list_int  ->  list_int ',' . integer   (rule 133)

    INT 	shift, and go to state 62
    FALSE	shift, and go to state 64
    TRUE	shift, and go to state 66

    integer	go to state 314



state 282

    call_function  ->  identifier body_enum_sq '(' ')' .   (rule 46)

    $default	reduce using rule 46 (call_function)



state 283

    call_function  ->  identifier body_enum_sq '(' parameters . ')'   (rule 47)

    ')' 	shift, and go to state 315



state 284

    assign  ->  identifier body_enum_sq '=' assign .   (rule 59)

    $default	reduce using rule 59 (assign)



state 285

    assign  ->  identifier body_enum_sq '=' value .   (rule 56)

    $default	reduce using rule 56 (assign)



state 286

    assign  ->  identifier body_enum_sq '=' ref .   (rule 60)

    $default	reduce using rule 60 (assign)



state 287

    assign  ->  identifier body_enum_sq '=' list_int .   (rule 58)
    list_int  ->  list_int . ',' integer   (rule 133)

    ',' 	shift, and go to state 281

    ',' 	[reduce using rule 58 (assign)]
    $default	reduce using rule 58 (assign)



state 288

    call_function  ->  identifier body_enum_sq body_enum_p '(' . ')'   (rule 48)
    call_function  ->  identifier body_enum_sq body_enum_p '(' . parameters ')'   (rule 49)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    '(' 	shift, and go to state 126
    ')' 	shift, and go to state 316
    '&' 	shift, and go to state 203
    '@' 	shift, and go to state 136
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    ')' 	[reduce using rule 145 (expression)]
    '&' 	[reduce using rule 145 (expression)]
    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    parameters	go to state 317
    parameter	go to state 205
    call_function	go to state 74
    assign	go to state 206
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 207
    integer	go to state 138
    string	go to state 139
    ip  	go to state 78
    null	go to state 79
    ref 	go to state 140
    body	go to state 96
    body_sq	go to state 81
    argument	go to state 208
    expression	go to state 143



state 289

    call_function  ->  identifier body_enum_p '(' ')' .   (rule 50)

    $default	reduce using rule 50 (call_function)



state 290

    call_function  ->  identifier body_enum_p '(' parameters . ')'   (rule 51)

    ')' 	shift, and go to state 318



state 291

    function  ->  FUNCTION identifier '(' ')' block .   (rule 12)

    $default	reduce using rule 12 (function)



state 292

    function  ->  FUNCTION identifier '(' parameters ')' . block   (rule 11)

    '{' 	shift, and go to state 24

    block	go to state 319



state 293

    compound  ->  command . ELSE   (rule 96)
    if_cond  ->  IF '(' if_expr ')' command .   (rule 111)
    if_cond  ->  IF '(' if_expr ')' command . ELSE command   (rule 112)
    if_cond  ->  IF '(' if_expr ')' command . ELSE block   (rule 115)

    ELSE	shift, and go to state 320

    ELSE	[reduce using rule 111 (if_cond)]
    $default	reduce using rule 111 (if_cond)



state 294

    if_cond  ->  IF '(' if_expr ')' block .   (rule 110)
    if_cond  ->  IF '(' if_expr ')' block . ELSE command   (rule 113)
    if_cond  ->  IF '(' if_expr ')' block . ELSE block   (rule 114)

    ELSE	shift, and go to state 321

    ELSE	[reduce using rule 110 (if_cond)]
    $default	reduce using rule 110 (if_cond)



state 295

    include  ->  INCLUDE '(' string ')' ';' .   (rule 35)

    $default	reduce using rule 35 (include)



state 296

    import  ->  IMPORT '(' string ')' ';' .   (rule 34)

    $default	reduce using rule 34 (import)



state 297

    argument  ->  identifier ':' ref .   (rule 142)

    $default	reduce using rule 142 (argument)



state 298

    argument  ->  identifier ':' expression .   (rule 141)
    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    $default	reduce using rule 141 (argument)



state 299

    argument  ->  integer ':' ref .   (rule 140)

    $default	reduce using rule 140 (argument)



state 300

    argument  ->  integer ':' expression .   (rule 138)
    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    $default	reduce using rule 138 (argument)



state 301

    argument  ->  string ':' ref .   (rule 139)

    $default	reduce using rule 139 (argument)



state 302

    argument  ->  string ':' expression .   (rule 137)
    expression  ->  expression . AND expression   (rule 147)
    expression  ->  expression . OR expression   (rule 149)
    expression  ->  expression . '+' expression   (rule 150)
    expression  ->  expression . '-' expression   (rule 151)
    expression  ->  expression . '*' expression   (rule 153)
    expression  ->  expression . POWER expression   (rule 154)
    expression  ->  expression . '/' expression   (rule 155)
    expression  ->  expression . '%' expression   (rule 156)
    expression  ->  expression . '&' expression   (rule 157)
    expression  ->  expression . '^' expression   (rule 158)
    expression  ->  expression . '|' expression   (rule 159)
    expression  ->  expression . SR expression   (rule 160)
    expression  ->  expression . SL expression   (rule 161)
    expression  ->  expression . SRR expression   (rule 162)
    expression  ->  expression . SUBSTR_EQ expression   (rule 163)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 164)
    expression  ->  expression . REGEX_NEQ expression   (rule 165)
    expression  ->  expression . REGEX_EQ expression   (rule 166)
    expression  ->  expression . '<' expression   (rule 167)
    expression  ->  expression . '>' expression   (rule 168)
    expression  ->  expression . CMP_GE expression   (rule 169)
    expression  ->  expression . CMP_LE expression   (rule 170)
    expression  ->  expression . CMP_EQ expression   (rule 171)
    expression  ->  expression . CMP_NEQ expression   (rule 172)

    OR  	shift, and go to state 156
    AND 	shift, and go to state 157
    SUBSTR_EQ	shift, and go to state 158
    SUBSTR_NEQ	shift, and go to state 159
    REGEX_EQ	shift, and go to state 160
    REGEX_NEQ	shift, and go to state 161
    POWER	shift, and go to state 162
    CMP_EQ	shift, and go to state 163
    CMP_GE	shift, and go to state 164
    CMP_LE	shift, and go to state 165
    CMP_NEQ	shift, and go to state 166
    SL  	shift, and go to state 167
    SR  	shift, and go to state 168
    SRR 	shift, and go to state 169
    '&' 	shift, and go to state 170
    '+' 	shift, and go to state 172
    '-' 	shift, and go to state 173
    '*' 	shift, and go to state 174
    '/' 	shift, and go to state 175
    '%' 	shift, and go to state 176
    '^' 	shift, and go to state 177
    '|' 	shift, and go to state 178
    '<' 	shift, and go to state 179
    '>' 	shift, and go to state 180

    $default	reduce using rule 137 (argument)



state 303

    argument_list  ->  argument_list ',' argument .   (rule 135)

    $default	reduce using rule 135 (argument_list)



state 304

    ip  ->  integer '.' integer '.' . integer '.' integer   (rule 88)

    INT 	shift, and go to state 62
    FALSE	shift, and go to state 64
    TRUE	shift, and go to state 66

    integer	go to state 322



state 305

    for_loop  ->  FOR '(' if_expr ';' if_expr . ';' if_expr ')' block   (rule 97)
    for_loop  ->  FOR '(' if_expr ';' if_expr . ';' if_expr ')' command   (rule 98)

    ';' 	shift, and go to state 323



state 306

    foreach_loop  ->  FOREACH '(' identifier IN_ITER if_expr . ')' block   (rule 101)
    foreach_loop  ->  FOREACH '(' identifier IN_ITER if_expr . ')' command   (rule 102)

    ')' 	shift, and go to state 324



state 307

    foreach_loop  ->  FOREACH identifier '(' if_expr ')' . block   (rule 99)
    foreach_loop  ->  FOREACH identifier '(' if_expr ')' . command   (rule 100)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    DEC 	shift, and go to state 19
    INC 	shift, and go to state 20
    '(' 	shift, and go to state 21
    ';' 	shift, and go to state 22
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 24

    command	go to state 325
    simple	go to state 30
    break	go to state 31
    continue	go to state 32
    import	go to state 33
    include	go to state 34
    return	go to state 35
    empty	go to state 36
    global	go to state 37
    local	go to state 38
    rep 	go to state 39
    call_function	go to state 40
    assign	go to state 41
    inc_dec_exp	go to state 42
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 45
    compound	go to state 46
    for_loop	go to state 47
    foreach_loop	go to state 48
    repeat_loop	go to state 49
    while_loop	go to state 50
    if_cond	go to state 51
    block	go to state 326



state 308

    compound  ->  command . ELSE   (rule 96)
    while_loop  ->  WHILE '(' if_expr ')' command .   (rule 106)

    ELSE	shift, and go to state 101

    ELSE	[reduce using rule 106 (while_loop)]
    $default	reduce using rule 106 (while_loop)



state 309

    while_loop  ->  WHILE '(' if_expr ')' block .   (rule 105)

    $default	reduce using rule 105 (while_loop)



state 310

    repeat_loop  ->  REPEAT command UNTIL if_expr ';' .   (rule 104)

    $default	reduce using rule 104 (repeat_loop)



state 311

    repeat_loop  ->  REPEAT block UNTIL if_expr ';' .   (rule 103)

    $default	reduce using rule 103 (repeat_loop)



state 312

    parameters  ->  parameter ',' parameters .   (rule 13)

    $default	reduce using rule 13 (parameters)



state 313

    list_int  ->  integer ',' integer .   (rule 134)

    $default	reduce using rule 134 (list_int)



state 314

    list_int  ->  list_int ',' integer .   (rule 133)

    $default	reduce using rule 133 (list_int)



state 315

    call_function  ->  identifier body_enum_sq '(' parameters ')' .   (rule 47)

    $default	reduce using rule 47 (call_function)



state 316

    call_function  ->  identifier body_enum_sq body_enum_p '(' ')' .   (rule 48)

    $default	reduce using rule 48 (call_function)



state 317

    call_function  ->  identifier body_enum_sq body_enum_p '(' parameters . ')'   (rule 49)

    ')' 	shift, and go to state 327



state 318

    call_function  ->  identifier body_enum_p '(' parameters ')' .   (rule 51)

    $default	reduce using rule 51 (call_function)



state 319

    function  ->  FUNCTION identifier '(' parameters ')' block .   (rule 11)

    $default	reduce using rule 11 (function)



state 320

    compound  ->  command ELSE .   (rule 96)
    if_cond  ->  IF '(' if_expr ')' command ELSE . command   (rule 112)
    if_cond  ->  IF '(' if_expr ')' command ELSE . block   (rule 115)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    DEC 	shift, and go to state 19
    INC 	shift, and go to state 20
    '(' 	shift, and go to state 21
    ';' 	shift, and go to state 22
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 24

    LOCAL	[reduce using rule 96 (compound)]
    GLOBAL	[reduce using rule 96 (compound)]
    IF  	[reduce using rule 96 (compound)]
    INCLUDE	[reduce using rule 96 (compound)]
    IMPORT	[reduce using rule 96 (compound)]
    RETURN	[reduce using rule 96 (compound)]
    BREAK	[reduce using rule 96 (compound)]
    CONTINUE	[reduce using rule 96 (compound)]
    FOR 	[reduce using rule 96 (compound)]
    FOREACH	[reduce using rule 96 (compound)]
    IN_ITER	[reduce using rule 96 (compound)]
    WHILE	[reduce using rule 96 (compound)]
    REPEAT	[reduce using rule 96 (compound)]
    REP 	[reduce using rule 96 (compound)]
    IDENT	[reduce using rule 96 (compound)]
    DEC 	[reduce using rule 96 (compound)]
    INC 	[reduce using rule 96 (compound)]
    '(' 	[reduce using rule 96 (compound)]
    ';' 	[reduce using rule 96 (compound)]
    '=' 	[reduce using rule 96 (compound)]
    '{' 	[reduce using rule 96 (compound)]
    $default	reduce using rule 96 (compound)

    command	go to state 328
    simple	go to state 30
    break	go to state 31
    continue	go to state 32
    import	go to state 33
    include	go to state 34
    return	go to state 35
    empty	go to state 36
    global	go to state 37
    local	go to state 38
    rep 	go to state 39
    call_function	go to state 40
    assign	go to state 41
    inc_dec_exp	go to state 42
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 45
    compound	go to state 46
    for_loop	go to state 47
    foreach_loop	go to state 48
    repeat_loop	go to state 49
    while_loop	go to state 50
    if_cond	go to state 51
    block	go to state 329



state 321

    if_cond  ->  IF '(' if_expr ')' block ELSE . command   (rule 113)
    if_cond  ->  IF '(' if_expr ')' block ELSE . block   (rule 114)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    DEC 	shift, and go to state 19
    INC 	shift, and go to state 20
    '(' 	shift, and go to state 21
    ';' 	shift, and go to state 22
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 24

    command	go to state 330
    simple	go to state 30
    break	go to state 31
    continue	go to state 32
    import	go to state 33
    include	go to state 34
    return	go to state 35
    empty	go to state 36
    global	go to state 37
    local	go to state 38
    rep 	go to state 39
    call_function	go to state 40
    assign	go to state 41
    inc_dec_exp	go to state 42
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 45
    compound	go to state 46
    for_loop	go to state 47
    foreach_loop	go to state 48
    repeat_loop	go to state 49
    while_loop	go to state 50
    if_cond	go to state 51
    block	go to state 331



state 322

    ip  ->  integer '.' integer '.' integer . '.' integer   (rule 88)

    '.' 	shift, and go to state 332



state 323

    for_loop  ->  FOR '(' if_expr ';' if_expr ';' . if_expr ')' block   (rule 97)
    for_loop  ->  FOR '(' if_expr ';' if_expr ';' . if_expr ')' command   (rule 98)

    IN_ITER	shift, and go to state 14
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    INT 	shift, and go to state 62
    STRING	shift, and go to state 63
    FALSE	shift, and go to state 64
    _NULL_	shift, and go to state 65
    TRUE	shift, and go to state 66
    DEC 	shift, and go to state 19
    INC 	shift, and go to state 20
    '(' 	shift, and go to state 126
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 69
    '[' 	shift, and go to state 70
    '!' 	shift, and go to state 71
    '-' 	shift, and go to state 72
    '~' 	shift, and go to state 73

    '-' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)

    call_function	go to state 74
    assign	go to state 127
    inc_dec_exp	go to state 128
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 129
    integer	go to state 76
    string	go to state 77
    ip  	go to state 78
    null	go to state 79
    if_expr	go to state 333
    body	go to state 96
    body_sq	go to state 81
    expression	go to state 131



state 324

    foreach_loop  ->  FOREACH '(' identifier IN_ITER if_expr ')' . block   (rule 101)
    foreach_loop  ->  FOREACH '(' identifier IN_ITER if_expr ')' . command   (rule 102)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    DEC 	shift, and go to state 19
    INC 	shift, and go to state 20
    '(' 	shift, and go to state 21
    ';' 	shift, and go to state 22
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 24

    command	go to state 334
    simple	go to state 30
    break	go to state 31
    continue	go to state 32
    import	go to state 33
    include	go to state 34
    return	go to state 35
    empty	go to state 36
    global	go to state 37
    local	go to state 38
    rep 	go to state 39
    call_function	go to state 40
    assign	go to state 41
    inc_dec_exp	go to state 42
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 45
    compound	go to state 46
    for_loop	go to state 47
    foreach_loop	go to state 48
    repeat_loop	go to state 49
    while_loop	go to state 50
    if_cond	go to state 51
    block	go to state 335



state 325

    compound  ->  command . ELSE   (rule 96)
    foreach_loop  ->  FOREACH identifier '(' if_expr ')' command .   (rule 100)

    ELSE	shift, and go to state 101

    ELSE	[reduce using rule 100 (foreach_loop)]
    $default	reduce using rule 100 (foreach_loop)



state 326

    foreach_loop  ->  FOREACH identifier '(' if_expr ')' block .   (rule 99)

    $default	reduce using rule 99 (foreach_loop)



state 327

    call_function  ->  identifier body_enum_sq body_enum_p '(' parameters ')' .   (rule 49)

    $default	reduce using rule 49 (call_function)



state 328

    compound  ->  command . ELSE   (rule 96)
    if_cond  ->  IF '(' if_expr ')' command ELSE command .   (rule 112)

    ELSE	shift, and go to state 101

    ELSE	[reduce using rule 112 (if_cond)]
    $default	reduce using rule 112 (if_cond)



state 329

    if_cond  ->  IF '(' if_expr ')' command ELSE block .   (rule 115)

    $default	reduce using rule 115 (if_cond)



state 330

    compound  ->  command . ELSE   (rule 96)
    if_cond  ->  IF '(' if_expr ')' block ELSE command .   (rule 113)

    ELSE	shift, and go to state 101

    ELSE	[reduce using rule 113 (if_cond)]
    $default	reduce using rule 113 (if_cond)



state 331

    if_cond  ->  IF '(' if_expr ')' block ELSE block .   (rule 114)

    $default	reduce using rule 114 (if_cond)



state 332

    ip  ->  integer '.' integer '.' integer '.' . integer   (rule 88)

    INT 	shift, and go to state 62
    FALSE	shift, and go to state 64
    TRUE	shift, and go to state 66

    integer	go to state 336



state 333

    for_loop  ->  FOR '(' if_expr ';' if_expr ';' if_expr . ')' block   (rule 97)
    for_loop  ->  FOR '(' if_expr ';' if_expr ';' if_expr . ')' command   (rule 98)

    ')' 	shift, and go to state 337



state 334

    compound  ->  command . ELSE   (rule 96)
    foreach_loop  ->  FOREACH '(' identifier IN_ITER if_expr ')' command .   (rule 102)

    ELSE	shift, and go to state 101

    ELSE	[reduce using rule 102 (foreach_loop)]
    $default	reduce using rule 102 (foreach_loop)



state 335

    foreach_loop  ->  FOREACH '(' identifier IN_ITER if_expr ')' block .   (rule 101)

    $default	reduce using rule 101 (foreach_loop)



state 336

    ip  ->  integer '.' integer '.' integer '.' integer .   (rule 88)

    $default	reduce using rule 88 (ip)



state 337

    for_loop  ->  FOR '(' if_expr ';' if_expr ';' if_expr ')' . block   (rule 97)
    for_loop  ->  FOR '(' if_expr ';' if_expr ';' if_expr ')' . command   (rule 98)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    REP 	shift, and go to state 17
    IDENT	shift, and go to state 18
    DEC 	shift, and go to state 19
    INC 	shift, and go to state 20
    '(' 	shift, and go to state 21
    ';' 	shift, and go to state 22
    '=' 	shift, and go to state 23
    '{' 	shift, and go to state 24

    command	go to state 338
    simple	go to state 30
    break	go to state 31
    continue	go to state 32
    import	go to state 33
    include	go to state 34
    return	go to state 35
    empty	go to state 36
    global	go to state 37
    local	go to state 38
    rep 	go to state 39
    call_function	go to state 40
    assign	go to state 41
    inc_dec_exp	go to state 42
    assign_math_op	go to state 43
    assign_shift_op	go to state 44
    identifier	go to state 45
    compound	go to state 46
    for_loop	go to state 47
    foreach_loop	go to state 48
    repeat_loop	go to state 49
    while_loop	go to state 50
    if_cond	go to state 51
    block	go to state 339



state 338

    compound  ->  command . ELSE   (rule 96)
    for_loop  ->  FOR '(' if_expr ';' if_expr ';' if_expr ')' command .   (rule 98)

    ELSE	shift, and go to state 101

    ELSE	[reduce using rule 98 (for_loop)]
    $default	reduce using rule 98 (for_loop)



state 339

    for_loop  ->  FOR '(' if_expr ';' if_expr ';' if_expr ')' block .   (rule 97)

    $default	reduce using rule 97 (for_loop)



state 340

    $   	go to state 341



state 341

    $   	go to state 342



state 342

    $default	accept
