State 101 contains 24 shift/reduce conflicts.
State 102 contains 24 shift/reduce conflicts.
State 172 contains 17 shift/reduce conflicts.
State 177 contains 24 shift/reduce conflicts.
State 178 contains 24 shift/reduce conflicts.
State 179 contains 24 shift/reduce conflicts.
State 180 contains 24 shift/reduce conflicts.
State 181 contains 24 shift/reduce conflicts.
State 182 contains 24 shift/reduce conflicts.
State 183 contains 24 shift/reduce conflicts.
State 184 contains 24 shift/reduce conflicts.
State 185 contains 24 shift/reduce conflicts.
State 186 contains 24 shift/reduce conflicts.
State 187 contains 24 shift/reduce conflicts.
State 188 contains 24 shift/reduce conflicts.
State 189 contains 24 shift/reduce conflicts.
State 190 contains 24 shift/reduce conflicts.
State 191 contains 24 shift/reduce conflicts.
State 192 contains 24 shift/reduce conflicts.
State 193 contains 24 shift/reduce conflicts.
State 194 contains 24 shift/reduce conflicts.
State 195 contains 24 shift/reduce conflicts.
State 196 contains 24 shift/reduce conflicts.
State 197 contains 24 shift/reduce conflicts.
State 198 contains 24 shift/reduce conflicts.
State 199 contains 24 shift/reduce conflicts.
State 200 contains 24 shift/reduce conflicts.
State 204 contains 17 shift/reduce conflicts.
State 220 contains 1 shift/reduce conflict.
State 221 contains 1 shift/reduce conflict.
State 225 contains 17 shift/reduce conflicts.
State 239 contains 17 shift/reduce conflicts.
State 240 contains 17 shift/reduce conflicts.
State 243 contains 17 shift/reduce conflicts.
State 255 contains 17 shift/reduce conflicts.

Grammar
rule 1    nasl_script -> line nasl_script
rule 2    nasl_script ->		/* empty */
rule 3    line -> COMMENT
rule 4    line -> export
rule 5    line -> function
rule 6    line -> command
rule 7    export -> EXPORT function
rule 8    function -> FUNCTION identifier '(' parameters ')' block
rule 9    function -> FUNCTION identifier '(' ')' block
rule 10   parameters -> parameter ',' parameters
rule 11   parameters -> parameter
rule 12   parameter -> identifier
rule 13   parameter -> '&' identifier
rule 14   parameter -> assign
rule 15   command -> simple
rule 16   command -> compound
rule 17   simple -> assign
rule 18   simple -> call_function
rule 19   simple -> break
rule 20   simple -> continue
rule 21   simple -> return
rule 22   simple -> local
rule 23   simple -> global
rule 24   simple -> inc_dec_exp
rule 25   simple -> rep
rule 26   simple -> import
rule 27   simple -> include
rule 28   simple -> empty
rule 29   break -> BREAK
rule 30   continue -> CONTINUE
rule 31   import -> IMPORT '(' string ')'
rule 32   include -> INCLUDE '(' string ')'
rule 33   return -> RETURN expression
rule 34   return -> RETURN '@'
rule 35   return -> RETURN
rule 36   empty -> ';'
rule 37   global -> GLOBAL vars
rule 38   local -> LOCAL vars
rule 39   rep -> call_function REP expression
rule 40   call_function -> identifier '(' parameters ')'
rule 41   call_function -> identifier '(' ')'
rule 42   assign -> identifier '=' value
rule 43   assign -> identifier '=' ref
rule 44   assign -> assign_math_op
rule 45   assign -> assign_shift_op
rule 46   inc_dec_exp -> INC identifier
rule 47   inc_dec_exp -> DEC identifier
rule 48   inc_dec_exp -> identifier INC
rule 49   inc_dec_exp -> identifier DEC
rule 50   assign_math_op -> identifier ADD_ASS value
rule 51   assign_math_op -> identifier SUB_ASS value
rule 52   assign_math_op -> identifier MUL_ASS value
rule 53   assign_math_op -> identifier DIV_ASS value
rule 54   assign_math_op -> identifier MOD_ASS value
rule 55   assign_shift_op -> identifier SR_ASS value
rule 56   assign_shift_op -> identifier SRR_ASS value
rule 57   assign_shift_op -> identifier SL_ASS value
rule 58   value -> expression
rule 59   value -> call_function
rule 60   identifier -> IDENT
rule 61   identifier -> IN_ITER
rule 62   integer -> INT
rule 63   integer -> TRUE
rule 64   integer -> FALSE
rule 65   string -> STRING
rule 66   ip -> integer '.' integer '.' integer '.' integer
rule 67   null -> NULL
rule 68   ref -> '@' IDENT
rule 69   compound -> for_loop
rule 70   compound -> foreach_loop
rule 71   compound -> repeat_loop
rule 72   compound -> while_loop
rule 73   compound -> if_cond
rule 74   for_loop -> FOR '(' expression ';' expression ';' expression ')' block
rule 75   for_loop -> FOR '(' expression ';' expression ';' expression ')' command
rule 76   foreach_loop -> FOREACH identifier '(' expression ')' block
rule 77   foreach_loop -> FOREACH identifier '(' expression ')' command
rule 78   foreach_loop -> FOREACH '(' identifier IN_ITER expression ')' block
rule 79   foreach_loop -> FOREACH '(' identifier IN_ITER expression ')' command
rule 80   repeat_loop -> REPEAT block UNTIL expression ';'
rule 81   repeat_loop -> REPEAT command UNTIL expression ';'
rule 82   while_loop -> WHILE '(' expression ')' block
rule 83   while_loop -> WHILE '(' expression ')' command
rule 84   if_cond -> IF '(' expression ')' block
rule 85   if_cond -> IF '(' expression ')' command
rule 86   if_cond -> IF '(' expression ')' block ELSE command
rule 87   if_cond -> IF '(' expression ')' block ELSE block
rule 88   if_cond -> IF '(' expression ')' command ELSE block
rule 89   if_cond -> IF '(' expression ')' command ELSE command
rule 90   block ->		/* empty */
rule 91   block -> '{' '}'
rule 92   block -> '{' line '}'
rule 93   block -> '{' argument_list '}'
rule 94   block -> '[' ']'
rule 95   block -> '[' argument_list ']'
rule 96   var -> identifier '=' expression
rule 97   var -> identifier '=' ref
rule 98   var -> identifier
rule 99   vars -> var ',' vars
rule 100  vars -> var
rule 101  argument_list -> argument_list ',' argument
rule 102  argument_list -> argument
rule 103  argument -> string ':' expression
rule 104  argument -> integer ':' expression
rule 105  argument -> string ':' ref
rule 106  argument -> integer ':' ref
rule 107  argument -> identifier ':' expression
rule 108  argument -> identifier ':' ref
rule 109  argument -> expression
rule 110  argument -> ref
rule 111  expression -> '(' expression ')'
rule 112  expression -> expression AND expression
rule 113  expression -> '!' expression
rule 114  expression -> expression OR expression
rule 115  expression -> expression '+' expression
rule 116  expression -> expression '-' expression
rule 117  expression -> '-' expression
rule 118  expression -> expression '*' expression
rule 119  expression -> expression POWER expression
rule 120  expression -> expression '/' expression
rule 121  expression -> expression '%' expression
rule 122  expression -> expression '&' expression
rule 123  expression -> expression '^' expression
rule 124  expression -> expression '|' expression
rule 125  expression -> expression SR expression
rule 126  expression -> expression SL expression
rule 127  expression -> expression SRR expression
rule 128  expression -> expression SUBSTR_EQ expression
rule 129  expression -> expression SUBSTR_NEQ expression
rule 130  expression -> expression REGEX_NEQ expression
rule 131  expression -> expression REGEX_EQ expression
rule 132  expression -> expression '<' expression
rule 133  expression -> expression '>' expression
rule 134  expression -> expression CMP_GE expression
rule 135  expression -> expression CMP_LE expression
rule 136  expression -> expression CMP_EQ expression
rule 137  expression -> expression CMP_NEQ expression
rule 138  expression -> integer
rule 139  expression -> string
rule 140  expression -> ip
rule 141  expression -> null

Terminals, with rules where they appear

$ (-1)
'!' (33) 113
'%' (37) 121
'&' (38) 13 122
'(' (40) 8 9 31 32 40 41 74 75 76 77 78 79 82 83 84 85 86 87 88 89
    111
')' (41) 8 9 31 32 40 41 74 75 76 77 78 79 82 83 84 85 86 87 88 89
    111
'*' (42) 118
'+' (43) 115
',' (44) 10 99 101
'-' (45) 116 117
'.' (46) 66
'/' (47) 120
':' (58) 103 104 105 106 107 108
';' (59) 36 74 75 80 81
'<' (60) 132
'=' (61) 42 43 96 97
'>' (62) 133
'@' (64) 34 68
'[' (91) 94 95
']' (93) 94 95
'^' (94) 123
'{' (123) 91 92 93
'|' (124) 124
'}' (125) 91 92 93
error (256)
COMMENT (258) 3
FUNCTION (259) 8 9
LOCAL (260) 38
GLOBAL (261) 37
ELSE (262) 86 87 88 89
IF (263) 84 85 86 87 88 89
INCLUDE (264) 32
EXPORT (265) 7
IMPORT (266) 31
RETURN (267) 33 34 35
BREAK (268) 29
CONTINUE (269) 30
FOR (270) 74 75
FOREACH (271) 76 77 78 79
IN_ITER (272) 61 78 79
WHILE (273) 82 83
REPEAT (274) 80 81
REP (275) 39
UNTIL (276) 80 81
IDENT (277) 60 68
INT (278) 62
STRING (279) 65
FALSE (280) 64
NULL (281) 67
TRUE (282) 63
OR (283) 114
AND (284) 112
ADD_ASS (285) 50
SUB_ASS (286) 51
SUBSTR_EQ (287) 128
SUBSTR_NEQ (288) 129
REGEX_EQ (289) 131
REGEX_NEQ (290) 130
DEC (291) 47 49
INC (292) 46 48
DIV_ASS (293) 53
MUL_ASS (294) 52
MOD_ASS (295) 54
POWER (296) 119
CMP_EQ (297) 136
CMP_GE (298) 134
CMP_LE (299) 135
CMP_NEQ (300) 137
SL (301) 126
SR (302) 125
SRR (303) 127
SRR_ASS (304) 56
SR_ASS (305) 55
SL_ASS (306) 57

Nonterminals, with rules where they appear

nasl_script (75)
    on left: 1 2, on right: 1
line (76)
    on left: 3 4 5 6, on right: 1 92
export (77)
    on left: 7, on right: 4
function (78)
    on left: 8 9, on right: 5 7
parameters (79)
    on left: 10 11, on right: 8 10 40
parameter (80)
    on left: 12 13 14, on right: 10 11
command (81)
    on left: 15 16, on right: 6 75 77 79 81 83 85 86 88 89
simple (82)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28, on right: 15
break (83)
    on left: 29, on right: 19
continue (84)
    on left: 30, on right: 20
import (85)
    on left: 31, on right: 26
include (86)
    on left: 32, on right: 27
return (87)
    on left: 33 34 35, on right: 21
empty (88)
    on left: 36, on right: 28
global (89)
    on left: 37, on right: 23
local (90)
    on left: 38, on right: 22
rep (91)
    on left: 39, on right: 25
call_function (92)
    on left: 40 41, on right: 18 39 59
assign (93)
    on left: 42 43 44 45, on right: 14 17
inc_dec_exp (94)
    on left: 46 47 48 49, on right: 24
assign_math_op (95)
    on left: 50 51 52 53 54, on right: 44
assign_shift_op (96)
    on left: 55 56 57, on right: 45
value (97)
    on left: 58 59, on right: 42 50 51 52 53 54 55 56 57
identifier (98)
    on left: 60 61, on right: 8 9 12 13 40 41 42 43 46 47 48 49 50
    51 52 53 54 55 56 57 76 77 78 79 96 97 98 107 108
integer (99)
    on left: 62 63 64, on right: 66 104 106 138
string (100)
    on left: 65, on right: 31 32 103 105 139
ip (101)
    on left: 66, on right: 140
null (102)
    on left: 67, on right: 141
ref (103)
    on left: 68, on right: 43 97 105 106 108 110
compound (104)
    on left: 69 70 71 72 73, on right: 16
for_loop (105)
    on left: 74 75, on right: 69
foreach_loop (106)
    on left: 76 77 78 79, on right: 70
repeat_loop (107)
    on left: 80 81, on right: 71
while_loop (108)
    on left: 82 83, on right: 72
if_cond (109)
    on left: 84 85 86 87 88 89, on right: 73
block (110)
    on left: 90 91 92 93 94 95, on right: 8 9 74 76 78 80 82 84 86
    87 88
var (111)
    on left: 96 97 98, on right: 99 100
vars (112)
    on left: 99 100, on right: 37 38 99
argument_list (113)
    on left: 101 102, on right: 93 95 101
argument (114)
    on left: 103 104 105 106 107 108 109 110, on right: 101 102
expression (115)
    on left: 111 112 113 114 115 116 117 118 119 120 121 122 123 124
    125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140
    141, on right: 33 39 58 74 75 76 77 78 79 80 81 82 83 84 85 86
    87 88 89 96 103 104 107 109 111 112 113 114 115 116 117 118 119
    120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135
    136 137


state 0

    COMMENT	shift, and go to state 1
    FUNCTION	shift, and go to state 2
    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    EXPORT	shift, and go to state 7
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20

    $default	reduce using rule 2 (nasl_script)

    nasl_script	go to state 258
    line	go to state 21
    export	go to state 22
    function	go to state 23
    command	go to state 24
    simple	go to state 25
    break	go to state 26
    continue	go to state 27
    import	go to state 28
    include	go to state 29
    return	go to state 30
    empty	go to state 31
    global	go to state 32
    local	go to state 33
    rep 	go to state 34
    call_function	go to state 35
    assign	go to state 36
    inc_dec_exp	go to state 37
    assign_math_op	go to state 38
    assign_shift_op	go to state 39
    identifier	go to state 40
    compound	go to state 41
    for_loop	go to state 42
    foreach_loop	go to state 43
    repeat_loop	go to state 44
    while_loop	go to state 45
    if_cond	go to state 46



state 1

    line  ->  COMMENT .   (rule 3)

    $default	reduce using rule 3 (line)



state 2

    function  ->  FUNCTION . identifier '(' parameters ')' block   (rule 8)
    function  ->  FUNCTION . identifier '(' ')' block   (rule 9)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17

    identifier	go to state 47



state 3

    local  ->  LOCAL . vars   (rule 38)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17

    identifier	go to state 48
    var 	go to state 49
    vars	go to state 50



state 4

    global  ->  GLOBAL . vars   (rule 37)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17

    identifier	go to state 48
    var 	go to state 49
    vars	go to state 51



state 5

    if_cond  ->  IF . '(' expression ')' block   (rule 84)
    if_cond  ->  IF . '(' expression ')' command   (rule 85)
    if_cond  ->  IF . '(' expression ')' block ELSE command   (rule 86)
    if_cond  ->  IF . '(' expression ')' block ELSE block   (rule 87)
    if_cond  ->  IF . '(' expression ')' command ELSE block   (rule 88)
    if_cond  ->  IF . '(' expression ')' command ELSE command   (rule 89)

    '(' 	shift, and go to state 52



state 6

    include  ->  INCLUDE . '(' string ')'   (rule 32)

    '(' 	shift, and go to state 53



state 7

    export  ->  EXPORT . function   (rule 7)

    FUNCTION	shift, and go to state 2

    function	go to state 54



state 8

    import  ->  IMPORT . '(' string ')'   (rule 31)

    '(' 	shift, and go to state 55



state 9

    return  ->  RETURN . expression   (rule 33)
    return  ->  RETURN . '@'   (rule 34)
    return  ->  RETURN .   (rule 35)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '@' 	shift, and go to state 62
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    $default	reduce using rule 35 (return)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 69



state 10

    break  ->  BREAK .   (rule 29)

    $default	reduce using rule 29 (break)



state 11

    continue  ->  CONTINUE .   (rule 30)

    $default	reduce using rule 30 (continue)



state 12

    for_loop  ->  FOR . '(' expression ';' expression ';' expression ')' block   (rule 74)
    for_loop  ->  FOR . '(' expression ';' expression ';' expression ')' command   (rule 75)

    '(' 	shift, and go to state 70



state 13

    foreach_loop  ->  FOREACH . identifier '(' expression ')' block   (rule 76)
    foreach_loop  ->  FOREACH . identifier '(' expression ')' command   (rule 77)
    foreach_loop  ->  FOREACH . '(' identifier IN_ITER expression ')' block   (rule 78)
    foreach_loop  ->  FOREACH . '(' identifier IN_ITER expression ')' command   (rule 79)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    '(' 	shift, and go to state 71

    identifier	go to state 72



state 14

    identifier  ->  IN_ITER .   (rule 61)

    $default	reduce using rule 61 (identifier)



state 15

    while_loop  ->  WHILE . '(' expression ')' block   (rule 82)
    while_loop  ->  WHILE . '(' expression ')' command   (rule 83)

    '(' 	shift, and go to state 73



state 16

    repeat_loop  ->  REPEAT . block UNTIL expression ';'   (rule 80)
    repeat_loop  ->  REPEAT . command UNTIL expression ';'   (rule 81)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20
    '{' 	shift, and go to state 74
    '[' 	shift, and go to state 75

    $default	reduce using rule 90 (block)

    command	go to state 76
    simple	go to state 25
    break	go to state 26
    continue	go to state 27
    import	go to state 28
    include	go to state 29
    return	go to state 30
    empty	go to state 31
    global	go to state 32
    local	go to state 33
    rep 	go to state 34
    call_function	go to state 35
    assign	go to state 36
    inc_dec_exp	go to state 37
    assign_math_op	go to state 38
    assign_shift_op	go to state 39
    identifier	go to state 40
    compound	go to state 41
    for_loop	go to state 42
    foreach_loop	go to state 43
    repeat_loop	go to state 44
    while_loop	go to state 45
    if_cond	go to state 46
    block	go to state 77



state 17

    identifier  ->  IDENT .   (rule 60)

    $default	reduce using rule 60 (identifier)



state 18

    inc_dec_exp  ->  DEC . identifier   (rule 47)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17

    identifier	go to state 78



state 19

    inc_dec_exp  ->  INC . identifier   (rule 46)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17

    identifier	go to state 79



state 20

    empty  ->  ';' .   (rule 36)

    $default	reduce using rule 36 (empty)



state 21

    nasl_script  ->  line . nasl_script   (rule 1)

    COMMENT	shift, and go to state 1
    FUNCTION	shift, and go to state 2
    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    EXPORT	shift, and go to state 7
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20

    $default	reduce using rule 2 (nasl_script)

    nasl_script	go to state 80
    line	go to state 21
    export	go to state 22
    function	go to state 23
    command	go to state 24
    simple	go to state 25
    break	go to state 26
    continue	go to state 27
    import	go to state 28
    include	go to state 29
    return	go to state 30
    empty	go to state 31
    global	go to state 32
    local	go to state 33
    rep 	go to state 34
    call_function	go to state 35
    assign	go to state 36
    inc_dec_exp	go to state 37
    assign_math_op	go to state 38
    assign_shift_op	go to state 39
    identifier	go to state 40
    compound	go to state 41
    for_loop	go to state 42
    foreach_loop	go to state 43
    repeat_loop	go to state 44
    while_loop	go to state 45
    if_cond	go to state 46



state 22

    line  ->  export .   (rule 4)

    $default	reduce using rule 4 (line)



state 23

    line  ->  function .   (rule 5)

    $default	reduce using rule 5 (line)



state 24

    line  ->  command .   (rule 6)

    $default	reduce using rule 6 (line)



state 25

    command  ->  simple .   (rule 15)

    $default	reduce using rule 15 (command)



state 26

    simple  ->  break .   (rule 19)

    $default	reduce using rule 19 (simple)



state 27

    simple  ->  continue .   (rule 20)

    $default	reduce using rule 20 (simple)



state 28

    simple  ->  import .   (rule 26)

    $default	reduce using rule 26 (simple)



state 29

    simple  ->  include .   (rule 27)

    $default	reduce using rule 27 (simple)



state 30

    simple  ->  return .   (rule 21)

    $default	reduce using rule 21 (simple)



state 31

    simple  ->  empty .   (rule 28)

    $default	reduce using rule 28 (simple)



state 32

    simple  ->  global .   (rule 23)

    $default	reduce using rule 23 (simple)



state 33

    simple  ->  local .   (rule 22)

    $default	reduce using rule 22 (simple)



state 34

    simple  ->  rep .   (rule 25)

    $default	reduce using rule 25 (simple)



state 35

    simple  ->  call_function .   (rule 18)
    rep  ->  call_function . REP expression   (rule 39)

    REP 	shift, and go to state 81

    $default	reduce using rule 18 (simple)



state 36

    simple  ->  assign .   (rule 17)

    $default	reduce using rule 17 (simple)



state 37

    simple  ->  inc_dec_exp .   (rule 24)

    $default	reduce using rule 24 (simple)



state 38

    assign  ->  assign_math_op .   (rule 44)

    $default	reduce using rule 44 (assign)



state 39

    assign  ->  assign_shift_op .   (rule 45)

    $default	reduce using rule 45 (assign)



state 40

    call_function  ->  identifier . '(' parameters ')'   (rule 40)
    call_function  ->  identifier . '(' ')'   (rule 41)
    assign  ->  identifier . '=' value   (rule 42)
    assign  ->  identifier . '=' ref   (rule 43)
    inc_dec_exp  ->  identifier . INC   (rule 48)
    inc_dec_exp  ->  identifier . DEC   (rule 49)
    assign_math_op  ->  identifier . ADD_ASS value   (rule 50)
    assign_math_op  ->  identifier . SUB_ASS value   (rule 51)
    assign_math_op  ->  identifier . MUL_ASS value   (rule 52)
    assign_math_op  ->  identifier . DIV_ASS value   (rule 53)
    assign_math_op  ->  identifier . MOD_ASS value   (rule 54)
    assign_shift_op  ->  identifier . SR_ASS value   (rule 55)
    assign_shift_op  ->  identifier . SRR_ASS value   (rule 56)
    assign_shift_op  ->  identifier . SL_ASS value   (rule 57)

    ADD_ASS	shift, and go to state 82
    SUB_ASS	shift, and go to state 83
    DEC 	shift, and go to state 84
    INC 	shift, and go to state 85
    DIV_ASS	shift, and go to state 86
    MUL_ASS	shift, and go to state 87
    MOD_ASS	shift, and go to state 88
    SRR_ASS	shift, and go to state 89
    SR_ASS	shift, and go to state 90
    SL_ASS	shift, and go to state 91
    '(' 	shift, and go to state 92
    '=' 	shift, and go to state 93



state 41

    command  ->  compound .   (rule 16)

    $default	reduce using rule 16 (command)



state 42

    compound  ->  for_loop .   (rule 69)

    $default	reduce using rule 69 (compound)



state 43

    compound  ->  foreach_loop .   (rule 70)

    $default	reduce using rule 70 (compound)



state 44

    compound  ->  repeat_loop .   (rule 71)

    $default	reduce using rule 71 (compound)



state 45

    compound  ->  while_loop .   (rule 72)

    $default	reduce using rule 72 (compound)



state 46

    compound  ->  if_cond .   (rule 73)

    $default	reduce using rule 73 (compound)



state 47

    function  ->  FUNCTION identifier . '(' parameters ')' block   (rule 8)
    function  ->  FUNCTION identifier . '(' ')' block   (rule 9)

    '(' 	shift, and go to state 94



state 48

    var  ->  identifier . '=' expression   (rule 96)
    var  ->  identifier . '=' ref   (rule 97)
    var  ->  identifier .   (rule 98)

    '=' 	shift, and go to state 95

    $default	reduce using rule 98 (var)



state 49

    vars  ->  var . ',' vars   (rule 99)
    vars  ->  var .   (rule 100)

    ',' 	shift, and go to state 96

    $default	reduce using rule 100 (vars)



state 50

    local  ->  LOCAL vars .   (rule 38)

    $default	reduce using rule 38 (local)



state 51

    global  ->  GLOBAL vars .   (rule 37)

    $default	reduce using rule 37 (global)



state 52

    if_cond  ->  IF '(' . expression ')' block   (rule 84)
    if_cond  ->  IF '(' . expression ')' command   (rule 85)
    if_cond  ->  IF '(' . expression ')' block ELSE command   (rule 86)
    if_cond  ->  IF '(' . expression ')' block ELSE block   (rule 87)
    if_cond  ->  IF '(' . expression ')' command ELSE block   (rule 88)
    if_cond  ->  IF '(' . expression ')' command ELSE command   (rule 89)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 97



state 53

    include  ->  INCLUDE '(' . string ')'   (rule 32)

    STRING	shift, and go to state 57

    string	go to state 98



state 54

    export  ->  EXPORT function .   (rule 7)

    $default	reduce using rule 7 (export)



state 55

    import  ->  IMPORT '(' . string ')'   (rule 31)

    STRING	shift, and go to state 57

    string	go to state 99



state 56

    integer  ->  INT .   (rule 62)

    $default	reduce using rule 62 (integer)



state 57

    string  ->  STRING .   (rule 65)

    $default	reduce using rule 65 (string)



state 58

    integer  ->  FALSE .   (rule 64)

    $default	reduce using rule 64 (integer)



state 59

    null  ->  NULL .   (rule 67)

    $default	reduce using rule 67 (null)



state 60

    integer  ->  TRUE .   (rule 63)

    $default	reduce using rule 63 (integer)



state 61

    expression  ->  '(' . expression ')'   (rule 111)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 100



state 62

    return  ->  RETURN '@' .   (rule 34)

    $default	reduce using rule 34 (return)



state 63

    expression  ->  '!' . expression   (rule 113)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 101



state 64

    expression  ->  '-' . expression   (rule 117)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 102



state 65

    ip  ->  integer . '.' integer '.' integer '.' integer   (rule 66)
    expression  ->  integer .   (rule 138)

    '.' 	shift, and go to state 103

    $default	reduce using rule 138 (expression)



state 66

    expression  ->  string .   (rule 139)

    $default	reduce using rule 139 (expression)



state 67

    expression  ->  ip .   (rule 140)

    $default	reduce using rule 140 (expression)



state 68

    expression  ->  null .   (rule 141)

    $default	reduce using rule 141 (expression)



state 69

    return  ->  RETURN expression .   (rule 33)
    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    $default	reduce using rule 33 (return)



state 70

    for_loop  ->  FOR '(' . expression ';' expression ';' expression ')' block   (rule 74)
    for_loop  ->  FOR '(' . expression ';' expression ';' expression ')' command   (rule 75)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 128



state 71

    foreach_loop  ->  FOREACH '(' . identifier IN_ITER expression ')' block   (rule 78)
    foreach_loop  ->  FOREACH '(' . identifier IN_ITER expression ')' command   (rule 79)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17

    identifier	go to state 129



state 72

    foreach_loop  ->  FOREACH identifier . '(' expression ')' block   (rule 76)
    foreach_loop  ->  FOREACH identifier . '(' expression ')' command   (rule 77)

    '(' 	shift, and go to state 130



state 73

    while_loop  ->  WHILE '(' . expression ')' block   (rule 82)
    while_loop  ->  WHILE '(' . expression ')' command   (rule 83)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 131



state 74

    block  ->  '{' . '}'   (rule 91)
    block  ->  '{' . line '}'   (rule 92)
    block  ->  '{' . argument_list '}'   (rule 93)

    COMMENT	shift, and go to state 1
    FUNCTION	shift, and go to state 2
    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    EXPORT	shift, and go to state 7
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    '(' 	shift, and go to state 61
    '@' 	shift, and go to state 132
    ';' 	shift, and go to state 20
    '}' 	shift, and go to state 133
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    line	go to state 134
    export	go to state 22
    function	go to state 23
    command	go to state 24
    simple	go to state 25
    break	go to state 26
    continue	go to state 27
    import	go to state 28
    include	go to state 29
    return	go to state 30
    empty	go to state 31
    global	go to state 32
    local	go to state 33
    rep 	go to state 34
    call_function	go to state 35
    assign	go to state 36
    inc_dec_exp	go to state 37
    assign_math_op	go to state 38
    assign_shift_op	go to state 39
    identifier	go to state 135
    integer	go to state 136
    string	go to state 137
    ip  	go to state 67
    null	go to state 68
    ref 	go to state 138
    compound	go to state 41
    for_loop	go to state 42
    foreach_loop	go to state 43
    repeat_loop	go to state 44
    while_loop	go to state 45
    if_cond	go to state 46
    argument_list	go to state 139
    argument	go to state 140
    expression	go to state 141



state 75

    block  ->  '[' . ']'   (rule 94)
    block  ->  '[' . argument_list ']'   (rule 95)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '@' 	shift, and go to state 132
    ']' 	shift, and go to state 142
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    identifier	go to state 143
    integer	go to state 136
    string	go to state 137
    ip  	go to state 67
    null	go to state 68
    ref 	go to state 138
    argument_list	go to state 144
    argument	go to state 140
    expression	go to state 141



state 76

    repeat_loop  ->  REPEAT command . UNTIL expression ';'   (rule 81)

    UNTIL	shift, and go to state 145



state 77

    repeat_loop  ->  REPEAT block . UNTIL expression ';'   (rule 80)

    UNTIL	shift, and go to state 146



state 78

    inc_dec_exp  ->  DEC identifier .   (rule 47)

    $default	reduce using rule 47 (inc_dec_exp)



state 79

    inc_dec_exp  ->  INC identifier .   (rule 46)

    $default	reduce using rule 46 (inc_dec_exp)



state 80

    nasl_script  ->  line nasl_script .   (rule 1)

    $default	reduce using rule 1 (nasl_script)



state 81

    rep  ->  call_function REP . expression   (rule 39)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 147



state 82

    assign_math_op  ->  identifier ADD_ASS . value   (rule 50)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    call_function	go to state 148
    value	go to state 149
    identifier	go to state 150
    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 151



state 83

    assign_math_op  ->  identifier SUB_ASS . value   (rule 51)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    call_function	go to state 148
    value	go to state 152
    identifier	go to state 150
    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 151



state 84

    inc_dec_exp  ->  identifier DEC .   (rule 49)

    $default	reduce using rule 49 (inc_dec_exp)



state 85

    inc_dec_exp  ->  identifier INC .   (rule 48)

    $default	reduce using rule 48 (inc_dec_exp)



state 86

    assign_math_op  ->  identifier DIV_ASS . value   (rule 53)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    call_function	go to state 148
    value	go to state 153
    identifier	go to state 150
    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 151



state 87

    assign_math_op  ->  identifier MUL_ASS . value   (rule 52)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    call_function	go to state 148
    value	go to state 154
    identifier	go to state 150
    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 151



state 88

    assign_math_op  ->  identifier MOD_ASS . value   (rule 54)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    call_function	go to state 148
    value	go to state 155
    identifier	go to state 150
    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 151



state 89

    assign_shift_op  ->  identifier SRR_ASS . value   (rule 56)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    call_function	go to state 148
    value	go to state 156
    identifier	go to state 150
    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 151



state 90

    assign_shift_op  ->  identifier SR_ASS . value   (rule 55)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    call_function	go to state 148
    value	go to state 157
    identifier	go to state 150
    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 151



state 91

    assign_shift_op  ->  identifier SL_ASS . value   (rule 57)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    call_function	go to state 148
    value	go to state 158
    identifier	go to state 150
    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 151



state 92

    call_function  ->  identifier '(' . parameters ')'   (rule 40)
    call_function  ->  identifier '(' . ')'   (rule 41)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    ')' 	shift, and go to state 159
    '&' 	shift, and go to state 160

    parameters	go to state 161
    parameter	go to state 162
    assign	go to state 163
    assign_math_op	go to state 38
    assign_shift_op	go to state 39
    identifier	go to state 164



state 93

    assign  ->  identifier '=' . value   (rule 42)
    assign  ->  identifier '=' . ref   (rule 43)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '@' 	shift, and go to state 132
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    call_function	go to state 148
    value	go to state 165
    identifier	go to state 150
    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    ref 	go to state 166
    expression	go to state 151



state 94

    function  ->  FUNCTION identifier '(' . parameters ')' block   (rule 8)
    function  ->  FUNCTION identifier '(' . ')' block   (rule 9)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    ')' 	shift, and go to state 167
    '&' 	shift, and go to state 160

    parameters	go to state 168
    parameter	go to state 162
    assign	go to state 163
    assign_math_op	go to state 38
    assign_shift_op	go to state 39
    identifier	go to state 164



state 95

    var  ->  identifier '=' . expression   (rule 96)
    var  ->  identifier '=' . ref   (rule 97)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '@' 	shift, and go to state 132
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    ref 	go to state 169
    expression	go to state 170



state 96

    vars  ->  var ',' . vars   (rule 99)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17

    identifier	go to state 48
    var 	go to state 49
    vars	go to state 171



state 97

    if_cond  ->  IF '(' expression . ')' block   (rule 84)
    if_cond  ->  IF '(' expression . ')' command   (rule 85)
    if_cond  ->  IF '(' expression . ')' block ELSE command   (rule 86)
    if_cond  ->  IF '(' expression . ')' block ELSE block   (rule 87)
    if_cond  ->  IF '(' expression . ')' command ELSE block   (rule 88)
    if_cond  ->  IF '(' expression . ')' command ELSE command   (rule 89)
    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    ')' 	shift, and go to state 172
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127



state 98

    include  ->  INCLUDE '(' string . ')'   (rule 32)

    ')' 	shift, and go to state 173



state 99

    import  ->  IMPORT '(' string . ')'   (rule 31)

    ')' 	shift, and go to state 174



state 100

    expression  ->  '(' expression . ')'   (rule 111)
    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    ')' 	shift, and go to state 175
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127



state 101

    expression  ->  expression . AND expression   (rule 112)
    expression  ->  '!' expression .   (rule 113)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    OR  	[reduce using rule 113 (expression)]
    AND 	[reduce using rule 113 (expression)]
    SUBSTR_EQ	[reduce using rule 113 (expression)]
    SUBSTR_NEQ	[reduce using rule 113 (expression)]
    REGEX_EQ	[reduce using rule 113 (expression)]
    REGEX_NEQ	[reduce using rule 113 (expression)]
    POWER	[reduce using rule 113 (expression)]
    CMP_EQ	[reduce using rule 113 (expression)]
    CMP_GE	[reduce using rule 113 (expression)]
    CMP_LE	[reduce using rule 113 (expression)]
    CMP_NEQ	[reduce using rule 113 (expression)]
    SL  	[reduce using rule 113 (expression)]
    SR  	[reduce using rule 113 (expression)]
    SRR 	[reduce using rule 113 (expression)]
    '&' 	[reduce using rule 113 (expression)]
    '+' 	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    '*' 	[reduce using rule 113 (expression)]
    '/' 	[reduce using rule 113 (expression)]
    '%' 	[reduce using rule 113 (expression)]
    '^' 	[reduce using rule 113 (expression)]
    '|' 	[reduce using rule 113 (expression)]
    '<' 	[reduce using rule 113 (expression)]
    '>' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)



state 102

    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  '-' expression .   (rule 117)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    OR  	[reduce using rule 117 (expression)]
    AND 	[reduce using rule 117 (expression)]
    SUBSTR_EQ	[reduce using rule 117 (expression)]
    SUBSTR_NEQ	[reduce using rule 117 (expression)]
    REGEX_EQ	[reduce using rule 117 (expression)]
    REGEX_NEQ	[reduce using rule 117 (expression)]
    POWER	[reduce using rule 117 (expression)]
    CMP_EQ	[reduce using rule 117 (expression)]
    CMP_GE	[reduce using rule 117 (expression)]
    CMP_LE	[reduce using rule 117 (expression)]
    CMP_NEQ	[reduce using rule 117 (expression)]
    SL  	[reduce using rule 117 (expression)]
    SR  	[reduce using rule 117 (expression)]
    SRR 	[reduce using rule 117 (expression)]
    '&' 	[reduce using rule 117 (expression)]
    '+' 	[reduce using rule 117 (expression)]
    '-' 	[reduce using rule 117 (expression)]
    '*' 	[reduce using rule 117 (expression)]
    '/' 	[reduce using rule 117 (expression)]
    '%' 	[reduce using rule 117 (expression)]
    '^' 	[reduce using rule 117 (expression)]
    '|' 	[reduce using rule 117 (expression)]
    '<' 	[reduce using rule 117 (expression)]
    '>' 	[reduce using rule 117 (expression)]
    $default	reduce using rule 117 (expression)



state 103

    ip  ->  integer '.' . integer '.' integer '.' integer   (rule 66)

    INT 	shift, and go to state 56
    FALSE	shift, and go to state 58
    TRUE	shift, and go to state 60

    integer	go to state 176



state 104

    expression  ->  expression OR . expression   (rule 114)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 177



state 105

    expression  ->  expression AND . expression   (rule 112)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 178



state 106

    expression  ->  expression SUBSTR_EQ . expression   (rule 128)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 179



state 107

    expression  ->  expression SUBSTR_NEQ . expression   (rule 129)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 180



state 108

    expression  ->  expression REGEX_EQ . expression   (rule 131)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 181



state 109

    expression  ->  expression REGEX_NEQ . expression   (rule 130)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 182



state 110

    expression  ->  expression POWER . expression   (rule 119)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 183



state 111

    expression  ->  expression CMP_EQ . expression   (rule 136)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 184



state 112

    expression  ->  expression CMP_GE . expression   (rule 134)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 185



state 113

    expression  ->  expression CMP_LE . expression   (rule 135)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 186



state 114

    expression  ->  expression CMP_NEQ . expression   (rule 137)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 187



state 115

    expression  ->  expression SL . expression   (rule 126)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 188



state 116

    expression  ->  expression SR . expression   (rule 125)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 189



state 117

    expression  ->  expression SRR . expression   (rule 127)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 190



state 118

    expression  ->  expression '&' . expression   (rule 122)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 191



state 119

    expression  ->  expression '+' . expression   (rule 115)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 192



state 120

    expression  ->  expression '-' . expression   (rule 116)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 193



state 121

    expression  ->  expression '*' . expression   (rule 118)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 194



state 122

    expression  ->  expression '/' . expression   (rule 120)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 195



state 123

    expression  ->  expression '%' . expression   (rule 121)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 196



state 124

    expression  ->  expression '^' . expression   (rule 123)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 197



state 125

    expression  ->  expression '|' . expression   (rule 124)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 198



state 126

    expression  ->  expression '<' . expression   (rule 132)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 199



state 127

    expression  ->  expression '>' . expression   (rule 133)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 200



state 128

    for_loop  ->  FOR '(' expression . ';' expression ';' expression ')' block   (rule 74)
    for_loop  ->  FOR '(' expression . ';' expression ';' expression ')' command   (rule 75)
    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    ';' 	shift, and go to state 201
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127



state 129

    foreach_loop  ->  FOREACH '(' identifier . IN_ITER expression ')' block   (rule 78)
    foreach_loop  ->  FOREACH '(' identifier . IN_ITER expression ')' command   (rule 79)

    IN_ITER	shift, and go to state 202



state 130

    foreach_loop  ->  FOREACH identifier '(' . expression ')' block   (rule 76)
    foreach_loop  ->  FOREACH identifier '(' . expression ')' command   (rule 77)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 203



state 131

    while_loop  ->  WHILE '(' expression . ')' block   (rule 82)
    while_loop  ->  WHILE '(' expression . ')' command   (rule 83)
    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    ')' 	shift, and go to state 204
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127



state 132

    ref  ->  '@' . IDENT   (rule 68)

    IDENT	shift, and go to state 205



state 133

    block  ->  '{' '}' .   (rule 91)

    $default	reduce using rule 91 (block)



state 134

    block  ->  '{' line . '}'   (rule 92)

    '}' 	shift, and go to state 206



state 135

    call_function  ->  identifier . '(' parameters ')'   (rule 40)
    call_function  ->  identifier . '(' ')'   (rule 41)
    assign  ->  identifier . '=' value   (rule 42)
    assign  ->  identifier . '=' ref   (rule 43)
    inc_dec_exp  ->  identifier . INC   (rule 48)
    inc_dec_exp  ->  identifier . DEC   (rule 49)
    assign_math_op  ->  identifier . ADD_ASS value   (rule 50)
    assign_math_op  ->  identifier . SUB_ASS value   (rule 51)
    assign_math_op  ->  identifier . MUL_ASS value   (rule 52)
    assign_math_op  ->  identifier . DIV_ASS value   (rule 53)
    assign_math_op  ->  identifier . MOD_ASS value   (rule 54)
    assign_shift_op  ->  identifier . SR_ASS value   (rule 55)
    assign_shift_op  ->  identifier . SRR_ASS value   (rule 56)
    assign_shift_op  ->  identifier . SL_ASS value   (rule 57)
    argument  ->  identifier . ':' expression   (rule 107)
    argument  ->  identifier . ':' ref   (rule 108)

    ADD_ASS	shift, and go to state 82
    SUB_ASS	shift, and go to state 83
    DEC 	shift, and go to state 84
    INC 	shift, and go to state 85
    DIV_ASS	shift, and go to state 86
    MUL_ASS	shift, and go to state 87
    MOD_ASS	shift, and go to state 88
    SRR_ASS	shift, and go to state 89
    SR_ASS	shift, and go to state 90
    SL_ASS	shift, and go to state 91
    '(' 	shift, and go to state 92
    '=' 	shift, and go to state 93
    ':' 	shift, and go to state 207



state 136

    ip  ->  integer . '.' integer '.' integer '.' integer   (rule 66)
    argument  ->  integer . ':' expression   (rule 104)
    argument  ->  integer . ':' ref   (rule 106)
    expression  ->  integer .   (rule 138)

    '.' 	shift, and go to state 103
    ':' 	shift, and go to state 208

    $default	reduce using rule 138 (expression)



state 137

    argument  ->  string . ':' expression   (rule 103)
    argument  ->  string . ':' ref   (rule 105)
    expression  ->  string .   (rule 139)

    ':' 	shift, and go to state 209

    $default	reduce using rule 139 (expression)



state 138

    argument  ->  ref .   (rule 110)

    $default	reduce using rule 110 (argument)



state 139

    block  ->  '{' argument_list . '}'   (rule 93)
    argument_list  ->  argument_list . ',' argument   (rule 101)

    ',' 	shift, and go to state 210
    '}' 	shift, and go to state 211



state 140

    argument_list  ->  argument .   (rule 102)

    $default	reduce using rule 102 (argument_list)



state 141

    argument  ->  expression .   (rule 109)
    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    $default	reduce using rule 109 (argument)



state 142

    block  ->  '[' ']' .   (rule 94)

    $default	reduce using rule 94 (block)



state 143

    argument  ->  identifier . ':' expression   (rule 107)
    argument  ->  identifier . ':' ref   (rule 108)

    ':' 	shift, and go to state 207



state 144

    block  ->  '[' argument_list . ']'   (rule 95)
    argument_list  ->  argument_list . ',' argument   (rule 101)

    ',' 	shift, and go to state 210
    ']' 	shift, and go to state 212



state 145

    repeat_loop  ->  REPEAT command UNTIL . expression ';'   (rule 81)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 213



state 146

    repeat_loop  ->  REPEAT block UNTIL . expression ';'   (rule 80)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 214



state 147

    rep  ->  call_function REP expression .   (rule 39)
    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    $default	reduce using rule 39 (rep)



state 148

    value  ->  call_function .   (rule 59)

    $default	reduce using rule 59 (value)



state 149

    assign_math_op  ->  identifier ADD_ASS value .   (rule 50)

    $default	reduce using rule 50 (assign_math_op)



state 150

    call_function  ->  identifier . '(' parameters ')'   (rule 40)
    call_function  ->  identifier . '(' ')'   (rule 41)

    '(' 	shift, and go to state 92



state 151

    value  ->  expression .   (rule 58)
    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    $default	reduce using rule 58 (value)



state 152

    assign_math_op  ->  identifier SUB_ASS value .   (rule 51)

    $default	reduce using rule 51 (assign_math_op)



state 153

    assign_math_op  ->  identifier DIV_ASS value .   (rule 53)

    $default	reduce using rule 53 (assign_math_op)



state 154

    assign_math_op  ->  identifier MUL_ASS value .   (rule 52)

    $default	reduce using rule 52 (assign_math_op)



state 155

    assign_math_op  ->  identifier MOD_ASS value .   (rule 54)

    $default	reduce using rule 54 (assign_math_op)



state 156

    assign_shift_op  ->  identifier SRR_ASS value .   (rule 56)

    $default	reduce using rule 56 (assign_shift_op)



state 157

    assign_shift_op  ->  identifier SR_ASS value .   (rule 55)

    $default	reduce using rule 55 (assign_shift_op)



state 158

    assign_shift_op  ->  identifier SL_ASS value .   (rule 57)

    $default	reduce using rule 57 (assign_shift_op)



state 159

    call_function  ->  identifier '(' ')' .   (rule 41)

    $default	reduce using rule 41 (call_function)



state 160

    parameter  ->  '&' . identifier   (rule 13)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17

    identifier	go to state 215



state 161

    call_function  ->  identifier '(' parameters . ')'   (rule 40)

    ')' 	shift, and go to state 216



state 162

    parameters  ->  parameter . ',' parameters   (rule 10)
    parameters  ->  parameter .   (rule 11)

    ',' 	shift, and go to state 217

    $default	reduce using rule 11 (parameters)



state 163

    parameter  ->  assign .   (rule 14)

    $default	reduce using rule 14 (parameter)



state 164

    parameter  ->  identifier .   (rule 12)
    assign  ->  identifier . '=' value   (rule 42)
    assign  ->  identifier . '=' ref   (rule 43)
    assign_math_op  ->  identifier . ADD_ASS value   (rule 50)
    assign_math_op  ->  identifier . SUB_ASS value   (rule 51)
    assign_math_op  ->  identifier . MUL_ASS value   (rule 52)
    assign_math_op  ->  identifier . DIV_ASS value   (rule 53)
    assign_math_op  ->  identifier . MOD_ASS value   (rule 54)
    assign_shift_op  ->  identifier . SR_ASS value   (rule 55)
    assign_shift_op  ->  identifier . SRR_ASS value   (rule 56)
    assign_shift_op  ->  identifier . SL_ASS value   (rule 57)

    ADD_ASS	shift, and go to state 82
    SUB_ASS	shift, and go to state 83
    DIV_ASS	shift, and go to state 86
    MUL_ASS	shift, and go to state 87
    MOD_ASS	shift, and go to state 88
    SRR_ASS	shift, and go to state 89
    SR_ASS	shift, and go to state 90
    SL_ASS	shift, and go to state 91
    '=' 	shift, and go to state 93

    $default	reduce using rule 12 (parameter)



state 165

    assign  ->  identifier '=' value .   (rule 42)

    $default	reduce using rule 42 (assign)



state 166

    assign  ->  identifier '=' ref .   (rule 43)

    $default	reduce using rule 43 (assign)



state 167

    function  ->  FUNCTION identifier '(' ')' . block   (rule 9)

    '{' 	shift, and go to state 74
    '[' 	shift, and go to state 75

    $default	reduce using rule 90 (block)

    block	go to state 218



state 168

    function  ->  FUNCTION identifier '(' parameters . ')' block   (rule 8)

    ')' 	shift, and go to state 219



state 169

    var  ->  identifier '=' ref .   (rule 97)

    $default	reduce using rule 97 (var)



state 170

    var  ->  identifier '=' expression .   (rule 96)
    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    $default	reduce using rule 96 (var)



state 171

    vars  ->  var ',' vars .   (rule 99)

    $default	reduce using rule 99 (vars)



state 172

    if_cond  ->  IF '(' expression ')' . block   (rule 84)
    if_cond  ->  IF '(' expression ')' . command   (rule 85)
    if_cond  ->  IF '(' expression ')' . block ELSE command   (rule 86)
    if_cond  ->  IF '(' expression ')' . block ELSE block   (rule 87)
    if_cond  ->  IF '(' expression ')' . command ELSE block   (rule 88)
    if_cond  ->  IF '(' expression ')' . command ELSE command   (rule 89)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20
    '{' 	shift, and go to state 74
    '[' 	shift, and go to state 75

    LOCAL	[reduce using rule 90 (block)]
    GLOBAL	[reduce using rule 90 (block)]
    IF  	[reduce using rule 90 (block)]
    INCLUDE	[reduce using rule 90 (block)]
    IMPORT	[reduce using rule 90 (block)]
    RETURN	[reduce using rule 90 (block)]
    BREAK	[reduce using rule 90 (block)]
    CONTINUE	[reduce using rule 90 (block)]
    FOR 	[reduce using rule 90 (block)]
    FOREACH	[reduce using rule 90 (block)]
    IN_ITER	[reduce using rule 90 (block)]
    WHILE	[reduce using rule 90 (block)]
    REPEAT	[reduce using rule 90 (block)]
    IDENT	[reduce using rule 90 (block)]
    DEC 	[reduce using rule 90 (block)]
    INC 	[reduce using rule 90 (block)]
    ';' 	[reduce using rule 90 (block)]
    $default	reduce using rule 90 (block)

    command	go to state 220
    simple	go to state 25
    break	go to state 26
    continue	go to state 27
    import	go to state 28
    include	go to state 29
    return	go to state 30
    empty	go to state 31
    global	go to state 32
    local	go to state 33
    rep 	go to state 34
    call_function	go to state 35
    assign	go to state 36
    inc_dec_exp	go to state 37
    assign_math_op	go to state 38
    assign_shift_op	go to state 39
    identifier	go to state 40
    compound	go to state 41
    for_loop	go to state 42
    foreach_loop	go to state 43
    repeat_loop	go to state 44
    while_loop	go to state 45
    if_cond	go to state 46
    block	go to state 221



state 173

    include  ->  INCLUDE '(' string ')' .   (rule 32)

    $default	reduce using rule 32 (include)



state 174

    import  ->  IMPORT '(' string ')' .   (rule 31)

    $default	reduce using rule 31 (import)



state 175

    expression  ->  '(' expression ')' .   (rule 111)

    $default	reduce using rule 111 (expression)



state 176

    ip  ->  integer '.' integer . '.' integer '.' integer   (rule 66)

    '.' 	shift, and go to state 222



state 177

    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression OR expression .   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    OR  	[reduce using rule 114 (expression)]
    AND 	[reduce using rule 114 (expression)]
    SUBSTR_EQ	[reduce using rule 114 (expression)]
    SUBSTR_NEQ	[reduce using rule 114 (expression)]
    REGEX_EQ	[reduce using rule 114 (expression)]
    REGEX_NEQ	[reduce using rule 114 (expression)]
    POWER	[reduce using rule 114 (expression)]
    CMP_EQ	[reduce using rule 114 (expression)]
    CMP_GE	[reduce using rule 114 (expression)]
    CMP_LE	[reduce using rule 114 (expression)]
    CMP_NEQ	[reduce using rule 114 (expression)]
    SL  	[reduce using rule 114 (expression)]
    SR  	[reduce using rule 114 (expression)]
    SRR 	[reduce using rule 114 (expression)]
    '&' 	[reduce using rule 114 (expression)]
    '+' 	[reduce using rule 114 (expression)]
    '-' 	[reduce using rule 114 (expression)]
    '*' 	[reduce using rule 114 (expression)]
    '/' 	[reduce using rule 114 (expression)]
    '%' 	[reduce using rule 114 (expression)]
    '^' 	[reduce using rule 114 (expression)]
    '|' 	[reduce using rule 114 (expression)]
    '<' 	[reduce using rule 114 (expression)]
    '>' 	[reduce using rule 114 (expression)]
    $default	reduce using rule 114 (expression)



state 178

    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression AND expression .   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    OR  	[reduce using rule 112 (expression)]
    AND 	[reduce using rule 112 (expression)]
    SUBSTR_EQ	[reduce using rule 112 (expression)]
    SUBSTR_NEQ	[reduce using rule 112 (expression)]
    REGEX_EQ	[reduce using rule 112 (expression)]
    REGEX_NEQ	[reduce using rule 112 (expression)]
    POWER	[reduce using rule 112 (expression)]
    CMP_EQ	[reduce using rule 112 (expression)]
    CMP_GE	[reduce using rule 112 (expression)]
    CMP_LE	[reduce using rule 112 (expression)]
    CMP_NEQ	[reduce using rule 112 (expression)]
    SL  	[reduce using rule 112 (expression)]
    SR  	[reduce using rule 112 (expression)]
    SRR 	[reduce using rule 112 (expression)]
    '&' 	[reduce using rule 112 (expression)]
    '+' 	[reduce using rule 112 (expression)]
    '-' 	[reduce using rule 112 (expression)]
    '*' 	[reduce using rule 112 (expression)]
    '/' 	[reduce using rule 112 (expression)]
    '%' 	[reduce using rule 112 (expression)]
    '^' 	[reduce using rule 112 (expression)]
    '|' 	[reduce using rule 112 (expression)]
    '<' 	[reduce using rule 112 (expression)]
    '>' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)



state 179

    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression SUBSTR_EQ expression .   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    OR  	[reduce using rule 128 (expression)]
    AND 	[reduce using rule 128 (expression)]
    SUBSTR_EQ	[reduce using rule 128 (expression)]
    SUBSTR_NEQ	[reduce using rule 128 (expression)]
    REGEX_EQ	[reduce using rule 128 (expression)]
    REGEX_NEQ	[reduce using rule 128 (expression)]
    POWER	[reduce using rule 128 (expression)]
    CMP_EQ	[reduce using rule 128 (expression)]
    CMP_GE	[reduce using rule 128 (expression)]
    CMP_LE	[reduce using rule 128 (expression)]
    CMP_NEQ	[reduce using rule 128 (expression)]
    SL  	[reduce using rule 128 (expression)]
    SR  	[reduce using rule 128 (expression)]
    SRR 	[reduce using rule 128 (expression)]
    '&' 	[reduce using rule 128 (expression)]
    '+' 	[reduce using rule 128 (expression)]
    '-' 	[reduce using rule 128 (expression)]
    '*' 	[reduce using rule 128 (expression)]
    '/' 	[reduce using rule 128 (expression)]
    '%' 	[reduce using rule 128 (expression)]
    '^' 	[reduce using rule 128 (expression)]
    '|' 	[reduce using rule 128 (expression)]
    '<' 	[reduce using rule 128 (expression)]
    '>' 	[reduce using rule 128 (expression)]
    $default	reduce using rule 128 (expression)



state 180

    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression SUBSTR_NEQ expression .   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    OR  	[reduce using rule 129 (expression)]
    AND 	[reduce using rule 129 (expression)]
    SUBSTR_EQ	[reduce using rule 129 (expression)]
    SUBSTR_NEQ	[reduce using rule 129 (expression)]
    REGEX_EQ	[reduce using rule 129 (expression)]
    REGEX_NEQ	[reduce using rule 129 (expression)]
    POWER	[reduce using rule 129 (expression)]
    CMP_EQ	[reduce using rule 129 (expression)]
    CMP_GE	[reduce using rule 129 (expression)]
    CMP_LE	[reduce using rule 129 (expression)]
    CMP_NEQ	[reduce using rule 129 (expression)]
    SL  	[reduce using rule 129 (expression)]
    SR  	[reduce using rule 129 (expression)]
    SRR 	[reduce using rule 129 (expression)]
    '&' 	[reduce using rule 129 (expression)]
    '+' 	[reduce using rule 129 (expression)]
    '-' 	[reduce using rule 129 (expression)]
    '*' 	[reduce using rule 129 (expression)]
    '/' 	[reduce using rule 129 (expression)]
    '%' 	[reduce using rule 129 (expression)]
    '^' 	[reduce using rule 129 (expression)]
    '|' 	[reduce using rule 129 (expression)]
    '<' 	[reduce using rule 129 (expression)]
    '>' 	[reduce using rule 129 (expression)]
    $default	reduce using rule 129 (expression)



state 181

    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression REGEX_EQ expression .   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    OR  	[reduce using rule 131 (expression)]
    AND 	[reduce using rule 131 (expression)]
    SUBSTR_EQ	[reduce using rule 131 (expression)]
    SUBSTR_NEQ	[reduce using rule 131 (expression)]
    REGEX_EQ	[reduce using rule 131 (expression)]
    REGEX_NEQ	[reduce using rule 131 (expression)]
    POWER	[reduce using rule 131 (expression)]
    CMP_EQ	[reduce using rule 131 (expression)]
    CMP_GE	[reduce using rule 131 (expression)]
    CMP_LE	[reduce using rule 131 (expression)]
    CMP_NEQ	[reduce using rule 131 (expression)]
    SL  	[reduce using rule 131 (expression)]
    SR  	[reduce using rule 131 (expression)]
    SRR 	[reduce using rule 131 (expression)]
    '&' 	[reduce using rule 131 (expression)]
    '+' 	[reduce using rule 131 (expression)]
    '-' 	[reduce using rule 131 (expression)]
    '*' 	[reduce using rule 131 (expression)]
    '/' 	[reduce using rule 131 (expression)]
    '%' 	[reduce using rule 131 (expression)]
    '^' 	[reduce using rule 131 (expression)]
    '|' 	[reduce using rule 131 (expression)]
    '<' 	[reduce using rule 131 (expression)]
    '>' 	[reduce using rule 131 (expression)]
    $default	reduce using rule 131 (expression)



state 182

    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression REGEX_NEQ expression .   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    OR  	[reduce using rule 130 (expression)]
    AND 	[reduce using rule 130 (expression)]
    SUBSTR_EQ	[reduce using rule 130 (expression)]
    SUBSTR_NEQ	[reduce using rule 130 (expression)]
    REGEX_EQ	[reduce using rule 130 (expression)]
    REGEX_NEQ	[reduce using rule 130 (expression)]
    POWER	[reduce using rule 130 (expression)]
    CMP_EQ	[reduce using rule 130 (expression)]
    CMP_GE	[reduce using rule 130 (expression)]
    CMP_LE	[reduce using rule 130 (expression)]
    CMP_NEQ	[reduce using rule 130 (expression)]
    SL  	[reduce using rule 130 (expression)]
    SR  	[reduce using rule 130 (expression)]
    SRR 	[reduce using rule 130 (expression)]
    '&' 	[reduce using rule 130 (expression)]
    '+' 	[reduce using rule 130 (expression)]
    '-' 	[reduce using rule 130 (expression)]
    '*' 	[reduce using rule 130 (expression)]
    '/' 	[reduce using rule 130 (expression)]
    '%' 	[reduce using rule 130 (expression)]
    '^' 	[reduce using rule 130 (expression)]
    '|' 	[reduce using rule 130 (expression)]
    '<' 	[reduce using rule 130 (expression)]
    '>' 	[reduce using rule 130 (expression)]
    $default	reduce using rule 130 (expression)



state 183

    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression POWER expression .   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    OR  	[reduce using rule 119 (expression)]
    AND 	[reduce using rule 119 (expression)]
    SUBSTR_EQ	[reduce using rule 119 (expression)]
    SUBSTR_NEQ	[reduce using rule 119 (expression)]
    REGEX_EQ	[reduce using rule 119 (expression)]
    REGEX_NEQ	[reduce using rule 119 (expression)]
    POWER	[reduce using rule 119 (expression)]
    CMP_EQ	[reduce using rule 119 (expression)]
    CMP_GE	[reduce using rule 119 (expression)]
    CMP_LE	[reduce using rule 119 (expression)]
    CMP_NEQ	[reduce using rule 119 (expression)]
    SL  	[reduce using rule 119 (expression)]
    SR  	[reduce using rule 119 (expression)]
    SRR 	[reduce using rule 119 (expression)]
    '&' 	[reduce using rule 119 (expression)]
    '+' 	[reduce using rule 119 (expression)]
    '-' 	[reduce using rule 119 (expression)]
    '*' 	[reduce using rule 119 (expression)]
    '/' 	[reduce using rule 119 (expression)]
    '%' 	[reduce using rule 119 (expression)]
    '^' 	[reduce using rule 119 (expression)]
    '|' 	[reduce using rule 119 (expression)]
    '<' 	[reduce using rule 119 (expression)]
    '>' 	[reduce using rule 119 (expression)]
    $default	reduce using rule 119 (expression)



state 184

    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression CMP_EQ expression .   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    OR  	[reduce using rule 136 (expression)]
    AND 	[reduce using rule 136 (expression)]
    SUBSTR_EQ	[reduce using rule 136 (expression)]
    SUBSTR_NEQ	[reduce using rule 136 (expression)]
    REGEX_EQ	[reduce using rule 136 (expression)]
    REGEX_NEQ	[reduce using rule 136 (expression)]
    POWER	[reduce using rule 136 (expression)]
    CMP_EQ	[reduce using rule 136 (expression)]
    CMP_GE	[reduce using rule 136 (expression)]
    CMP_LE	[reduce using rule 136 (expression)]
    CMP_NEQ	[reduce using rule 136 (expression)]
    SL  	[reduce using rule 136 (expression)]
    SR  	[reduce using rule 136 (expression)]
    SRR 	[reduce using rule 136 (expression)]
    '&' 	[reduce using rule 136 (expression)]
    '+' 	[reduce using rule 136 (expression)]
    '-' 	[reduce using rule 136 (expression)]
    '*' 	[reduce using rule 136 (expression)]
    '/' 	[reduce using rule 136 (expression)]
    '%' 	[reduce using rule 136 (expression)]
    '^' 	[reduce using rule 136 (expression)]
    '|' 	[reduce using rule 136 (expression)]
    '<' 	[reduce using rule 136 (expression)]
    '>' 	[reduce using rule 136 (expression)]
    $default	reduce using rule 136 (expression)



state 185

    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression CMP_GE expression .   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    OR  	[reduce using rule 134 (expression)]
    AND 	[reduce using rule 134 (expression)]
    SUBSTR_EQ	[reduce using rule 134 (expression)]
    SUBSTR_NEQ	[reduce using rule 134 (expression)]
    REGEX_EQ	[reduce using rule 134 (expression)]
    REGEX_NEQ	[reduce using rule 134 (expression)]
    POWER	[reduce using rule 134 (expression)]
    CMP_EQ	[reduce using rule 134 (expression)]
    CMP_GE	[reduce using rule 134 (expression)]
    CMP_LE	[reduce using rule 134 (expression)]
    CMP_NEQ	[reduce using rule 134 (expression)]
    SL  	[reduce using rule 134 (expression)]
    SR  	[reduce using rule 134 (expression)]
    SRR 	[reduce using rule 134 (expression)]
    '&' 	[reduce using rule 134 (expression)]
    '+' 	[reduce using rule 134 (expression)]
    '-' 	[reduce using rule 134 (expression)]
    '*' 	[reduce using rule 134 (expression)]
    '/' 	[reduce using rule 134 (expression)]
    '%' 	[reduce using rule 134 (expression)]
    '^' 	[reduce using rule 134 (expression)]
    '|' 	[reduce using rule 134 (expression)]
    '<' 	[reduce using rule 134 (expression)]
    '>' 	[reduce using rule 134 (expression)]
    $default	reduce using rule 134 (expression)



state 186

    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression CMP_LE expression .   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    OR  	[reduce using rule 135 (expression)]
    AND 	[reduce using rule 135 (expression)]
    SUBSTR_EQ	[reduce using rule 135 (expression)]
    SUBSTR_NEQ	[reduce using rule 135 (expression)]
    REGEX_EQ	[reduce using rule 135 (expression)]
    REGEX_NEQ	[reduce using rule 135 (expression)]
    POWER	[reduce using rule 135 (expression)]
    CMP_EQ	[reduce using rule 135 (expression)]
    CMP_GE	[reduce using rule 135 (expression)]
    CMP_LE	[reduce using rule 135 (expression)]
    CMP_NEQ	[reduce using rule 135 (expression)]
    SL  	[reduce using rule 135 (expression)]
    SR  	[reduce using rule 135 (expression)]
    SRR 	[reduce using rule 135 (expression)]
    '&' 	[reduce using rule 135 (expression)]
    '+' 	[reduce using rule 135 (expression)]
    '-' 	[reduce using rule 135 (expression)]
    '*' 	[reduce using rule 135 (expression)]
    '/' 	[reduce using rule 135 (expression)]
    '%' 	[reduce using rule 135 (expression)]
    '^' 	[reduce using rule 135 (expression)]
    '|' 	[reduce using rule 135 (expression)]
    '<' 	[reduce using rule 135 (expression)]
    '>' 	[reduce using rule 135 (expression)]
    $default	reduce using rule 135 (expression)



state 187

    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)
    expression  ->  expression CMP_NEQ expression .   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    OR  	[reduce using rule 137 (expression)]
    AND 	[reduce using rule 137 (expression)]
    SUBSTR_EQ	[reduce using rule 137 (expression)]
    SUBSTR_NEQ	[reduce using rule 137 (expression)]
    REGEX_EQ	[reduce using rule 137 (expression)]
    REGEX_NEQ	[reduce using rule 137 (expression)]
    POWER	[reduce using rule 137 (expression)]
    CMP_EQ	[reduce using rule 137 (expression)]
    CMP_GE	[reduce using rule 137 (expression)]
    CMP_LE	[reduce using rule 137 (expression)]
    CMP_NEQ	[reduce using rule 137 (expression)]
    SL  	[reduce using rule 137 (expression)]
    SR  	[reduce using rule 137 (expression)]
    SRR 	[reduce using rule 137 (expression)]
    '&' 	[reduce using rule 137 (expression)]
    '+' 	[reduce using rule 137 (expression)]
    '-' 	[reduce using rule 137 (expression)]
    '*' 	[reduce using rule 137 (expression)]
    '/' 	[reduce using rule 137 (expression)]
    '%' 	[reduce using rule 137 (expression)]
    '^' 	[reduce using rule 137 (expression)]
    '|' 	[reduce using rule 137 (expression)]
    '<' 	[reduce using rule 137 (expression)]
    '>' 	[reduce using rule 137 (expression)]
    $default	reduce using rule 137 (expression)



state 188

    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression SL expression .   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    OR  	[reduce using rule 126 (expression)]
    AND 	[reduce using rule 126 (expression)]
    SUBSTR_EQ	[reduce using rule 126 (expression)]
    SUBSTR_NEQ	[reduce using rule 126 (expression)]
    REGEX_EQ	[reduce using rule 126 (expression)]
    REGEX_NEQ	[reduce using rule 126 (expression)]
    POWER	[reduce using rule 126 (expression)]
    CMP_EQ	[reduce using rule 126 (expression)]
    CMP_GE	[reduce using rule 126 (expression)]
    CMP_LE	[reduce using rule 126 (expression)]
    CMP_NEQ	[reduce using rule 126 (expression)]
    SL  	[reduce using rule 126 (expression)]
    SR  	[reduce using rule 126 (expression)]
    SRR 	[reduce using rule 126 (expression)]
    '&' 	[reduce using rule 126 (expression)]
    '+' 	[reduce using rule 126 (expression)]
    '-' 	[reduce using rule 126 (expression)]
    '*' 	[reduce using rule 126 (expression)]
    '/' 	[reduce using rule 126 (expression)]
    '%' 	[reduce using rule 126 (expression)]
    '^' 	[reduce using rule 126 (expression)]
    '|' 	[reduce using rule 126 (expression)]
    '<' 	[reduce using rule 126 (expression)]
    '>' 	[reduce using rule 126 (expression)]
    $default	reduce using rule 126 (expression)



state 189

    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression SR expression .   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    OR  	[reduce using rule 125 (expression)]
    AND 	[reduce using rule 125 (expression)]
    SUBSTR_EQ	[reduce using rule 125 (expression)]
    SUBSTR_NEQ	[reduce using rule 125 (expression)]
    REGEX_EQ	[reduce using rule 125 (expression)]
    REGEX_NEQ	[reduce using rule 125 (expression)]
    POWER	[reduce using rule 125 (expression)]
    CMP_EQ	[reduce using rule 125 (expression)]
    CMP_GE	[reduce using rule 125 (expression)]
    CMP_LE	[reduce using rule 125 (expression)]
    CMP_NEQ	[reduce using rule 125 (expression)]
    SL  	[reduce using rule 125 (expression)]
    SR  	[reduce using rule 125 (expression)]
    SRR 	[reduce using rule 125 (expression)]
    '&' 	[reduce using rule 125 (expression)]
    '+' 	[reduce using rule 125 (expression)]
    '-' 	[reduce using rule 125 (expression)]
    '*' 	[reduce using rule 125 (expression)]
    '/' 	[reduce using rule 125 (expression)]
    '%' 	[reduce using rule 125 (expression)]
    '^' 	[reduce using rule 125 (expression)]
    '|' 	[reduce using rule 125 (expression)]
    '<' 	[reduce using rule 125 (expression)]
    '>' 	[reduce using rule 125 (expression)]
    $default	reduce using rule 125 (expression)



state 190

    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression SRR expression .   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    OR  	[reduce using rule 127 (expression)]
    AND 	[reduce using rule 127 (expression)]
    SUBSTR_EQ	[reduce using rule 127 (expression)]
    SUBSTR_NEQ	[reduce using rule 127 (expression)]
    REGEX_EQ	[reduce using rule 127 (expression)]
    REGEX_NEQ	[reduce using rule 127 (expression)]
    POWER	[reduce using rule 127 (expression)]
    CMP_EQ	[reduce using rule 127 (expression)]
    CMP_GE	[reduce using rule 127 (expression)]
    CMP_LE	[reduce using rule 127 (expression)]
    CMP_NEQ	[reduce using rule 127 (expression)]
    SL  	[reduce using rule 127 (expression)]
    SR  	[reduce using rule 127 (expression)]
    SRR 	[reduce using rule 127 (expression)]
    '&' 	[reduce using rule 127 (expression)]
    '+' 	[reduce using rule 127 (expression)]
    '-' 	[reduce using rule 127 (expression)]
    '*' 	[reduce using rule 127 (expression)]
    '/' 	[reduce using rule 127 (expression)]
    '%' 	[reduce using rule 127 (expression)]
    '^' 	[reduce using rule 127 (expression)]
    '|' 	[reduce using rule 127 (expression)]
    '<' 	[reduce using rule 127 (expression)]
    '>' 	[reduce using rule 127 (expression)]
    $default	reduce using rule 127 (expression)



state 191

    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression '&' expression .   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    OR  	[reduce using rule 122 (expression)]
    AND 	[reduce using rule 122 (expression)]
    SUBSTR_EQ	[reduce using rule 122 (expression)]
    SUBSTR_NEQ	[reduce using rule 122 (expression)]
    REGEX_EQ	[reduce using rule 122 (expression)]
    REGEX_NEQ	[reduce using rule 122 (expression)]
    POWER	[reduce using rule 122 (expression)]
    CMP_EQ	[reduce using rule 122 (expression)]
    CMP_GE	[reduce using rule 122 (expression)]
    CMP_LE	[reduce using rule 122 (expression)]
    CMP_NEQ	[reduce using rule 122 (expression)]
    SL  	[reduce using rule 122 (expression)]
    SR  	[reduce using rule 122 (expression)]
    SRR 	[reduce using rule 122 (expression)]
    '&' 	[reduce using rule 122 (expression)]
    '+' 	[reduce using rule 122 (expression)]
    '-' 	[reduce using rule 122 (expression)]
    '*' 	[reduce using rule 122 (expression)]
    '/' 	[reduce using rule 122 (expression)]
    '%' 	[reduce using rule 122 (expression)]
    '^' 	[reduce using rule 122 (expression)]
    '|' 	[reduce using rule 122 (expression)]
    '<' 	[reduce using rule 122 (expression)]
    '>' 	[reduce using rule 122 (expression)]
    $default	reduce using rule 122 (expression)



state 192

    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression '+' expression .   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    OR  	[reduce using rule 115 (expression)]
    AND 	[reduce using rule 115 (expression)]
    SUBSTR_EQ	[reduce using rule 115 (expression)]
    SUBSTR_NEQ	[reduce using rule 115 (expression)]
    REGEX_EQ	[reduce using rule 115 (expression)]
    REGEX_NEQ	[reduce using rule 115 (expression)]
    POWER	[reduce using rule 115 (expression)]
    CMP_EQ	[reduce using rule 115 (expression)]
    CMP_GE	[reduce using rule 115 (expression)]
    CMP_LE	[reduce using rule 115 (expression)]
    CMP_NEQ	[reduce using rule 115 (expression)]
    SL  	[reduce using rule 115 (expression)]
    SR  	[reduce using rule 115 (expression)]
    SRR 	[reduce using rule 115 (expression)]
    '&' 	[reduce using rule 115 (expression)]
    '+' 	[reduce using rule 115 (expression)]
    '-' 	[reduce using rule 115 (expression)]
    '*' 	[reduce using rule 115 (expression)]
    '/' 	[reduce using rule 115 (expression)]
    '%' 	[reduce using rule 115 (expression)]
    '^' 	[reduce using rule 115 (expression)]
    '|' 	[reduce using rule 115 (expression)]
    '<' 	[reduce using rule 115 (expression)]
    '>' 	[reduce using rule 115 (expression)]
    $default	reduce using rule 115 (expression)



state 193

    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression '-' expression .   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    OR  	[reduce using rule 116 (expression)]
    AND 	[reduce using rule 116 (expression)]
    SUBSTR_EQ	[reduce using rule 116 (expression)]
    SUBSTR_NEQ	[reduce using rule 116 (expression)]
    REGEX_EQ	[reduce using rule 116 (expression)]
    REGEX_NEQ	[reduce using rule 116 (expression)]
    POWER	[reduce using rule 116 (expression)]
    CMP_EQ	[reduce using rule 116 (expression)]
    CMP_GE	[reduce using rule 116 (expression)]
    CMP_LE	[reduce using rule 116 (expression)]
    CMP_NEQ	[reduce using rule 116 (expression)]
    SL  	[reduce using rule 116 (expression)]
    SR  	[reduce using rule 116 (expression)]
    SRR 	[reduce using rule 116 (expression)]
    '&' 	[reduce using rule 116 (expression)]
    '+' 	[reduce using rule 116 (expression)]
    '-' 	[reduce using rule 116 (expression)]
    '*' 	[reduce using rule 116 (expression)]
    '/' 	[reduce using rule 116 (expression)]
    '%' 	[reduce using rule 116 (expression)]
    '^' 	[reduce using rule 116 (expression)]
    '|' 	[reduce using rule 116 (expression)]
    '<' 	[reduce using rule 116 (expression)]
    '>' 	[reduce using rule 116 (expression)]
    $default	reduce using rule 116 (expression)



state 194

    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression '*' expression .   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    OR  	[reduce using rule 118 (expression)]
    AND 	[reduce using rule 118 (expression)]
    SUBSTR_EQ	[reduce using rule 118 (expression)]
    SUBSTR_NEQ	[reduce using rule 118 (expression)]
    REGEX_EQ	[reduce using rule 118 (expression)]
    REGEX_NEQ	[reduce using rule 118 (expression)]
    POWER	[reduce using rule 118 (expression)]
    CMP_EQ	[reduce using rule 118 (expression)]
    CMP_GE	[reduce using rule 118 (expression)]
    CMP_LE	[reduce using rule 118 (expression)]
    CMP_NEQ	[reduce using rule 118 (expression)]
    SL  	[reduce using rule 118 (expression)]
    SR  	[reduce using rule 118 (expression)]
    SRR 	[reduce using rule 118 (expression)]
    '&' 	[reduce using rule 118 (expression)]
    '+' 	[reduce using rule 118 (expression)]
    '-' 	[reduce using rule 118 (expression)]
    '*' 	[reduce using rule 118 (expression)]
    '/' 	[reduce using rule 118 (expression)]
    '%' 	[reduce using rule 118 (expression)]
    '^' 	[reduce using rule 118 (expression)]
    '|' 	[reduce using rule 118 (expression)]
    '<' 	[reduce using rule 118 (expression)]
    '>' 	[reduce using rule 118 (expression)]
    $default	reduce using rule 118 (expression)



state 195

    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression '/' expression .   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    OR  	[reduce using rule 120 (expression)]
    AND 	[reduce using rule 120 (expression)]
    SUBSTR_EQ	[reduce using rule 120 (expression)]
    SUBSTR_NEQ	[reduce using rule 120 (expression)]
    REGEX_EQ	[reduce using rule 120 (expression)]
    REGEX_NEQ	[reduce using rule 120 (expression)]
    POWER	[reduce using rule 120 (expression)]
    CMP_EQ	[reduce using rule 120 (expression)]
    CMP_GE	[reduce using rule 120 (expression)]
    CMP_LE	[reduce using rule 120 (expression)]
    CMP_NEQ	[reduce using rule 120 (expression)]
    SL  	[reduce using rule 120 (expression)]
    SR  	[reduce using rule 120 (expression)]
    SRR 	[reduce using rule 120 (expression)]
    '&' 	[reduce using rule 120 (expression)]
    '+' 	[reduce using rule 120 (expression)]
    '-' 	[reduce using rule 120 (expression)]
    '*' 	[reduce using rule 120 (expression)]
    '/' 	[reduce using rule 120 (expression)]
    '%' 	[reduce using rule 120 (expression)]
    '^' 	[reduce using rule 120 (expression)]
    '|' 	[reduce using rule 120 (expression)]
    '<' 	[reduce using rule 120 (expression)]
    '>' 	[reduce using rule 120 (expression)]
    $default	reduce using rule 120 (expression)



state 196

    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression '%' expression .   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    OR  	[reduce using rule 121 (expression)]
    AND 	[reduce using rule 121 (expression)]
    SUBSTR_EQ	[reduce using rule 121 (expression)]
    SUBSTR_NEQ	[reduce using rule 121 (expression)]
    REGEX_EQ	[reduce using rule 121 (expression)]
    REGEX_NEQ	[reduce using rule 121 (expression)]
    POWER	[reduce using rule 121 (expression)]
    CMP_EQ	[reduce using rule 121 (expression)]
    CMP_GE	[reduce using rule 121 (expression)]
    CMP_LE	[reduce using rule 121 (expression)]
    CMP_NEQ	[reduce using rule 121 (expression)]
    SL  	[reduce using rule 121 (expression)]
    SR  	[reduce using rule 121 (expression)]
    SRR 	[reduce using rule 121 (expression)]
    '&' 	[reduce using rule 121 (expression)]
    '+' 	[reduce using rule 121 (expression)]
    '-' 	[reduce using rule 121 (expression)]
    '*' 	[reduce using rule 121 (expression)]
    '/' 	[reduce using rule 121 (expression)]
    '%' 	[reduce using rule 121 (expression)]
    '^' 	[reduce using rule 121 (expression)]
    '|' 	[reduce using rule 121 (expression)]
    '<' 	[reduce using rule 121 (expression)]
    '>' 	[reduce using rule 121 (expression)]
    $default	reduce using rule 121 (expression)



state 197

    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression '^' expression .   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    OR  	[reduce using rule 123 (expression)]
    AND 	[reduce using rule 123 (expression)]
    SUBSTR_EQ	[reduce using rule 123 (expression)]
    SUBSTR_NEQ	[reduce using rule 123 (expression)]
    REGEX_EQ	[reduce using rule 123 (expression)]
    REGEX_NEQ	[reduce using rule 123 (expression)]
    POWER	[reduce using rule 123 (expression)]
    CMP_EQ	[reduce using rule 123 (expression)]
    CMP_GE	[reduce using rule 123 (expression)]
    CMP_LE	[reduce using rule 123 (expression)]
    CMP_NEQ	[reduce using rule 123 (expression)]
    SL  	[reduce using rule 123 (expression)]
    SR  	[reduce using rule 123 (expression)]
    SRR 	[reduce using rule 123 (expression)]
    '&' 	[reduce using rule 123 (expression)]
    '+' 	[reduce using rule 123 (expression)]
    '-' 	[reduce using rule 123 (expression)]
    '*' 	[reduce using rule 123 (expression)]
    '/' 	[reduce using rule 123 (expression)]
    '%' 	[reduce using rule 123 (expression)]
    '^' 	[reduce using rule 123 (expression)]
    '|' 	[reduce using rule 123 (expression)]
    '<' 	[reduce using rule 123 (expression)]
    '>' 	[reduce using rule 123 (expression)]
    $default	reduce using rule 123 (expression)



state 198

    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression '|' expression .   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    OR  	[reduce using rule 124 (expression)]
    AND 	[reduce using rule 124 (expression)]
    SUBSTR_EQ	[reduce using rule 124 (expression)]
    SUBSTR_NEQ	[reduce using rule 124 (expression)]
    REGEX_EQ	[reduce using rule 124 (expression)]
    REGEX_NEQ	[reduce using rule 124 (expression)]
    POWER	[reduce using rule 124 (expression)]
    CMP_EQ	[reduce using rule 124 (expression)]
    CMP_GE	[reduce using rule 124 (expression)]
    CMP_LE	[reduce using rule 124 (expression)]
    CMP_NEQ	[reduce using rule 124 (expression)]
    SL  	[reduce using rule 124 (expression)]
    SR  	[reduce using rule 124 (expression)]
    SRR 	[reduce using rule 124 (expression)]
    '&' 	[reduce using rule 124 (expression)]
    '+' 	[reduce using rule 124 (expression)]
    '-' 	[reduce using rule 124 (expression)]
    '*' 	[reduce using rule 124 (expression)]
    '/' 	[reduce using rule 124 (expression)]
    '%' 	[reduce using rule 124 (expression)]
    '^' 	[reduce using rule 124 (expression)]
    '|' 	[reduce using rule 124 (expression)]
    '<' 	[reduce using rule 124 (expression)]
    '>' 	[reduce using rule 124 (expression)]
    $default	reduce using rule 124 (expression)



state 199

    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression '<' expression .   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    OR  	[reduce using rule 132 (expression)]
    AND 	[reduce using rule 132 (expression)]
    SUBSTR_EQ	[reduce using rule 132 (expression)]
    SUBSTR_NEQ	[reduce using rule 132 (expression)]
    REGEX_EQ	[reduce using rule 132 (expression)]
    REGEX_NEQ	[reduce using rule 132 (expression)]
    POWER	[reduce using rule 132 (expression)]
    CMP_EQ	[reduce using rule 132 (expression)]
    CMP_GE	[reduce using rule 132 (expression)]
    CMP_LE	[reduce using rule 132 (expression)]
    CMP_NEQ	[reduce using rule 132 (expression)]
    SL  	[reduce using rule 132 (expression)]
    SR  	[reduce using rule 132 (expression)]
    SRR 	[reduce using rule 132 (expression)]
    '&' 	[reduce using rule 132 (expression)]
    '+' 	[reduce using rule 132 (expression)]
    '-' 	[reduce using rule 132 (expression)]
    '*' 	[reduce using rule 132 (expression)]
    '/' 	[reduce using rule 132 (expression)]
    '%' 	[reduce using rule 132 (expression)]
    '^' 	[reduce using rule 132 (expression)]
    '|' 	[reduce using rule 132 (expression)]
    '<' 	[reduce using rule 132 (expression)]
    '>' 	[reduce using rule 132 (expression)]
    $default	reduce using rule 132 (expression)



state 200

    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression '>' expression .   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    OR  	[reduce using rule 133 (expression)]
    AND 	[reduce using rule 133 (expression)]
    SUBSTR_EQ	[reduce using rule 133 (expression)]
    SUBSTR_NEQ	[reduce using rule 133 (expression)]
    REGEX_EQ	[reduce using rule 133 (expression)]
    REGEX_NEQ	[reduce using rule 133 (expression)]
    POWER	[reduce using rule 133 (expression)]
    CMP_EQ	[reduce using rule 133 (expression)]
    CMP_GE	[reduce using rule 133 (expression)]
    CMP_LE	[reduce using rule 133 (expression)]
    CMP_NEQ	[reduce using rule 133 (expression)]
    SL  	[reduce using rule 133 (expression)]
    SR  	[reduce using rule 133 (expression)]
    SRR 	[reduce using rule 133 (expression)]
    '&' 	[reduce using rule 133 (expression)]
    '+' 	[reduce using rule 133 (expression)]
    '-' 	[reduce using rule 133 (expression)]
    '*' 	[reduce using rule 133 (expression)]
    '/' 	[reduce using rule 133 (expression)]
    '%' 	[reduce using rule 133 (expression)]
    '^' 	[reduce using rule 133 (expression)]
    '|' 	[reduce using rule 133 (expression)]
    '<' 	[reduce using rule 133 (expression)]
    '>' 	[reduce using rule 133 (expression)]
    $default	reduce using rule 133 (expression)



state 201

    for_loop  ->  FOR '(' expression ';' . expression ';' expression ')' block   (rule 74)
    for_loop  ->  FOR '(' expression ';' . expression ';' expression ')' command   (rule 75)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 223



state 202

    foreach_loop  ->  FOREACH '(' identifier IN_ITER . expression ')' block   (rule 78)
    foreach_loop  ->  FOREACH '(' identifier IN_ITER . expression ')' command   (rule 79)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 224



state 203

    foreach_loop  ->  FOREACH identifier '(' expression . ')' block   (rule 76)
    foreach_loop  ->  FOREACH identifier '(' expression . ')' command   (rule 77)
    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    ')' 	shift, and go to state 225
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127



state 204

    while_loop  ->  WHILE '(' expression ')' . block   (rule 82)
    while_loop  ->  WHILE '(' expression ')' . command   (rule 83)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20
    '{' 	shift, and go to state 74
    '[' 	shift, and go to state 75

    LOCAL	[reduce using rule 90 (block)]
    GLOBAL	[reduce using rule 90 (block)]
    IF  	[reduce using rule 90 (block)]
    INCLUDE	[reduce using rule 90 (block)]
    IMPORT	[reduce using rule 90 (block)]
    RETURN	[reduce using rule 90 (block)]
    BREAK	[reduce using rule 90 (block)]
    CONTINUE	[reduce using rule 90 (block)]
    FOR 	[reduce using rule 90 (block)]
    FOREACH	[reduce using rule 90 (block)]
    IN_ITER	[reduce using rule 90 (block)]
    WHILE	[reduce using rule 90 (block)]
    REPEAT	[reduce using rule 90 (block)]
    IDENT	[reduce using rule 90 (block)]
    DEC 	[reduce using rule 90 (block)]
    INC 	[reduce using rule 90 (block)]
    ';' 	[reduce using rule 90 (block)]
    $default	reduce using rule 90 (block)

    command	go to state 226
    simple	go to state 25
    break	go to state 26
    continue	go to state 27
    import	go to state 28
    include	go to state 29
    return	go to state 30
    empty	go to state 31
    global	go to state 32
    local	go to state 33
    rep 	go to state 34
    call_function	go to state 35
    assign	go to state 36
    inc_dec_exp	go to state 37
    assign_math_op	go to state 38
    assign_shift_op	go to state 39
    identifier	go to state 40
    compound	go to state 41
    for_loop	go to state 42
    foreach_loop	go to state 43
    repeat_loop	go to state 44
    while_loop	go to state 45
    if_cond	go to state 46
    block	go to state 227



state 205

    ref  ->  '@' IDENT .   (rule 68)

    $default	reduce using rule 68 (ref)



state 206

    block  ->  '{' line '}' .   (rule 92)

    $default	reduce using rule 92 (block)



state 207

    argument  ->  identifier ':' . expression   (rule 107)
    argument  ->  identifier ':' . ref   (rule 108)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '@' 	shift, and go to state 132
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    ref 	go to state 228
    expression	go to state 229



state 208

    argument  ->  integer ':' . expression   (rule 104)
    argument  ->  integer ':' . ref   (rule 106)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '@' 	shift, and go to state 132
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    ref 	go to state 230
    expression	go to state 231



state 209

    argument  ->  string ':' . expression   (rule 103)
    argument  ->  string ':' . ref   (rule 105)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '@' 	shift, and go to state 132
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    ref 	go to state 232
    expression	go to state 233



state 210

    argument_list  ->  argument_list ',' . argument   (rule 101)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '@' 	shift, and go to state 132
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    identifier	go to state 143
    integer	go to state 136
    string	go to state 137
    ip  	go to state 67
    null	go to state 68
    ref 	go to state 138
    argument	go to state 234
    expression	go to state 141



state 211

    block  ->  '{' argument_list '}' .   (rule 93)

    $default	reduce using rule 93 (block)



state 212

    block  ->  '[' argument_list ']' .   (rule 95)

    $default	reduce using rule 95 (block)



state 213

    repeat_loop  ->  REPEAT command UNTIL expression . ';'   (rule 81)
    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    ';' 	shift, and go to state 235
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127



state 214

    repeat_loop  ->  REPEAT block UNTIL expression . ';'   (rule 80)
    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    ';' 	shift, and go to state 236
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127



state 215

    parameter  ->  '&' identifier .   (rule 13)

    $default	reduce using rule 13 (parameter)



state 216

    call_function  ->  identifier '(' parameters ')' .   (rule 40)

    $default	reduce using rule 40 (call_function)



state 217

    parameters  ->  parameter ',' . parameters   (rule 10)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    '&' 	shift, and go to state 160

    parameters	go to state 237
    parameter	go to state 162
    assign	go to state 163
    assign_math_op	go to state 38
    assign_shift_op	go to state 39
    identifier	go to state 164



state 218

    function  ->  FUNCTION identifier '(' ')' block .   (rule 9)

    $default	reduce using rule 9 (function)



state 219

    function  ->  FUNCTION identifier '(' parameters ')' . block   (rule 8)

    '{' 	shift, and go to state 74
    '[' 	shift, and go to state 75

    $default	reduce using rule 90 (block)

    block	go to state 238



state 220

    if_cond  ->  IF '(' expression ')' command .   (rule 85)
    if_cond  ->  IF '(' expression ')' command . ELSE block   (rule 88)
    if_cond  ->  IF '(' expression ')' command . ELSE command   (rule 89)

    ELSE	shift, and go to state 239

    ELSE	[reduce using rule 85 (if_cond)]
    $default	reduce using rule 85 (if_cond)



state 221

    if_cond  ->  IF '(' expression ')' block .   (rule 84)
    if_cond  ->  IF '(' expression ')' block . ELSE command   (rule 86)
    if_cond  ->  IF '(' expression ')' block . ELSE block   (rule 87)

    ELSE	shift, and go to state 240

    ELSE	[reduce using rule 84 (if_cond)]
    $default	reduce using rule 84 (if_cond)



state 222

    ip  ->  integer '.' integer '.' . integer '.' integer   (rule 66)

    INT 	shift, and go to state 56
    FALSE	shift, and go to state 58
    TRUE	shift, and go to state 60

    integer	go to state 241



state 223

    for_loop  ->  FOR '(' expression ';' expression . ';' expression ')' block   (rule 74)
    for_loop  ->  FOR '(' expression ';' expression . ';' expression ')' command   (rule 75)
    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    ';' 	shift, and go to state 242
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127



state 224

    foreach_loop  ->  FOREACH '(' identifier IN_ITER expression . ')' block   (rule 78)
    foreach_loop  ->  FOREACH '(' identifier IN_ITER expression . ')' command   (rule 79)
    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    ')' 	shift, and go to state 243
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127



state 225

    foreach_loop  ->  FOREACH identifier '(' expression ')' . block   (rule 76)
    foreach_loop  ->  FOREACH identifier '(' expression ')' . command   (rule 77)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20
    '{' 	shift, and go to state 74
    '[' 	shift, and go to state 75

    LOCAL	[reduce using rule 90 (block)]
    GLOBAL	[reduce using rule 90 (block)]
    IF  	[reduce using rule 90 (block)]
    INCLUDE	[reduce using rule 90 (block)]
    IMPORT	[reduce using rule 90 (block)]
    RETURN	[reduce using rule 90 (block)]
    BREAK	[reduce using rule 90 (block)]
    CONTINUE	[reduce using rule 90 (block)]
    FOR 	[reduce using rule 90 (block)]
    FOREACH	[reduce using rule 90 (block)]
    IN_ITER	[reduce using rule 90 (block)]
    WHILE	[reduce using rule 90 (block)]
    REPEAT	[reduce using rule 90 (block)]
    IDENT	[reduce using rule 90 (block)]
    DEC 	[reduce using rule 90 (block)]
    INC 	[reduce using rule 90 (block)]
    ';' 	[reduce using rule 90 (block)]
    $default	reduce using rule 90 (block)

    command	go to state 244
    simple	go to state 25
    break	go to state 26
    continue	go to state 27
    import	go to state 28
    include	go to state 29
    return	go to state 30
    empty	go to state 31
    global	go to state 32
    local	go to state 33
    rep 	go to state 34
    call_function	go to state 35
    assign	go to state 36
    inc_dec_exp	go to state 37
    assign_math_op	go to state 38
    assign_shift_op	go to state 39
    identifier	go to state 40
    compound	go to state 41
    for_loop	go to state 42
    foreach_loop	go to state 43
    repeat_loop	go to state 44
    while_loop	go to state 45
    if_cond	go to state 46
    block	go to state 245



state 226

    while_loop  ->  WHILE '(' expression ')' command .   (rule 83)

    $default	reduce using rule 83 (while_loop)



state 227

    while_loop  ->  WHILE '(' expression ')' block .   (rule 82)

    $default	reduce using rule 82 (while_loop)



state 228

    argument  ->  identifier ':' ref .   (rule 108)

    $default	reduce using rule 108 (argument)



state 229

    argument  ->  identifier ':' expression .   (rule 107)
    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    $default	reduce using rule 107 (argument)



state 230

    argument  ->  integer ':' ref .   (rule 106)

    $default	reduce using rule 106 (argument)



state 231

    argument  ->  integer ':' expression .   (rule 104)
    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    $default	reduce using rule 104 (argument)



state 232

    argument  ->  string ':' ref .   (rule 105)

    $default	reduce using rule 105 (argument)



state 233

    argument  ->  string ':' expression .   (rule 103)
    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127

    $default	reduce using rule 103 (argument)



state 234

    argument_list  ->  argument_list ',' argument .   (rule 101)

    $default	reduce using rule 101 (argument_list)



state 235

    repeat_loop  ->  REPEAT command UNTIL expression ';' .   (rule 81)

    $default	reduce using rule 81 (repeat_loop)



state 236

    repeat_loop  ->  REPEAT block UNTIL expression ';' .   (rule 80)

    $default	reduce using rule 80 (repeat_loop)



state 237

    parameters  ->  parameter ',' parameters .   (rule 10)

    $default	reduce using rule 10 (parameters)



state 238

    function  ->  FUNCTION identifier '(' parameters ')' block .   (rule 8)

    $default	reduce using rule 8 (function)



state 239

    if_cond  ->  IF '(' expression ')' command ELSE . block   (rule 88)
    if_cond  ->  IF '(' expression ')' command ELSE . command   (rule 89)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20
    '{' 	shift, and go to state 74
    '[' 	shift, and go to state 75

    LOCAL	[reduce using rule 90 (block)]
    GLOBAL	[reduce using rule 90 (block)]
    IF  	[reduce using rule 90 (block)]
    INCLUDE	[reduce using rule 90 (block)]
    IMPORT	[reduce using rule 90 (block)]
    RETURN	[reduce using rule 90 (block)]
    BREAK	[reduce using rule 90 (block)]
    CONTINUE	[reduce using rule 90 (block)]
    FOR 	[reduce using rule 90 (block)]
    FOREACH	[reduce using rule 90 (block)]
    IN_ITER	[reduce using rule 90 (block)]
    WHILE	[reduce using rule 90 (block)]
    REPEAT	[reduce using rule 90 (block)]
    IDENT	[reduce using rule 90 (block)]
    DEC 	[reduce using rule 90 (block)]
    INC 	[reduce using rule 90 (block)]
    ';' 	[reduce using rule 90 (block)]
    $default	reduce using rule 90 (block)

    command	go to state 246
    simple	go to state 25
    break	go to state 26
    continue	go to state 27
    import	go to state 28
    include	go to state 29
    return	go to state 30
    empty	go to state 31
    global	go to state 32
    local	go to state 33
    rep 	go to state 34
    call_function	go to state 35
    assign	go to state 36
    inc_dec_exp	go to state 37
    assign_math_op	go to state 38
    assign_shift_op	go to state 39
    identifier	go to state 40
    compound	go to state 41
    for_loop	go to state 42
    foreach_loop	go to state 43
    repeat_loop	go to state 44
    while_loop	go to state 45
    if_cond	go to state 46
    block	go to state 247



state 240

    if_cond  ->  IF '(' expression ')' block ELSE . command   (rule 86)
    if_cond  ->  IF '(' expression ')' block ELSE . block   (rule 87)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20
    '{' 	shift, and go to state 74
    '[' 	shift, and go to state 75

    LOCAL	[reduce using rule 90 (block)]
    GLOBAL	[reduce using rule 90 (block)]
    IF  	[reduce using rule 90 (block)]
    INCLUDE	[reduce using rule 90 (block)]
    IMPORT	[reduce using rule 90 (block)]
    RETURN	[reduce using rule 90 (block)]
    BREAK	[reduce using rule 90 (block)]
    CONTINUE	[reduce using rule 90 (block)]
    FOR 	[reduce using rule 90 (block)]
    FOREACH	[reduce using rule 90 (block)]
    IN_ITER	[reduce using rule 90 (block)]
    WHILE	[reduce using rule 90 (block)]
    REPEAT	[reduce using rule 90 (block)]
    IDENT	[reduce using rule 90 (block)]
    DEC 	[reduce using rule 90 (block)]
    INC 	[reduce using rule 90 (block)]
    ';' 	[reduce using rule 90 (block)]
    $default	reduce using rule 90 (block)

    command	go to state 248
    simple	go to state 25
    break	go to state 26
    continue	go to state 27
    import	go to state 28
    include	go to state 29
    return	go to state 30
    empty	go to state 31
    global	go to state 32
    local	go to state 33
    rep 	go to state 34
    call_function	go to state 35
    assign	go to state 36
    inc_dec_exp	go to state 37
    assign_math_op	go to state 38
    assign_shift_op	go to state 39
    identifier	go to state 40
    compound	go to state 41
    for_loop	go to state 42
    foreach_loop	go to state 43
    repeat_loop	go to state 44
    while_loop	go to state 45
    if_cond	go to state 46
    block	go to state 249



state 241

    ip  ->  integer '.' integer '.' integer . '.' integer   (rule 66)

    '.' 	shift, and go to state 250



state 242

    for_loop  ->  FOR '(' expression ';' expression ';' . expression ')' block   (rule 74)
    for_loop  ->  FOR '(' expression ';' expression ';' . expression ')' command   (rule 75)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    NULL	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 251



state 243

    foreach_loop  ->  FOREACH '(' identifier IN_ITER expression ')' . block   (rule 78)
    foreach_loop  ->  FOREACH '(' identifier IN_ITER expression ')' . command   (rule 79)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20
    '{' 	shift, and go to state 74
    '[' 	shift, and go to state 75

    LOCAL	[reduce using rule 90 (block)]
    GLOBAL	[reduce using rule 90 (block)]
    IF  	[reduce using rule 90 (block)]
    INCLUDE	[reduce using rule 90 (block)]
    IMPORT	[reduce using rule 90 (block)]
    RETURN	[reduce using rule 90 (block)]
    BREAK	[reduce using rule 90 (block)]
    CONTINUE	[reduce using rule 90 (block)]
    FOR 	[reduce using rule 90 (block)]
    FOREACH	[reduce using rule 90 (block)]
    IN_ITER	[reduce using rule 90 (block)]
    WHILE	[reduce using rule 90 (block)]
    REPEAT	[reduce using rule 90 (block)]
    IDENT	[reduce using rule 90 (block)]
    DEC 	[reduce using rule 90 (block)]
    INC 	[reduce using rule 90 (block)]
    ';' 	[reduce using rule 90 (block)]
    $default	reduce using rule 90 (block)

    command	go to state 252
    simple	go to state 25
    break	go to state 26
    continue	go to state 27
    import	go to state 28
    include	go to state 29
    return	go to state 30
    empty	go to state 31
    global	go to state 32
    local	go to state 33
    rep 	go to state 34
    call_function	go to state 35
    assign	go to state 36
    inc_dec_exp	go to state 37
    assign_math_op	go to state 38
    assign_shift_op	go to state 39
    identifier	go to state 40
    compound	go to state 41
    for_loop	go to state 42
    foreach_loop	go to state 43
    repeat_loop	go to state 44
    while_loop	go to state 45
    if_cond	go to state 46
    block	go to state 253



state 244

    foreach_loop  ->  FOREACH identifier '(' expression ')' command .   (rule 77)

    $default	reduce using rule 77 (foreach_loop)



state 245

    foreach_loop  ->  FOREACH identifier '(' expression ')' block .   (rule 76)

    $default	reduce using rule 76 (foreach_loop)



state 246

    if_cond  ->  IF '(' expression ')' command ELSE command .   (rule 89)

    $default	reduce using rule 89 (if_cond)



state 247

    if_cond  ->  IF '(' expression ')' command ELSE block .   (rule 88)

    $default	reduce using rule 88 (if_cond)



state 248

    if_cond  ->  IF '(' expression ')' block ELSE command .   (rule 86)

    $default	reduce using rule 86 (if_cond)



state 249

    if_cond  ->  IF '(' expression ')' block ELSE block .   (rule 87)

    $default	reduce using rule 87 (if_cond)



state 250

    ip  ->  integer '.' integer '.' integer '.' . integer   (rule 66)

    INT 	shift, and go to state 56
    FALSE	shift, and go to state 58
    TRUE	shift, and go to state 60

    integer	go to state 254



state 251

    for_loop  ->  FOR '(' expression ';' expression ';' expression . ')' block   (rule 74)
    for_loop  ->  FOR '(' expression ';' expression ';' expression . ')' command   (rule 75)
    expression  ->  expression . AND expression   (rule 112)
    expression  ->  expression . OR expression   (rule 114)
    expression  ->  expression . '+' expression   (rule 115)
    expression  ->  expression . '-' expression   (rule 116)
    expression  ->  expression . '*' expression   (rule 118)
    expression  ->  expression . POWER expression   (rule 119)
    expression  ->  expression . '/' expression   (rule 120)
    expression  ->  expression . '%' expression   (rule 121)
    expression  ->  expression . '&' expression   (rule 122)
    expression  ->  expression . '^' expression   (rule 123)
    expression  ->  expression . '|' expression   (rule 124)
    expression  ->  expression . SR expression   (rule 125)
    expression  ->  expression . SL expression   (rule 126)
    expression  ->  expression . SRR expression   (rule 127)
    expression  ->  expression . SUBSTR_EQ expression   (rule 128)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 129)
    expression  ->  expression . REGEX_NEQ expression   (rule 130)
    expression  ->  expression . REGEX_EQ expression   (rule 131)
    expression  ->  expression . '<' expression   (rule 132)
    expression  ->  expression . '>' expression   (rule 133)
    expression  ->  expression . CMP_GE expression   (rule 134)
    expression  ->  expression . CMP_LE expression   (rule 135)
    expression  ->  expression . CMP_EQ expression   (rule 136)
    expression  ->  expression . CMP_NEQ expression   (rule 137)

    OR  	shift, and go to state 104
    AND 	shift, and go to state 105
    SUBSTR_EQ	shift, and go to state 106
    SUBSTR_NEQ	shift, and go to state 107
    REGEX_EQ	shift, and go to state 108
    REGEX_NEQ	shift, and go to state 109
    POWER	shift, and go to state 110
    CMP_EQ	shift, and go to state 111
    CMP_GE	shift, and go to state 112
    CMP_LE	shift, and go to state 113
    CMP_NEQ	shift, and go to state 114
    SL  	shift, and go to state 115
    SR  	shift, and go to state 116
    SRR 	shift, and go to state 117
    ')' 	shift, and go to state 255
    '&' 	shift, and go to state 118
    '+' 	shift, and go to state 119
    '-' 	shift, and go to state 120
    '*' 	shift, and go to state 121
    '/' 	shift, and go to state 122
    '%' 	shift, and go to state 123
    '^' 	shift, and go to state 124
    '|' 	shift, and go to state 125
    '<' 	shift, and go to state 126
    '>' 	shift, and go to state 127



state 252

    foreach_loop  ->  FOREACH '(' identifier IN_ITER expression ')' command .   (rule 79)

    $default	reduce using rule 79 (foreach_loop)



state 253

    foreach_loop  ->  FOREACH '(' identifier IN_ITER expression ')' block .   (rule 78)

    $default	reduce using rule 78 (foreach_loop)



state 254

    ip  ->  integer '.' integer '.' integer '.' integer .   (rule 66)

    $default	reduce using rule 66 (ip)



state 255

    for_loop  ->  FOR '(' expression ';' expression ';' expression ')' . block   (rule 74)
    for_loop  ->  FOR '(' expression ';' expression ';' expression ')' . command   (rule 75)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20
    '{' 	shift, and go to state 74
    '[' 	shift, and go to state 75

    LOCAL	[reduce using rule 90 (block)]
    GLOBAL	[reduce using rule 90 (block)]
    IF  	[reduce using rule 90 (block)]
    INCLUDE	[reduce using rule 90 (block)]
    IMPORT	[reduce using rule 90 (block)]
    RETURN	[reduce using rule 90 (block)]
    BREAK	[reduce using rule 90 (block)]
    CONTINUE	[reduce using rule 90 (block)]
    FOR 	[reduce using rule 90 (block)]
    FOREACH	[reduce using rule 90 (block)]
    IN_ITER	[reduce using rule 90 (block)]
    WHILE	[reduce using rule 90 (block)]
    REPEAT	[reduce using rule 90 (block)]
    IDENT	[reduce using rule 90 (block)]
    DEC 	[reduce using rule 90 (block)]
    INC 	[reduce using rule 90 (block)]
    ';' 	[reduce using rule 90 (block)]
    $default	reduce using rule 90 (block)

    command	go to state 256
    simple	go to state 25
    break	go to state 26
    continue	go to state 27
    import	go to state 28
    include	go to state 29
    return	go to state 30
    empty	go to state 31
    global	go to state 32
    local	go to state 33
    rep 	go to state 34
    call_function	go to state 35
    assign	go to state 36
    inc_dec_exp	go to state 37
    assign_math_op	go to state 38
    assign_shift_op	go to state 39
    identifier	go to state 40
    compound	go to state 41
    for_loop	go to state 42
    foreach_loop	go to state 43
    repeat_loop	go to state 44
    while_loop	go to state 45
    if_cond	go to state 46
    block	go to state 257



state 256

    for_loop  ->  FOR '(' expression ';' expression ';' expression ')' command .   (rule 75)

    $default	reduce using rule 75 (for_loop)



state 257

    for_loop  ->  FOR '(' expression ';' expression ';' expression ')' block .   (rule 74)

    $default	reduce using rule 74 (for_loop)



state 258

    $   	go to state 259



state 259

    $   	go to state 260



state 260

    $default	accept
