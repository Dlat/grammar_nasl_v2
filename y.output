State 9 contains 1 shift/reduce conflict.
State 52 contains 1 shift/reduce conflict.
State 61 contains 1 shift/reduce conflict.
State 63 contains 1 shift/reduce conflict.
State 64 contains 1 shift/reduce conflict.
State 72 contains 1 shift/reduce conflict.
State 75 contains 1 shift/reduce conflict.
State 76 contains 2 shift/reduce conflicts.
State 77 contains 2 shift/reduce conflicts.
State 83 contains 1 shift/reduce conflict.
State 84 contains 3 shift/reduce conflicts.
State 85 contains 3 shift/reduce conflicts.
State 88 contains 3 shift/reduce conflicts.
State 89 contains 3 shift/reduce conflicts.
State 90 contains 3 shift/reduce conflicts.
State 91 contains 3 shift/reduce conflicts.
State 92 contains 3 shift/reduce conflicts.
State 93 contains 3 shift/reduce conflicts.
State 94 contains 2 shift/reduce conflicts.
State 95 contains 3 shift/reduce conflicts.
State 97 contains 1 shift/reduce conflict.
State 106 contains 24 shift/reduce conflicts.
State 107 contains 24 shift/reduce conflicts.
State 109 contains 1 shift/reduce conflict.
State 110 contains 1 shift/reduce conflict.
State 111 contains 1 shift/reduce conflict.
State 112 contains 1 shift/reduce conflict.
State 113 contains 1 shift/reduce conflict.
State 114 contains 1 shift/reduce conflict.
State 115 contains 1 shift/reduce conflict.
State 116 contains 1 shift/reduce conflict.
State 117 contains 1 shift/reduce conflict.
State 118 contains 1 shift/reduce conflict.
State 119 contains 1 shift/reduce conflict.
State 120 contains 1 shift/reduce conflict.
State 121 contains 1 shift/reduce conflict.
State 122 contains 1 shift/reduce conflict.
State 123 contains 1 shift/reduce conflict.
State 125 contains 1 shift/reduce conflict.
State 126 contains 1 shift/reduce conflict.
State 127 contains 1 shift/reduce conflict.
State 128 contains 1 shift/reduce conflict.
State 129 contains 1 shift/reduce conflict.
State 130 contains 1 shift/reduce conflict.
State 131 contains 1 shift/reduce conflict.
State 132 contains 1 shift/reduce conflict.
State 133 contains 1 shift/reduce conflict.
State 136 contains 1 shift/reduce conflict.
State 151 contains 1 shift/reduce conflict.
State 152 contains 1 shift/reduce conflict.
State 180 contains 17 shift/reduce conflicts.
State 185 contains 24 shift/reduce conflicts.
State 186 contains 24 shift/reduce conflicts.
State 187 contains 24 shift/reduce conflicts.
State 188 contains 24 shift/reduce conflicts.
State 189 contains 24 shift/reduce conflicts.
State 190 contains 24 shift/reduce conflicts.
State 191 contains 24 shift/reduce conflicts.
State 192 contains 24 shift/reduce conflicts.
State 193 contains 24 shift/reduce conflicts.
State 194 contains 24 shift/reduce conflicts.
State 195 contains 24 shift/reduce conflicts.
State 196 contains 24 shift/reduce conflicts.
State 197 contains 24 shift/reduce conflicts.
State 198 contains 24 shift/reduce conflicts.
State 199 contains 24 shift/reduce conflicts.
State 200 contains 24 shift/reduce conflicts.
State 201 contains 24 shift/reduce conflicts.
State 202 contains 24 shift/reduce conflicts.
State 203 contains 24 shift/reduce conflicts.
State 204 contains 24 shift/reduce conflicts.
State 205 contains 24 shift/reduce conflicts.
State 206 contains 24 shift/reduce conflicts.
State 207 contains 24 shift/reduce conflicts.
State 208 contains 24 shift/reduce conflicts.
State 209 contains 1 shift/reduce conflict.
State 210 contains 1 shift/reduce conflict.
State 212 contains 17 shift/reduce conflicts.
State 215 contains 1 shift/reduce conflict.
State 216 contains 1 shift/reduce conflict.
State 217 contains 1 shift/reduce conflict.
State 218 contains 1 shift/reduce conflict.
State 230 contains 1 shift/reduce conflict.
State 231 contains 1 shift/reduce conflict.
State 237 contains 17 shift/reduce conflicts.
State 252 contains 17 shift/reduce conflicts.
State 253 contains 17 shift/reduce conflicts.
State 255 contains 1 shift/reduce conflict.
State 256 contains 17 shift/reduce conflicts.
State 268 contains 17 shift/reduce conflicts.

Grammar
rule 1    nasl_script -> line nasl_script
rule 2    nasl_script ->		/* empty */
rule 3    line -> COMMENT
rule 4    line -> export
rule 5    line -> function
rule 6    line -> command
rule 7    export -> EXPORT function
rule 8    function -> FUNCTION identifier '(' parameters ')' block
rule 9    function -> FUNCTION identifier '(' ')' block
rule 10   parameters -> parameter ',' parameters
rule 11   parameters -> parameter
rule 12   parameter -> identifier
rule 13   parameter -> '&' identifier
rule 14   parameter -> assign
rule 15   parameter -> string
rule 16   parameter -> integer
rule 17   command -> simple
rule 18   command -> compound
rule 19   simple -> assign
rule 20   simple -> call_function
rule 21   simple -> break
rule 22   simple -> continue
rule 23   simple -> return
rule 24   simple -> local
rule 25   simple -> global
rule 26   simple -> inc_dec_exp
rule 27   simple -> rep
rule 28   simple -> import
rule 29   simple -> include
rule 30   simple -> empty
rule 31   break -> BREAK ';'
rule 32   continue -> CONTINUE ';'
rule 33   import -> IMPORT '(' string ')' ';'
rule 34   include -> INCLUDE '(' string ')' ';'
rule 35   return -> RETURN expression ';'
rule 36   return -> RETURN '@' ';'
rule 37   empty -> ';'
rule 38   global -> GLOBAL vars ';'
rule 39   local -> LOCAL vars ';'
rule 40   rep -> call_function REP expression ';'
rule 41   call_function -> identifier '(' argument_list ')' ';'
rule 42   call_function -> identifier '(' ')' ';'
rule 43   assign -> identifier '=' value
rule 44   assign -> identifier '=' ref
rule 45   assign -> assign_math_op
rule 46   assign -> assign_shift_op
rule 47   inc_dec_exp -> INC identifier
rule 48   inc_dec_exp -> DEC identifier
rule 49   inc_dec_exp -> identifier INC
rule 50   inc_dec_exp -> identifier DEC
rule 51   assign_math_op -> identifier ADD_ASS value
rule 52   assign_math_op -> identifier SUB_ASS value
rule 53   assign_math_op -> identifier MUL_ASS value
rule 54   assign_math_op -> identifier DIV_ASS value
rule 55   assign_math_op -> identifier MOD_ASS value
rule 56   assign_shift_op -> identifier SR_ASS value
rule 57   assign_shift_op -> identifier SRR_ASS value
rule 58   assign_shift_op -> identifier SL_ASS value
rule 59   value -> expression
rule 60   value -> call_function
rule 61   identifier -> IDENT
rule 62   identifier -> IN_ITER
rule 63   integer -> INT
rule 64   integer -> TRUE
rule 65   integer -> FALSE
rule 66   string -> STRING
rule 67   ip -> integer '.' integer '.' integer '.' integer
rule 68   null -> _NULL_
rule 69   ref -> '@' IDENT
rule 70   compound -> for_loop
rule 71   compound -> foreach_loop
rule 72   compound -> repeat_loop
rule 73   compound -> while_loop
rule 74   compound -> if_cond
rule 75   for_loop -> FOR '(' expression ';' expression ';' expression ')' block
rule 76   for_loop -> FOR '(' expression ';' expression ';' expression ')' command
rule 77   foreach_loop -> FOREACH identifier '(' expression ')' block
rule 78   foreach_loop -> FOREACH identifier '(' expression ')' command
rule 79   foreach_loop -> FOREACH '(' identifier IN_ITER expression ')' block
rule 80   foreach_loop -> FOREACH '(' identifier IN_ITER expression ')' command
rule 81   repeat_loop -> REPEAT block UNTIL expression ';'
rule 82   repeat_loop -> REPEAT command UNTIL expression ';'
rule 83   while_loop -> WHILE '(' expression ')' block
rule 84   while_loop -> WHILE '(' expression ')' command
rule 85   if_cond -> IF '(' expression ')' block
rule 86   if_cond -> IF '(' expression ')' command
rule 87   if_cond -> IF '(' expression ')' block ELSE command
rule 88   if_cond -> IF '(' expression ')' block ELSE block
rule 89   if_cond -> IF '(' expression ')' command ELSE block
rule 90   if_cond -> IF '(' expression ')' command ELSE command
rule 91   block ->		/* empty */
rule 92   block -> '{' '}'
rule 93   block -> '{' line '}'
rule 94   block -> '{' argument_list '}'
rule 95   block -> '[' ']'
rule 96   block -> '[' argument_list ']'
rule 97   var -> identifier '=' expression
rule 98   var -> identifier '=' ref
rule 99   var -> identifier
rule 100  vars -> var ',' vars
rule 101  vars -> var
rule 102  argument_list -> argument_list ',' argument
rule 103  argument_list -> argument
rule 104  argument -> string ':' expression
rule 105  argument -> integer ':' expression
rule 106  argument -> string ':' ref
rule 107  argument -> integer ':' ref
rule 108  argument -> identifier ':' expression
rule 109  argument -> identifier ':' ref
rule 110  argument -> expression
rule 111  argument -> ref
rule 112  expression ->		/* empty */
rule 113  expression -> '(' expression ')'
rule 114  expression -> expression AND expression
rule 115  expression -> '!' expression
rule 116  expression -> expression OR expression
rule 117  expression -> expression '+' expression
rule 118  expression -> expression '-' expression
rule 119  expression -> '-' expression
rule 120  expression -> expression '*' expression
rule 121  expression -> expression POWER expression
rule 122  expression -> expression '/' expression
rule 123  expression -> expression '%' expression
rule 124  expression -> expression '&' expression
rule 125  expression -> expression '^' expression
rule 126  expression -> expression '|' expression
rule 127  expression -> expression SR expression
rule 128  expression -> expression SL expression
rule 129  expression -> expression SRR expression
rule 130  expression -> expression SUBSTR_EQ expression
rule 131  expression -> expression SUBSTR_NEQ expression
rule 132  expression -> expression REGEX_NEQ expression
rule 133  expression -> expression REGEX_EQ expression
rule 134  expression -> expression '<' expression
rule 135  expression -> expression '>' expression
rule 136  expression -> expression CMP_GE expression
rule 137  expression -> expression CMP_LE expression
rule 138  expression -> expression CMP_EQ expression
rule 139  expression -> expression CMP_NEQ expression
rule 140  expression -> integer
rule 141  expression -> string
rule 142  expression -> ip
rule 143  expression -> null

Terminals, with rules where they appear

$ (-1)
'!' (33) 115
'%' (37) 123
'&' (38) 13 124
'(' (40) 8 9 33 34 41 42 75 76 77 78 79 80 83 84 85 86 87 88 89 90
    113
')' (41) 8 9 33 34 41 42 75 76 77 78 79 80 83 84 85 86 87 88 89 90
    113
'*' (42) 120
'+' (43) 117
',' (44) 10 100 102
'-' (45) 118 119
'.' (46) 67
'/' (47) 122
':' (58) 104 105 106 107 108 109
';' (59) 31 32 33 34 35 36 37 38 39 40 41 42 75 76 81 82
'<' (60) 134
'=' (61) 43 44 97 98
'>' (62) 135
'@' (64) 36 69
'[' (91) 95 96
']' (93) 95 96
'^' (94) 125
'{' (123) 92 93 94
'|' (124) 126
'}' (125) 92 93 94
error (256)
COMMENT (258) 3
FUNCTION (259) 8 9
LOCAL (260) 39
GLOBAL (261) 38
ELSE (262) 87 88 89 90
IF (263) 85 86 87 88 89 90
INCLUDE (264) 34
EXPORT (265) 7
IMPORT (266) 33
RETURN (267) 35 36
BREAK (268) 31
CONTINUE (269) 32
FOR (270) 75 76
FOREACH (271) 77 78 79 80
IN_ITER (272) 62 79 80
WHILE (273) 83 84
REPEAT (274) 81 82
REP (275) 40
UNTIL (276) 81 82
IDENT (277) 61 69
INT (278) 63
STRING (279) 66
FALSE (280) 65
_NULL_ (281) 68
TRUE (282) 64
OR (283) 116
AND (284) 114
ADD_ASS (285) 51
SUB_ASS (286) 52
SUBSTR_EQ (287) 130
SUBSTR_NEQ (288) 131
REGEX_EQ (289) 133
REGEX_NEQ (290) 132
DEC (291) 48 50
INC (292) 47 49
DIV_ASS (293) 54
MUL_ASS (294) 53
MOD_ASS (295) 55
POWER (296) 121
CMP_EQ (297) 138
CMP_GE (298) 136
CMP_LE (299) 137
CMP_NEQ (300) 139
SL (301) 128
SR (302) 127
SRR (303) 129
SRR_ASS (304) 57
SR_ASS (305) 56
SL_ASS (306) 58

Nonterminals, with rules where they appear

nasl_script (75)
    on left: 1 2, on right: 1
line (76)
    on left: 3 4 5 6, on right: 1 93
export (77)
    on left: 7, on right: 4
function (78)
    on left: 8 9, on right: 5 7
parameters (79)
    on left: 10 11, on right: 8 10
parameter (80)
    on left: 12 13 14 15 16, on right: 10 11
command (81)
    on left: 17 18, on right: 6 76 78 80 82 84 86 87 89 90
simple (82)
    on left: 19 20 21 22 23 24 25 26 27 28 29 30, on right: 17
break (83)
    on left: 31, on right: 21
continue (84)
    on left: 32, on right: 22
import (85)
    on left: 33, on right: 28
include (86)
    on left: 34, on right: 29
return (87)
    on left: 35 36, on right: 23
empty (88)
    on left: 37, on right: 30
global (89)
    on left: 38, on right: 25
local (90)
    on left: 39, on right: 24
rep (91)
    on left: 40, on right: 27
call_function (92)
    on left: 41 42, on right: 20 40 60
assign (93)
    on left: 43 44 45 46, on right: 14 19
inc_dec_exp (94)
    on left: 47 48 49 50, on right: 26
assign_math_op (95)
    on left: 51 52 53 54 55, on right: 45
assign_shift_op (96)
    on left: 56 57 58, on right: 46
value (97)
    on left: 59 60, on right: 43 51 52 53 54 55 56 57 58
identifier (98)
    on left: 61 62, on right: 8 9 12 13 41 42 43 44 47 48 49 50 51
    52 53 54 55 56 57 58 77 78 79 80 97 98 99 108 109
integer (99)
    on left: 63 64 65, on right: 16 67 105 107 140
string (100)
    on left: 66, on right: 15 33 34 104 106 141
ip (101)
    on left: 67, on right: 142
null (102)
    on left: 68, on right: 143
ref (103)
    on left: 69, on right: 44 98 106 107 109 111
compound (104)
    on left: 70 71 72 73 74, on right: 18
for_loop (105)
    on left: 75 76, on right: 70
foreach_loop (106)
    on left: 77 78 79 80, on right: 71
repeat_loop (107)
    on left: 81 82, on right: 72
while_loop (108)
    on left: 83 84, on right: 73
if_cond (109)
    on left: 85 86 87 88 89 90, on right: 74
block (110)
    on left: 91 92 93 94 95 96, on right: 8 9 75 77 79 81 83 85 87
    88 89
var (111)
    on left: 97 98 99, on right: 100 101
vars (112)
    on left: 100 101, on right: 38 39 100
argument_list (113)
    on left: 102 103, on right: 41 94 96 102
argument (114)
    on left: 104 105 106 107 108 109 110 111, on right: 102 103
expression (115)
    on left: 112 113 114 115 116 117 118 119 120 121 122 123 124 125
    126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141
    142 143, on right: 35 40 59 75 76 77 78 79 80 81 82 83 84 85 86
    87 88 89 90 97 104 105 108 110 113 114 115 116 117 118 119 120
    121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136
    137 138 139


state 0

    COMMENT	shift, and go to state 1
    FUNCTION	shift, and go to state 2
    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    EXPORT	shift, and go to state 7
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20

    $default	reduce using rule 2 (nasl_script)

    nasl_script	go to state 271
    line	go to state 21
    export	go to state 22
    function	go to state 23
    command	go to state 24
    simple	go to state 25
    break	go to state 26
    continue	go to state 27
    import	go to state 28
    include	go to state 29
    return	go to state 30
    empty	go to state 31
    global	go to state 32
    local	go to state 33
    rep 	go to state 34
    call_function	go to state 35
    assign	go to state 36
    inc_dec_exp	go to state 37
    assign_math_op	go to state 38
    assign_shift_op	go to state 39
    identifier	go to state 40
    compound	go to state 41
    for_loop	go to state 42
    foreach_loop	go to state 43
    repeat_loop	go to state 44
    while_loop	go to state 45
    if_cond	go to state 46



state 1

    line  ->  COMMENT .   (rule 3)

    $default	reduce using rule 3 (line)



state 2

    function  ->  FUNCTION . identifier '(' parameters ')' block   (rule 8)
    function  ->  FUNCTION . identifier '(' ')' block   (rule 9)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17

    identifier	go to state 47



state 3

    local  ->  LOCAL . vars ';'   (rule 39)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17

    identifier	go to state 48
    var 	go to state 49
    vars	go to state 50



state 4

    global  ->  GLOBAL . vars ';'   (rule 38)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17

    identifier	go to state 48
    var 	go to state 49
    vars	go to state 51



state 5

    if_cond  ->  IF . '(' expression ')' block   (rule 85)
    if_cond  ->  IF . '(' expression ')' command   (rule 86)
    if_cond  ->  IF . '(' expression ')' block ELSE command   (rule 87)
    if_cond  ->  IF . '(' expression ')' block ELSE block   (rule 88)
    if_cond  ->  IF . '(' expression ')' command ELSE block   (rule 89)
    if_cond  ->  IF . '(' expression ')' command ELSE command   (rule 90)

    '(' 	shift, and go to state 52



state 6

    include  ->  INCLUDE . '(' string ')' ';'   (rule 34)

    '(' 	shift, and go to state 53



state 7

    export  ->  EXPORT . function   (rule 7)

    FUNCTION	shift, and go to state 2

    function	go to state 54



state 8

    import  ->  IMPORT . '(' string ')' ';'   (rule 33)

    '(' 	shift, and go to state 55



state 9

    return  ->  RETURN . expression ';'   (rule 35)
    return  ->  RETURN . '@' ';'   (rule 36)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '@' 	shift, and go to state 62
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 69



state 10

    break  ->  BREAK . ';'   (rule 31)

    ';' 	shift, and go to state 70



state 11

    continue  ->  CONTINUE . ';'   (rule 32)

    ';' 	shift, and go to state 71



state 12

    for_loop  ->  FOR . '(' expression ';' expression ';' expression ')' block   (rule 75)
    for_loop  ->  FOR . '(' expression ';' expression ';' expression ')' command   (rule 76)

    '(' 	shift, and go to state 72



state 13

    foreach_loop  ->  FOREACH . identifier '(' expression ')' block   (rule 77)
    foreach_loop  ->  FOREACH . identifier '(' expression ')' command   (rule 78)
    foreach_loop  ->  FOREACH . '(' identifier IN_ITER expression ')' block   (rule 79)
    foreach_loop  ->  FOREACH . '(' identifier IN_ITER expression ')' command   (rule 80)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    '(' 	shift, and go to state 73

    identifier	go to state 74



state 14

    identifier  ->  IN_ITER .   (rule 62)

    $default	reduce using rule 62 (identifier)



state 15

    while_loop  ->  WHILE . '(' expression ')' block   (rule 83)
    while_loop  ->  WHILE . '(' expression ')' command   (rule 84)

    '(' 	shift, and go to state 75



state 16

    repeat_loop  ->  REPEAT . block UNTIL expression ';'   (rule 81)
    repeat_loop  ->  REPEAT . command UNTIL expression ';'   (rule 82)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20
    '{' 	shift, and go to state 76
    '[' 	shift, and go to state 77

    $default	reduce using rule 91 (block)

    command	go to state 78
    simple	go to state 25
    break	go to state 26
    continue	go to state 27
    import	go to state 28
    include	go to state 29
    return	go to state 30
    empty	go to state 31
    global	go to state 32
    local	go to state 33
    rep 	go to state 34
    call_function	go to state 35
    assign	go to state 36
    inc_dec_exp	go to state 37
    assign_math_op	go to state 38
    assign_shift_op	go to state 39
    identifier	go to state 40
    compound	go to state 41
    for_loop	go to state 42
    foreach_loop	go to state 43
    repeat_loop	go to state 44
    while_loop	go to state 45
    if_cond	go to state 46
    block	go to state 79



state 17

    identifier  ->  IDENT .   (rule 61)

    $default	reduce using rule 61 (identifier)



state 18

    inc_dec_exp  ->  DEC . identifier   (rule 48)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17

    identifier	go to state 80



state 19

    inc_dec_exp  ->  INC . identifier   (rule 47)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17

    identifier	go to state 81



state 20

    empty  ->  ';' .   (rule 37)

    $default	reduce using rule 37 (empty)



state 21

    nasl_script  ->  line . nasl_script   (rule 1)

    COMMENT	shift, and go to state 1
    FUNCTION	shift, and go to state 2
    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    EXPORT	shift, and go to state 7
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20

    $default	reduce using rule 2 (nasl_script)

    nasl_script	go to state 82
    line	go to state 21
    export	go to state 22
    function	go to state 23
    command	go to state 24
    simple	go to state 25
    break	go to state 26
    continue	go to state 27
    import	go to state 28
    include	go to state 29
    return	go to state 30
    empty	go to state 31
    global	go to state 32
    local	go to state 33
    rep 	go to state 34
    call_function	go to state 35
    assign	go to state 36
    inc_dec_exp	go to state 37
    assign_math_op	go to state 38
    assign_shift_op	go to state 39
    identifier	go to state 40
    compound	go to state 41
    for_loop	go to state 42
    foreach_loop	go to state 43
    repeat_loop	go to state 44
    while_loop	go to state 45
    if_cond	go to state 46



state 22

    line  ->  export .   (rule 4)

    $default	reduce using rule 4 (line)



state 23

    line  ->  function .   (rule 5)

    $default	reduce using rule 5 (line)



state 24

    line  ->  command .   (rule 6)

    $default	reduce using rule 6 (line)



state 25

    command  ->  simple .   (rule 17)

    $default	reduce using rule 17 (command)



state 26

    simple  ->  break .   (rule 21)

    $default	reduce using rule 21 (simple)



state 27

    simple  ->  continue .   (rule 22)

    $default	reduce using rule 22 (simple)



state 28

    simple  ->  import .   (rule 28)

    $default	reduce using rule 28 (simple)



state 29

    simple  ->  include .   (rule 29)

    $default	reduce using rule 29 (simple)



state 30

    simple  ->  return .   (rule 23)

    $default	reduce using rule 23 (simple)



state 31

    simple  ->  empty .   (rule 30)

    $default	reduce using rule 30 (simple)



state 32

    simple  ->  global .   (rule 25)

    $default	reduce using rule 25 (simple)



state 33

    simple  ->  local .   (rule 24)

    $default	reduce using rule 24 (simple)



state 34

    simple  ->  rep .   (rule 27)

    $default	reduce using rule 27 (simple)



state 35

    simple  ->  call_function .   (rule 20)
    rep  ->  call_function . REP expression ';'   (rule 40)

    REP 	shift, and go to state 83

    $default	reduce using rule 20 (simple)



state 36

    simple  ->  assign .   (rule 19)

    $default	reduce using rule 19 (simple)



state 37

    simple  ->  inc_dec_exp .   (rule 26)

    $default	reduce using rule 26 (simple)



state 38

    assign  ->  assign_math_op .   (rule 45)

    $default	reduce using rule 45 (assign)



state 39

    assign  ->  assign_shift_op .   (rule 46)

    $default	reduce using rule 46 (assign)



state 40

    call_function  ->  identifier . '(' argument_list ')' ';'   (rule 41)
    call_function  ->  identifier . '(' ')' ';'   (rule 42)
    assign  ->  identifier . '=' value   (rule 43)
    assign  ->  identifier . '=' ref   (rule 44)
    inc_dec_exp  ->  identifier . INC   (rule 49)
    inc_dec_exp  ->  identifier . DEC   (rule 50)
    assign_math_op  ->  identifier . ADD_ASS value   (rule 51)
    assign_math_op  ->  identifier . SUB_ASS value   (rule 52)
    assign_math_op  ->  identifier . MUL_ASS value   (rule 53)
    assign_math_op  ->  identifier . DIV_ASS value   (rule 54)
    assign_math_op  ->  identifier . MOD_ASS value   (rule 55)
    assign_shift_op  ->  identifier . SR_ASS value   (rule 56)
    assign_shift_op  ->  identifier . SRR_ASS value   (rule 57)
    assign_shift_op  ->  identifier . SL_ASS value   (rule 58)

    ADD_ASS	shift, and go to state 84
    SUB_ASS	shift, and go to state 85
    DEC 	shift, and go to state 86
    INC 	shift, and go to state 87
    DIV_ASS	shift, and go to state 88
    MUL_ASS	shift, and go to state 89
    MOD_ASS	shift, and go to state 90
    SRR_ASS	shift, and go to state 91
    SR_ASS	shift, and go to state 92
    SL_ASS	shift, and go to state 93
    '(' 	shift, and go to state 94
    '=' 	shift, and go to state 95



state 41

    command  ->  compound .   (rule 18)

    $default	reduce using rule 18 (command)



state 42

    compound  ->  for_loop .   (rule 70)

    $default	reduce using rule 70 (compound)



state 43

    compound  ->  foreach_loop .   (rule 71)

    $default	reduce using rule 71 (compound)



state 44

    compound  ->  repeat_loop .   (rule 72)

    $default	reduce using rule 72 (compound)



state 45

    compound  ->  while_loop .   (rule 73)

    $default	reduce using rule 73 (compound)



state 46

    compound  ->  if_cond .   (rule 74)

    $default	reduce using rule 74 (compound)



state 47

    function  ->  FUNCTION identifier . '(' parameters ')' block   (rule 8)
    function  ->  FUNCTION identifier . '(' ')' block   (rule 9)

    '(' 	shift, and go to state 96



state 48

    var  ->  identifier . '=' expression   (rule 97)
    var  ->  identifier . '=' ref   (rule 98)
    var  ->  identifier .   (rule 99)

    '=' 	shift, and go to state 97

    $default	reduce using rule 99 (var)



state 49

    vars  ->  var . ',' vars   (rule 100)
    vars  ->  var .   (rule 101)

    ',' 	shift, and go to state 98

    $default	reduce using rule 101 (vars)



state 50

    local  ->  LOCAL vars . ';'   (rule 39)

    ';' 	shift, and go to state 99



state 51

    global  ->  GLOBAL vars . ';'   (rule 38)

    ';' 	shift, and go to state 100



state 52

    if_cond  ->  IF '(' . expression ')' block   (rule 85)
    if_cond  ->  IF '(' . expression ')' command   (rule 86)
    if_cond  ->  IF '(' . expression ')' block ELSE command   (rule 87)
    if_cond  ->  IF '(' . expression ')' block ELSE block   (rule 88)
    if_cond  ->  IF '(' . expression ')' command ELSE block   (rule 89)
    if_cond  ->  IF '(' . expression ')' command ELSE command   (rule 90)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 101



state 53

    include  ->  INCLUDE '(' . string ')' ';'   (rule 34)

    STRING	shift, and go to state 57

    string	go to state 102



state 54

    export  ->  EXPORT function .   (rule 7)

    $default	reduce using rule 7 (export)



state 55

    import  ->  IMPORT '(' . string ')' ';'   (rule 33)

    STRING	shift, and go to state 57

    string	go to state 103



state 56

    integer  ->  INT .   (rule 63)

    $default	reduce using rule 63 (integer)



state 57

    string  ->  STRING .   (rule 66)

    $default	reduce using rule 66 (string)



state 58

    integer  ->  FALSE .   (rule 65)

    $default	reduce using rule 65 (integer)



state 59

    null  ->  _NULL_ .   (rule 68)

    $default	reduce using rule 68 (null)



state 60

    integer  ->  TRUE .   (rule 64)

    $default	reduce using rule 64 (integer)



state 61

    expression  ->  '(' . expression ')'   (rule 113)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 104



state 62

    return  ->  RETURN '@' . ';'   (rule 36)

    ';' 	shift, and go to state 105



state 63

    expression  ->  '!' . expression   (rule 115)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 106



state 64

    expression  ->  '-' . expression   (rule 119)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 107



state 65

    ip  ->  integer . '.' integer '.' integer '.' integer   (rule 67)
    expression  ->  integer .   (rule 140)

    '.' 	shift, and go to state 108

    $default	reduce using rule 140 (expression)



state 66

    expression  ->  string .   (rule 141)

    $default	reduce using rule 141 (expression)



state 67

    expression  ->  ip .   (rule 142)

    $default	reduce using rule 142 (expression)



state 68

    expression  ->  null .   (rule 143)

    $default	reduce using rule 143 (expression)



state 69

    return  ->  RETURN expression . ';'   (rule 35)
    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    ';' 	shift, and go to state 124
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133



state 70

    break  ->  BREAK ';' .   (rule 31)

    $default	reduce using rule 31 (break)



state 71

    continue  ->  CONTINUE ';' .   (rule 32)

    $default	reduce using rule 32 (continue)



state 72

    for_loop  ->  FOR '(' . expression ';' expression ';' expression ')' block   (rule 75)
    for_loop  ->  FOR '(' . expression ';' expression ';' expression ')' command   (rule 76)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 134



state 73

    foreach_loop  ->  FOREACH '(' . identifier IN_ITER expression ')' block   (rule 79)
    foreach_loop  ->  FOREACH '(' . identifier IN_ITER expression ')' command   (rule 80)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17

    identifier	go to state 135



state 74

    foreach_loop  ->  FOREACH identifier . '(' expression ')' block   (rule 77)
    foreach_loop  ->  FOREACH identifier . '(' expression ')' command   (rule 78)

    '(' 	shift, and go to state 136



state 75

    while_loop  ->  WHILE '(' . expression ')' block   (rule 83)
    while_loop  ->  WHILE '(' . expression ')' command   (rule 84)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 137



state 76

    block  ->  '{' . '}'   (rule 92)
    block  ->  '{' . line '}'   (rule 93)
    block  ->  '{' . argument_list '}'   (rule 94)

    COMMENT	shift, and go to state 1
    FUNCTION	shift, and go to state 2
    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    EXPORT	shift, and go to state 7
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    '(' 	shift, and go to state 61
    ';' 	shift, and go to state 20
    '@' 	shift, and go to state 138
    '}' 	shift, and go to state 139
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '}' 	[reduce using rule 112 (expression)]
    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    line	go to state 140
    export	go to state 22
    function	go to state 23
    command	go to state 24
    simple	go to state 25
    break	go to state 26
    continue	go to state 27
    import	go to state 28
    include	go to state 29
    return	go to state 30
    empty	go to state 31
    global	go to state 32
    local	go to state 33
    rep 	go to state 34
    call_function	go to state 35
    assign	go to state 36
    inc_dec_exp	go to state 37
    assign_math_op	go to state 38
    assign_shift_op	go to state 39
    identifier	go to state 141
    integer	go to state 142
    string	go to state 143
    ip  	go to state 67
    null	go to state 68
    ref 	go to state 144
    compound	go to state 41
    for_loop	go to state 42
    foreach_loop	go to state 43
    repeat_loop	go to state 44
    while_loop	go to state 45
    if_cond	go to state 46
    argument_list	go to state 145
    argument	go to state 146
    expression	go to state 147



state 77

    block  ->  '[' . ']'   (rule 95)
    block  ->  '[' . argument_list ']'   (rule 96)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '@' 	shift, and go to state 138
    ']' 	shift, and go to state 148
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    ']' 	[reduce using rule 112 (expression)]
    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    identifier	go to state 149
    integer	go to state 142
    string	go to state 143
    ip  	go to state 67
    null	go to state 68
    ref 	go to state 144
    argument_list	go to state 150
    argument	go to state 146
    expression	go to state 147



state 78

    repeat_loop  ->  REPEAT command . UNTIL expression ';'   (rule 82)

    UNTIL	shift, and go to state 151



state 79

    repeat_loop  ->  REPEAT block . UNTIL expression ';'   (rule 81)

    UNTIL	shift, and go to state 152



state 80

    inc_dec_exp  ->  DEC identifier .   (rule 48)

    $default	reduce using rule 48 (inc_dec_exp)



state 81

    inc_dec_exp  ->  INC identifier .   (rule 47)

    $default	reduce using rule 47 (inc_dec_exp)



state 82

    nasl_script  ->  line nasl_script .   (rule 1)

    $default	reduce using rule 1 (nasl_script)



state 83

    rep  ->  call_function REP . expression ';'   (rule 40)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 153



state 84

    assign_math_op  ->  identifier ADD_ASS . value   (rule 51)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    IN_ITER	[reduce using rule 112 (expression)]
    IDENT	[reduce using rule 112 (expression)]
    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    call_function	go to state 154
    value	go to state 155
    identifier	go to state 156
    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 157



state 85

    assign_math_op  ->  identifier SUB_ASS . value   (rule 52)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    IN_ITER	[reduce using rule 112 (expression)]
    IDENT	[reduce using rule 112 (expression)]
    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    call_function	go to state 154
    value	go to state 158
    identifier	go to state 156
    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 157



state 86

    inc_dec_exp  ->  identifier DEC .   (rule 50)

    $default	reduce using rule 50 (inc_dec_exp)



state 87

    inc_dec_exp  ->  identifier INC .   (rule 49)

    $default	reduce using rule 49 (inc_dec_exp)



state 88

    assign_math_op  ->  identifier DIV_ASS . value   (rule 54)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    IN_ITER	[reduce using rule 112 (expression)]
    IDENT	[reduce using rule 112 (expression)]
    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    call_function	go to state 154
    value	go to state 159
    identifier	go to state 156
    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 157



state 89

    assign_math_op  ->  identifier MUL_ASS . value   (rule 53)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    IN_ITER	[reduce using rule 112 (expression)]
    IDENT	[reduce using rule 112 (expression)]
    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    call_function	go to state 154
    value	go to state 160
    identifier	go to state 156
    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 157



state 90

    assign_math_op  ->  identifier MOD_ASS . value   (rule 55)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    IN_ITER	[reduce using rule 112 (expression)]
    IDENT	[reduce using rule 112 (expression)]
    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    call_function	go to state 154
    value	go to state 161
    identifier	go to state 156
    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 157



state 91

    assign_shift_op  ->  identifier SRR_ASS . value   (rule 57)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    IN_ITER	[reduce using rule 112 (expression)]
    IDENT	[reduce using rule 112 (expression)]
    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    call_function	go to state 154
    value	go to state 162
    identifier	go to state 156
    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 157



state 92

    assign_shift_op  ->  identifier SR_ASS . value   (rule 56)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    IN_ITER	[reduce using rule 112 (expression)]
    IDENT	[reduce using rule 112 (expression)]
    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    call_function	go to state 154
    value	go to state 163
    identifier	go to state 156
    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 157



state 93

    assign_shift_op  ->  identifier SL_ASS . value   (rule 58)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    IN_ITER	[reduce using rule 112 (expression)]
    IDENT	[reduce using rule 112 (expression)]
    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    call_function	go to state 154
    value	go to state 164
    identifier	go to state 156
    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 157



state 94

    call_function  ->  identifier '(' . argument_list ')' ';'   (rule 41)
    call_function  ->  identifier '(' . ')' ';'   (rule 42)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    ')' 	shift, and go to state 165
    '@' 	shift, and go to state 138
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    ')' 	[reduce using rule 112 (expression)]
    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    identifier	go to state 149
    integer	go to state 142
    string	go to state 143
    ip  	go to state 67
    null	go to state 68
    ref 	go to state 144
    argument_list	go to state 166
    argument	go to state 146
    expression	go to state 147



state 95

    assign  ->  identifier '=' . value   (rule 43)
    assign  ->  identifier '=' . ref   (rule 44)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '@' 	shift, and go to state 138
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    IN_ITER	[reduce using rule 112 (expression)]
    IDENT	[reduce using rule 112 (expression)]
    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    call_function	go to state 154
    value	go to state 167
    identifier	go to state 156
    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    ref 	go to state 168
    expression	go to state 157



state 96

    function  ->  FUNCTION identifier '(' . parameters ')' block   (rule 8)
    function  ->  FUNCTION identifier '(' . ')' block   (rule 9)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    TRUE	shift, and go to state 60
    ')' 	shift, and go to state 169
    '&' 	shift, and go to state 170

    parameters	go to state 171
    parameter	go to state 172
    assign	go to state 173
    assign_math_op	go to state 38
    assign_shift_op	go to state 39
    identifier	go to state 174
    integer	go to state 175
    string	go to state 176



state 97

    var  ->  identifier '=' . expression   (rule 97)
    var  ->  identifier '=' . ref   (rule 98)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '@' 	shift, and go to state 138
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    ref 	go to state 177
    expression	go to state 178



state 98

    vars  ->  var ',' . vars   (rule 100)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17

    identifier	go to state 48
    var 	go to state 49
    vars	go to state 179



state 99

    local  ->  LOCAL vars ';' .   (rule 39)

    $default	reduce using rule 39 (local)



state 100

    global  ->  GLOBAL vars ';' .   (rule 38)

    $default	reduce using rule 38 (global)



state 101

    if_cond  ->  IF '(' expression . ')' block   (rule 85)
    if_cond  ->  IF '(' expression . ')' command   (rule 86)
    if_cond  ->  IF '(' expression . ')' block ELSE command   (rule 87)
    if_cond  ->  IF '(' expression . ')' block ELSE block   (rule 88)
    if_cond  ->  IF '(' expression . ')' command ELSE block   (rule 89)
    if_cond  ->  IF '(' expression . ')' command ELSE command   (rule 90)
    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    ')' 	shift, and go to state 180
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133



state 102

    include  ->  INCLUDE '(' string . ')' ';'   (rule 34)

    ')' 	shift, and go to state 181



state 103

    import  ->  IMPORT '(' string . ')' ';'   (rule 33)

    ')' 	shift, and go to state 182



state 104

    expression  ->  '(' expression . ')'   (rule 113)
    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    ')' 	shift, and go to state 183
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133



state 105

    return  ->  RETURN '@' ';' .   (rule 36)

    $default	reduce using rule 36 (return)



state 106

    expression  ->  expression . AND expression   (rule 114)
    expression  ->  '!' expression .   (rule 115)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    OR  	[reduce using rule 115 (expression)]
    AND 	[reduce using rule 115 (expression)]
    SUBSTR_EQ	[reduce using rule 115 (expression)]
    SUBSTR_NEQ	[reduce using rule 115 (expression)]
    REGEX_EQ	[reduce using rule 115 (expression)]
    REGEX_NEQ	[reduce using rule 115 (expression)]
    POWER	[reduce using rule 115 (expression)]
    CMP_EQ	[reduce using rule 115 (expression)]
    CMP_GE	[reduce using rule 115 (expression)]
    CMP_LE	[reduce using rule 115 (expression)]
    CMP_NEQ	[reduce using rule 115 (expression)]
    SL  	[reduce using rule 115 (expression)]
    SR  	[reduce using rule 115 (expression)]
    SRR 	[reduce using rule 115 (expression)]
    '&' 	[reduce using rule 115 (expression)]
    '+' 	[reduce using rule 115 (expression)]
    '-' 	[reduce using rule 115 (expression)]
    '*' 	[reduce using rule 115 (expression)]
    '/' 	[reduce using rule 115 (expression)]
    '%' 	[reduce using rule 115 (expression)]
    '^' 	[reduce using rule 115 (expression)]
    '|' 	[reduce using rule 115 (expression)]
    '<' 	[reduce using rule 115 (expression)]
    '>' 	[reduce using rule 115 (expression)]
    $default	reduce using rule 115 (expression)



state 107

    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  '-' expression .   (rule 119)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    OR  	[reduce using rule 119 (expression)]
    AND 	[reduce using rule 119 (expression)]
    SUBSTR_EQ	[reduce using rule 119 (expression)]
    SUBSTR_NEQ	[reduce using rule 119 (expression)]
    REGEX_EQ	[reduce using rule 119 (expression)]
    REGEX_NEQ	[reduce using rule 119 (expression)]
    POWER	[reduce using rule 119 (expression)]
    CMP_EQ	[reduce using rule 119 (expression)]
    CMP_GE	[reduce using rule 119 (expression)]
    CMP_LE	[reduce using rule 119 (expression)]
    CMP_NEQ	[reduce using rule 119 (expression)]
    SL  	[reduce using rule 119 (expression)]
    SR  	[reduce using rule 119 (expression)]
    SRR 	[reduce using rule 119 (expression)]
    '&' 	[reduce using rule 119 (expression)]
    '+' 	[reduce using rule 119 (expression)]
    '-' 	[reduce using rule 119 (expression)]
    '*' 	[reduce using rule 119 (expression)]
    '/' 	[reduce using rule 119 (expression)]
    '%' 	[reduce using rule 119 (expression)]
    '^' 	[reduce using rule 119 (expression)]
    '|' 	[reduce using rule 119 (expression)]
    '<' 	[reduce using rule 119 (expression)]
    '>' 	[reduce using rule 119 (expression)]
    $default	reduce using rule 119 (expression)



state 108

    ip  ->  integer '.' . integer '.' integer '.' integer   (rule 67)

    INT 	shift, and go to state 56
    FALSE	shift, and go to state 58
    TRUE	shift, and go to state 60

    integer	go to state 184



state 109

    expression  ->  expression OR . expression   (rule 116)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 185



state 110

    expression  ->  expression AND . expression   (rule 114)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 186



state 111

    expression  ->  expression SUBSTR_EQ . expression   (rule 130)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 187



state 112

    expression  ->  expression SUBSTR_NEQ . expression   (rule 131)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 188



state 113

    expression  ->  expression REGEX_EQ . expression   (rule 133)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 189



state 114

    expression  ->  expression REGEX_NEQ . expression   (rule 132)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 190



state 115

    expression  ->  expression POWER . expression   (rule 121)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 191



state 116

    expression  ->  expression CMP_EQ . expression   (rule 138)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 192



state 117

    expression  ->  expression CMP_GE . expression   (rule 136)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 193



state 118

    expression  ->  expression CMP_LE . expression   (rule 137)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 194



state 119

    expression  ->  expression CMP_NEQ . expression   (rule 139)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 195



state 120

    expression  ->  expression SL . expression   (rule 128)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 196



state 121

    expression  ->  expression SR . expression   (rule 127)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 197



state 122

    expression  ->  expression SRR . expression   (rule 129)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 198



state 123

    expression  ->  expression '&' . expression   (rule 124)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 199



state 124

    return  ->  RETURN expression ';' .   (rule 35)

    $default	reduce using rule 35 (return)



state 125

    expression  ->  expression '+' . expression   (rule 117)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 200



state 126

    expression  ->  expression '-' . expression   (rule 118)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 201



state 127

    expression  ->  expression '*' . expression   (rule 120)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 202



state 128

    expression  ->  expression '/' . expression   (rule 122)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 203



state 129

    expression  ->  expression '%' . expression   (rule 123)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 204



state 130

    expression  ->  expression '^' . expression   (rule 125)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 205



state 131

    expression  ->  expression '|' . expression   (rule 126)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 206



state 132

    expression  ->  expression '<' . expression   (rule 134)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 207



state 133

    expression  ->  expression '>' . expression   (rule 135)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 208



state 134

    for_loop  ->  FOR '(' expression . ';' expression ';' expression ')' block   (rule 75)
    for_loop  ->  FOR '(' expression . ';' expression ';' expression ')' command   (rule 76)
    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    ';' 	shift, and go to state 209
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133



state 135

    foreach_loop  ->  FOREACH '(' identifier . IN_ITER expression ')' block   (rule 79)
    foreach_loop  ->  FOREACH '(' identifier . IN_ITER expression ')' command   (rule 80)

    IN_ITER	shift, and go to state 210



state 136

    foreach_loop  ->  FOREACH identifier '(' . expression ')' block   (rule 77)
    foreach_loop  ->  FOREACH identifier '(' . expression ')' command   (rule 78)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 211



state 137

    while_loop  ->  WHILE '(' expression . ')' block   (rule 83)
    while_loop  ->  WHILE '(' expression . ')' command   (rule 84)
    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    ')' 	shift, and go to state 212
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133



state 138

    ref  ->  '@' . IDENT   (rule 69)

    IDENT	shift, and go to state 213



state 139

    block  ->  '{' '}' .   (rule 92)

    $default	reduce using rule 92 (block)



state 140

    block  ->  '{' line . '}'   (rule 93)

    '}' 	shift, and go to state 214



state 141

    call_function  ->  identifier . '(' argument_list ')' ';'   (rule 41)
    call_function  ->  identifier . '(' ')' ';'   (rule 42)
    assign  ->  identifier . '=' value   (rule 43)
    assign  ->  identifier . '=' ref   (rule 44)
    inc_dec_exp  ->  identifier . INC   (rule 49)
    inc_dec_exp  ->  identifier . DEC   (rule 50)
    assign_math_op  ->  identifier . ADD_ASS value   (rule 51)
    assign_math_op  ->  identifier . SUB_ASS value   (rule 52)
    assign_math_op  ->  identifier . MUL_ASS value   (rule 53)
    assign_math_op  ->  identifier . DIV_ASS value   (rule 54)
    assign_math_op  ->  identifier . MOD_ASS value   (rule 55)
    assign_shift_op  ->  identifier . SR_ASS value   (rule 56)
    assign_shift_op  ->  identifier . SRR_ASS value   (rule 57)
    assign_shift_op  ->  identifier . SL_ASS value   (rule 58)
    argument  ->  identifier . ':' expression   (rule 108)
    argument  ->  identifier . ':' ref   (rule 109)

    ADD_ASS	shift, and go to state 84
    SUB_ASS	shift, and go to state 85
    DEC 	shift, and go to state 86
    INC 	shift, and go to state 87
    DIV_ASS	shift, and go to state 88
    MUL_ASS	shift, and go to state 89
    MOD_ASS	shift, and go to state 90
    SRR_ASS	shift, and go to state 91
    SR_ASS	shift, and go to state 92
    SL_ASS	shift, and go to state 93
    '(' 	shift, and go to state 94
    '=' 	shift, and go to state 95
    ':' 	shift, and go to state 215



state 142

    ip  ->  integer . '.' integer '.' integer '.' integer   (rule 67)
    argument  ->  integer . ':' expression   (rule 105)
    argument  ->  integer . ':' ref   (rule 107)
    expression  ->  integer .   (rule 140)

    '.' 	shift, and go to state 108
    ':' 	shift, and go to state 216

    $default	reduce using rule 140 (expression)



state 143

    argument  ->  string . ':' expression   (rule 104)
    argument  ->  string . ':' ref   (rule 106)
    expression  ->  string .   (rule 141)

    ':' 	shift, and go to state 217

    $default	reduce using rule 141 (expression)



state 144

    argument  ->  ref .   (rule 111)

    $default	reduce using rule 111 (argument)



state 145

    block  ->  '{' argument_list . '}'   (rule 94)
    argument_list  ->  argument_list . ',' argument   (rule 102)

    ',' 	shift, and go to state 218
    '}' 	shift, and go to state 219



state 146

    argument_list  ->  argument .   (rule 103)

    $default	reduce using rule 103 (argument_list)



state 147

    argument  ->  expression .   (rule 110)
    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    $default	reduce using rule 110 (argument)



state 148

    block  ->  '[' ']' .   (rule 95)

    $default	reduce using rule 95 (block)



state 149

    argument  ->  identifier . ':' expression   (rule 108)
    argument  ->  identifier . ':' ref   (rule 109)

    ':' 	shift, and go to state 215



state 150

    block  ->  '[' argument_list . ']'   (rule 96)
    argument_list  ->  argument_list . ',' argument   (rule 102)

    ',' 	shift, and go to state 218
    ']' 	shift, and go to state 220



state 151

    repeat_loop  ->  REPEAT command UNTIL . expression ';'   (rule 82)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 221



state 152

    repeat_loop  ->  REPEAT block UNTIL . expression ';'   (rule 81)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 222



state 153

    rep  ->  call_function REP expression . ';'   (rule 40)
    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    ';' 	shift, and go to state 223
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133



state 154

    value  ->  call_function .   (rule 60)

    $default	reduce using rule 60 (value)



state 155

    assign_math_op  ->  identifier ADD_ASS value .   (rule 51)

    $default	reduce using rule 51 (assign_math_op)



state 156

    call_function  ->  identifier . '(' argument_list ')' ';'   (rule 41)
    call_function  ->  identifier . '(' ')' ';'   (rule 42)

    '(' 	shift, and go to state 94



state 157

    value  ->  expression .   (rule 59)
    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    $default	reduce using rule 59 (value)



state 158

    assign_math_op  ->  identifier SUB_ASS value .   (rule 52)

    $default	reduce using rule 52 (assign_math_op)



state 159

    assign_math_op  ->  identifier DIV_ASS value .   (rule 54)

    $default	reduce using rule 54 (assign_math_op)



state 160

    assign_math_op  ->  identifier MUL_ASS value .   (rule 53)

    $default	reduce using rule 53 (assign_math_op)



state 161

    assign_math_op  ->  identifier MOD_ASS value .   (rule 55)

    $default	reduce using rule 55 (assign_math_op)



state 162

    assign_shift_op  ->  identifier SRR_ASS value .   (rule 57)

    $default	reduce using rule 57 (assign_shift_op)



state 163

    assign_shift_op  ->  identifier SR_ASS value .   (rule 56)

    $default	reduce using rule 56 (assign_shift_op)



state 164

    assign_shift_op  ->  identifier SL_ASS value .   (rule 58)

    $default	reduce using rule 58 (assign_shift_op)



state 165

    call_function  ->  identifier '(' ')' . ';'   (rule 42)

    ';' 	shift, and go to state 224



state 166

    call_function  ->  identifier '(' argument_list . ')' ';'   (rule 41)
    argument_list  ->  argument_list . ',' argument   (rule 102)

    ')' 	shift, and go to state 225
    ',' 	shift, and go to state 218



state 167

    assign  ->  identifier '=' value .   (rule 43)

    $default	reduce using rule 43 (assign)



state 168

    assign  ->  identifier '=' ref .   (rule 44)

    $default	reduce using rule 44 (assign)



state 169

    function  ->  FUNCTION identifier '(' ')' . block   (rule 9)

    '{' 	shift, and go to state 76
    '[' 	shift, and go to state 77

    $default	reduce using rule 91 (block)

    block	go to state 226



state 170

    parameter  ->  '&' . identifier   (rule 13)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17

    identifier	go to state 227



state 171

    function  ->  FUNCTION identifier '(' parameters . ')' block   (rule 8)

    ')' 	shift, and go to state 228



state 172

    parameters  ->  parameter . ',' parameters   (rule 10)
    parameters  ->  parameter .   (rule 11)

    ',' 	shift, and go to state 229

    $default	reduce using rule 11 (parameters)



state 173

    parameter  ->  assign .   (rule 14)

    $default	reduce using rule 14 (parameter)



state 174

    parameter  ->  identifier .   (rule 12)
    assign  ->  identifier . '=' value   (rule 43)
    assign  ->  identifier . '=' ref   (rule 44)
    assign_math_op  ->  identifier . ADD_ASS value   (rule 51)
    assign_math_op  ->  identifier . SUB_ASS value   (rule 52)
    assign_math_op  ->  identifier . MUL_ASS value   (rule 53)
    assign_math_op  ->  identifier . DIV_ASS value   (rule 54)
    assign_math_op  ->  identifier . MOD_ASS value   (rule 55)
    assign_shift_op  ->  identifier . SR_ASS value   (rule 56)
    assign_shift_op  ->  identifier . SRR_ASS value   (rule 57)
    assign_shift_op  ->  identifier . SL_ASS value   (rule 58)

    ADD_ASS	shift, and go to state 84
    SUB_ASS	shift, and go to state 85
    DIV_ASS	shift, and go to state 88
    MUL_ASS	shift, and go to state 89
    MOD_ASS	shift, and go to state 90
    SRR_ASS	shift, and go to state 91
    SR_ASS	shift, and go to state 92
    SL_ASS	shift, and go to state 93
    '=' 	shift, and go to state 95

    $default	reduce using rule 12 (parameter)



state 175

    parameter  ->  integer .   (rule 16)

    $default	reduce using rule 16 (parameter)



state 176

    parameter  ->  string .   (rule 15)

    $default	reduce using rule 15 (parameter)



state 177

    var  ->  identifier '=' ref .   (rule 98)

    $default	reduce using rule 98 (var)



state 178

    var  ->  identifier '=' expression .   (rule 97)
    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    $default	reduce using rule 97 (var)



state 179

    vars  ->  var ',' vars .   (rule 100)

    $default	reduce using rule 100 (vars)



state 180

    if_cond  ->  IF '(' expression ')' . block   (rule 85)
    if_cond  ->  IF '(' expression ')' . command   (rule 86)
    if_cond  ->  IF '(' expression ')' . block ELSE command   (rule 87)
    if_cond  ->  IF '(' expression ')' . block ELSE block   (rule 88)
    if_cond  ->  IF '(' expression ')' . command ELSE block   (rule 89)
    if_cond  ->  IF '(' expression ')' . command ELSE command   (rule 90)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20
    '{' 	shift, and go to state 76
    '[' 	shift, and go to state 77

    LOCAL	[reduce using rule 91 (block)]
    GLOBAL	[reduce using rule 91 (block)]
    IF  	[reduce using rule 91 (block)]
    INCLUDE	[reduce using rule 91 (block)]
    IMPORT	[reduce using rule 91 (block)]
    RETURN	[reduce using rule 91 (block)]
    BREAK	[reduce using rule 91 (block)]
    CONTINUE	[reduce using rule 91 (block)]
    FOR 	[reduce using rule 91 (block)]
    FOREACH	[reduce using rule 91 (block)]
    IN_ITER	[reduce using rule 91 (block)]
    WHILE	[reduce using rule 91 (block)]
    REPEAT	[reduce using rule 91 (block)]
    IDENT	[reduce using rule 91 (block)]
    DEC 	[reduce using rule 91 (block)]
    INC 	[reduce using rule 91 (block)]
    ';' 	[reduce using rule 91 (block)]
    $default	reduce using rule 91 (block)

    command	go to state 230
    simple	go to state 25
    break	go to state 26
    continue	go to state 27
    import	go to state 28
    include	go to state 29
    return	go to state 30
    empty	go to state 31
    global	go to state 32
    local	go to state 33
    rep 	go to state 34
    call_function	go to state 35
    assign	go to state 36
    inc_dec_exp	go to state 37
    assign_math_op	go to state 38
    assign_shift_op	go to state 39
    identifier	go to state 40
    compound	go to state 41
    for_loop	go to state 42
    foreach_loop	go to state 43
    repeat_loop	go to state 44
    while_loop	go to state 45
    if_cond	go to state 46
    block	go to state 231



state 181

    include  ->  INCLUDE '(' string ')' . ';'   (rule 34)

    ';' 	shift, and go to state 232



state 182

    import  ->  IMPORT '(' string ')' . ';'   (rule 33)

    ';' 	shift, and go to state 233



state 183

    expression  ->  '(' expression ')' .   (rule 113)

    $default	reduce using rule 113 (expression)



state 184

    ip  ->  integer '.' integer . '.' integer '.' integer   (rule 67)

    '.' 	shift, and go to state 234



state 185

    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression OR expression .   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    OR  	[reduce using rule 116 (expression)]
    AND 	[reduce using rule 116 (expression)]
    SUBSTR_EQ	[reduce using rule 116 (expression)]
    SUBSTR_NEQ	[reduce using rule 116 (expression)]
    REGEX_EQ	[reduce using rule 116 (expression)]
    REGEX_NEQ	[reduce using rule 116 (expression)]
    POWER	[reduce using rule 116 (expression)]
    CMP_EQ	[reduce using rule 116 (expression)]
    CMP_GE	[reduce using rule 116 (expression)]
    CMP_LE	[reduce using rule 116 (expression)]
    CMP_NEQ	[reduce using rule 116 (expression)]
    SL  	[reduce using rule 116 (expression)]
    SR  	[reduce using rule 116 (expression)]
    SRR 	[reduce using rule 116 (expression)]
    '&' 	[reduce using rule 116 (expression)]
    '+' 	[reduce using rule 116 (expression)]
    '-' 	[reduce using rule 116 (expression)]
    '*' 	[reduce using rule 116 (expression)]
    '/' 	[reduce using rule 116 (expression)]
    '%' 	[reduce using rule 116 (expression)]
    '^' 	[reduce using rule 116 (expression)]
    '|' 	[reduce using rule 116 (expression)]
    '<' 	[reduce using rule 116 (expression)]
    '>' 	[reduce using rule 116 (expression)]
    $default	reduce using rule 116 (expression)



state 186

    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression AND expression .   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    OR  	[reduce using rule 114 (expression)]
    AND 	[reduce using rule 114 (expression)]
    SUBSTR_EQ	[reduce using rule 114 (expression)]
    SUBSTR_NEQ	[reduce using rule 114 (expression)]
    REGEX_EQ	[reduce using rule 114 (expression)]
    REGEX_NEQ	[reduce using rule 114 (expression)]
    POWER	[reduce using rule 114 (expression)]
    CMP_EQ	[reduce using rule 114 (expression)]
    CMP_GE	[reduce using rule 114 (expression)]
    CMP_LE	[reduce using rule 114 (expression)]
    CMP_NEQ	[reduce using rule 114 (expression)]
    SL  	[reduce using rule 114 (expression)]
    SR  	[reduce using rule 114 (expression)]
    SRR 	[reduce using rule 114 (expression)]
    '&' 	[reduce using rule 114 (expression)]
    '+' 	[reduce using rule 114 (expression)]
    '-' 	[reduce using rule 114 (expression)]
    '*' 	[reduce using rule 114 (expression)]
    '/' 	[reduce using rule 114 (expression)]
    '%' 	[reduce using rule 114 (expression)]
    '^' 	[reduce using rule 114 (expression)]
    '|' 	[reduce using rule 114 (expression)]
    '<' 	[reduce using rule 114 (expression)]
    '>' 	[reduce using rule 114 (expression)]
    $default	reduce using rule 114 (expression)



state 187

    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression SUBSTR_EQ expression .   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    OR  	[reduce using rule 130 (expression)]
    AND 	[reduce using rule 130 (expression)]
    SUBSTR_EQ	[reduce using rule 130 (expression)]
    SUBSTR_NEQ	[reduce using rule 130 (expression)]
    REGEX_EQ	[reduce using rule 130 (expression)]
    REGEX_NEQ	[reduce using rule 130 (expression)]
    POWER	[reduce using rule 130 (expression)]
    CMP_EQ	[reduce using rule 130 (expression)]
    CMP_GE	[reduce using rule 130 (expression)]
    CMP_LE	[reduce using rule 130 (expression)]
    CMP_NEQ	[reduce using rule 130 (expression)]
    SL  	[reduce using rule 130 (expression)]
    SR  	[reduce using rule 130 (expression)]
    SRR 	[reduce using rule 130 (expression)]
    '&' 	[reduce using rule 130 (expression)]
    '+' 	[reduce using rule 130 (expression)]
    '-' 	[reduce using rule 130 (expression)]
    '*' 	[reduce using rule 130 (expression)]
    '/' 	[reduce using rule 130 (expression)]
    '%' 	[reduce using rule 130 (expression)]
    '^' 	[reduce using rule 130 (expression)]
    '|' 	[reduce using rule 130 (expression)]
    '<' 	[reduce using rule 130 (expression)]
    '>' 	[reduce using rule 130 (expression)]
    $default	reduce using rule 130 (expression)



state 188

    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression SUBSTR_NEQ expression .   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    OR  	[reduce using rule 131 (expression)]
    AND 	[reduce using rule 131 (expression)]
    SUBSTR_EQ	[reduce using rule 131 (expression)]
    SUBSTR_NEQ	[reduce using rule 131 (expression)]
    REGEX_EQ	[reduce using rule 131 (expression)]
    REGEX_NEQ	[reduce using rule 131 (expression)]
    POWER	[reduce using rule 131 (expression)]
    CMP_EQ	[reduce using rule 131 (expression)]
    CMP_GE	[reduce using rule 131 (expression)]
    CMP_LE	[reduce using rule 131 (expression)]
    CMP_NEQ	[reduce using rule 131 (expression)]
    SL  	[reduce using rule 131 (expression)]
    SR  	[reduce using rule 131 (expression)]
    SRR 	[reduce using rule 131 (expression)]
    '&' 	[reduce using rule 131 (expression)]
    '+' 	[reduce using rule 131 (expression)]
    '-' 	[reduce using rule 131 (expression)]
    '*' 	[reduce using rule 131 (expression)]
    '/' 	[reduce using rule 131 (expression)]
    '%' 	[reduce using rule 131 (expression)]
    '^' 	[reduce using rule 131 (expression)]
    '|' 	[reduce using rule 131 (expression)]
    '<' 	[reduce using rule 131 (expression)]
    '>' 	[reduce using rule 131 (expression)]
    $default	reduce using rule 131 (expression)



state 189

    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression REGEX_EQ expression .   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    OR  	[reduce using rule 133 (expression)]
    AND 	[reduce using rule 133 (expression)]
    SUBSTR_EQ	[reduce using rule 133 (expression)]
    SUBSTR_NEQ	[reduce using rule 133 (expression)]
    REGEX_EQ	[reduce using rule 133 (expression)]
    REGEX_NEQ	[reduce using rule 133 (expression)]
    POWER	[reduce using rule 133 (expression)]
    CMP_EQ	[reduce using rule 133 (expression)]
    CMP_GE	[reduce using rule 133 (expression)]
    CMP_LE	[reduce using rule 133 (expression)]
    CMP_NEQ	[reduce using rule 133 (expression)]
    SL  	[reduce using rule 133 (expression)]
    SR  	[reduce using rule 133 (expression)]
    SRR 	[reduce using rule 133 (expression)]
    '&' 	[reduce using rule 133 (expression)]
    '+' 	[reduce using rule 133 (expression)]
    '-' 	[reduce using rule 133 (expression)]
    '*' 	[reduce using rule 133 (expression)]
    '/' 	[reduce using rule 133 (expression)]
    '%' 	[reduce using rule 133 (expression)]
    '^' 	[reduce using rule 133 (expression)]
    '|' 	[reduce using rule 133 (expression)]
    '<' 	[reduce using rule 133 (expression)]
    '>' 	[reduce using rule 133 (expression)]
    $default	reduce using rule 133 (expression)



state 190

    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression REGEX_NEQ expression .   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    OR  	[reduce using rule 132 (expression)]
    AND 	[reduce using rule 132 (expression)]
    SUBSTR_EQ	[reduce using rule 132 (expression)]
    SUBSTR_NEQ	[reduce using rule 132 (expression)]
    REGEX_EQ	[reduce using rule 132 (expression)]
    REGEX_NEQ	[reduce using rule 132 (expression)]
    POWER	[reduce using rule 132 (expression)]
    CMP_EQ	[reduce using rule 132 (expression)]
    CMP_GE	[reduce using rule 132 (expression)]
    CMP_LE	[reduce using rule 132 (expression)]
    CMP_NEQ	[reduce using rule 132 (expression)]
    SL  	[reduce using rule 132 (expression)]
    SR  	[reduce using rule 132 (expression)]
    SRR 	[reduce using rule 132 (expression)]
    '&' 	[reduce using rule 132 (expression)]
    '+' 	[reduce using rule 132 (expression)]
    '-' 	[reduce using rule 132 (expression)]
    '*' 	[reduce using rule 132 (expression)]
    '/' 	[reduce using rule 132 (expression)]
    '%' 	[reduce using rule 132 (expression)]
    '^' 	[reduce using rule 132 (expression)]
    '|' 	[reduce using rule 132 (expression)]
    '<' 	[reduce using rule 132 (expression)]
    '>' 	[reduce using rule 132 (expression)]
    $default	reduce using rule 132 (expression)



state 191

    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression POWER expression .   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    OR  	[reduce using rule 121 (expression)]
    AND 	[reduce using rule 121 (expression)]
    SUBSTR_EQ	[reduce using rule 121 (expression)]
    SUBSTR_NEQ	[reduce using rule 121 (expression)]
    REGEX_EQ	[reduce using rule 121 (expression)]
    REGEX_NEQ	[reduce using rule 121 (expression)]
    POWER	[reduce using rule 121 (expression)]
    CMP_EQ	[reduce using rule 121 (expression)]
    CMP_GE	[reduce using rule 121 (expression)]
    CMP_LE	[reduce using rule 121 (expression)]
    CMP_NEQ	[reduce using rule 121 (expression)]
    SL  	[reduce using rule 121 (expression)]
    SR  	[reduce using rule 121 (expression)]
    SRR 	[reduce using rule 121 (expression)]
    '&' 	[reduce using rule 121 (expression)]
    '+' 	[reduce using rule 121 (expression)]
    '-' 	[reduce using rule 121 (expression)]
    '*' 	[reduce using rule 121 (expression)]
    '/' 	[reduce using rule 121 (expression)]
    '%' 	[reduce using rule 121 (expression)]
    '^' 	[reduce using rule 121 (expression)]
    '|' 	[reduce using rule 121 (expression)]
    '<' 	[reduce using rule 121 (expression)]
    '>' 	[reduce using rule 121 (expression)]
    $default	reduce using rule 121 (expression)



state 192

    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression CMP_EQ expression .   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    OR  	[reduce using rule 138 (expression)]
    AND 	[reduce using rule 138 (expression)]
    SUBSTR_EQ	[reduce using rule 138 (expression)]
    SUBSTR_NEQ	[reduce using rule 138 (expression)]
    REGEX_EQ	[reduce using rule 138 (expression)]
    REGEX_NEQ	[reduce using rule 138 (expression)]
    POWER	[reduce using rule 138 (expression)]
    CMP_EQ	[reduce using rule 138 (expression)]
    CMP_GE	[reduce using rule 138 (expression)]
    CMP_LE	[reduce using rule 138 (expression)]
    CMP_NEQ	[reduce using rule 138 (expression)]
    SL  	[reduce using rule 138 (expression)]
    SR  	[reduce using rule 138 (expression)]
    SRR 	[reduce using rule 138 (expression)]
    '&' 	[reduce using rule 138 (expression)]
    '+' 	[reduce using rule 138 (expression)]
    '-' 	[reduce using rule 138 (expression)]
    '*' 	[reduce using rule 138 (expression)]
    '/' 	[reduce using rule 138 (expression)]
    '%' 	[reduce using rule 138 (expression)]
    '^' 	[reduce using rule 138 (expression)]
    '|' 	[reduce using rule 138 (expression)]
    '<' 	[reduce using rule 138 (expression)]
    '>' 	[reduce using rule 138 (expression)]
    $default	reduce using rule 138 (expression)



state 193

    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression CMP_GE expression .   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    OR  	[reduce using rule 136 (expression)]
    AND 	[reduce using rule 136 (expression)]
    SUBSTR_EQ	[reduce using rule 136 (expression)]
    SUBSTR_NEQ	[reduce using rule 136 (expression)]
    REGEX_EQ	[reduce using rule 136 (expression)]
    REGEX_NEQ	[reduce using rule 136 (expression)]
    POWER	[reduce using rule 136 (expression)]
    CMP_EQ	[reduce using rule 136 (expression)]
    CMP_GE	[reduce using rule 136 (expression)]
    CMP_LE	[reduce using rule 136 (expression)]
    CMP_NEQ	[reduce using rule 136 (expression)]
    SL  	[reduce using rule 136 (expression)]
    SR  	[reduce using rule 136 (expression)]
    SRR 	[reduce using rule 136 (expression)]
    '&' 	[reduce using rule 136 (expression)]
    '+' 	[reduce using rule 136 (expression)]
    '-' 	[reduce using rule 136 (expression)]
    '*' 	[reduce using rule 136 (expression)]
    '/' 	[reduce using rule 136 (expression)]
    '%' 	[reduce using rule 136 (expression)]
    '^' 	[reduce using rule 136 (expression)]
    '|' 	[reduce using rule 136 (expression)]
    '<' 	[reduce using rule 136 (expression)]
    '>' 	[reduce using rule 136 (expression)]
    $default	reduce using rule 136 (expression)



state 194

    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression CMP_LE expression .   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    OR  	[reduce using rule 137 (expression)]
    AND 	[reduce using rule 137 (expression)]
    SUBSTR_EQ	[reduce using rule 137 (expression)]
    SUBSTR_NEQ	[reduce using rule 137 (expression)]
    REGEX_EQ	[reduce using rule 137 (expression)]
    REGEX_NEQ	[reduce using rule 137 (expression)]
    POWER	[reduce using rule 137 (expression)]
    CMP_EQ	[reduce using rule 137 (expression)]
    CMP_GE	[reduce using rule 137 (expression)]
    CMP_LE	[reduce using rule 137 (expression)]
    CMP_NEQ	[reduce using rule 137 (expression)]
    SL  	[reduce using rule 137 (expression)]
    SR  	[reduce using rule 137 (expression)]
    SRR 	[reduce using rule 137 (expression)]
    '&' 	[reduce using rule 137 (expression)]
    '+' 	[reduce using rule 137 (expression)]
    '-' 	[reduce using rule 137 (expression)]
    '*' 	[reduce using rule 137 (expression)]
    '/' 	[reduce using rule 137 (expression)]
    '%' 	[reduce using rule 137 (expression)]
    '^' 	[reduce using rule 137 (expression)]
    '|' 	[reduce using rule 137 (expression)]
    '<' 	[reduce using rule 137 (expression)]
    '>' 	[reduce using rule 137 (expression)]
    $default	reduce using rule 137 (expression)



state 195

    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)
    expression  ->  expression CMP_NEQ expression .   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    OR  	[reduce using rule 139 (expression)]
    AND 	[reduce using rule 139 (expression)]
    SUBSTR_EQ	[reduce using rule 139 (expression)]
    SUBSTR_NEQ	[reduce using rule 139 (expression)]
    REGEX_EQ	[reduce using rule 139 (expression)]
    REGEX_NEQ	[reduce using rule 139 (expression)]
    POWER	[reduce using rule 139 (expression)]
    CMP_EQ	[reduce using rule 139 (expression)]
    CMP_GE	[reduce using rule 139 (expression)]
    CMP_LE	[reduce using rule 139 (expression)]
    CMP_NEQ	[reduce using rule 139 (expression)]
    SL  	[reduce using rule 139 (expression)]
    SR  	[reduce using rule 139 (expression)]
    SRR 	[reduce using rule 139 (expression)]
    '&' 	[reduce using rule 139 (expression)]
    '+' 	[reduce using rule 139 (expression)]
    '-' 	[reduce using rule 139 (expression)]
    '*' 	[reduce using rule 139 (expression)]
    '/' 	[reduce using rule 139 (expression)]
    '%' 	[reduce using rule 139 (expression)]
    '^' 	[reduce using rule 139 (expression)]
    '|' 	[reduce using rule 139 (expression)]
    '<' 	[reduce using rule 139 (expression)]
    '>' 	[reduce using rule 139 (expression)]
    $default	reduce using rule 139 (expression)



state 196

    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression SL expression .   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    OR  	[reduce using rule 128 (expression)]
    AND 	[reduce using rule 128 (expression)]
    SUBSTR_EQ	[reduce using rule 128 (expression)]
    SUBSTR_NEQ	[reduce using rule 128 (expression)]
    REGEX_EQ	[reduce using rule 128 (expression)]
    REGEX_NEQ	[reduce using rule 128 (expression)]
    POWER	[reduce using rule 128 (expression)]
    CMP_EQ	[reduce using rule 128 (expression)]
    CMP_GE	[reduce using rule 128 (expression)]
    CMP_LE	[reduce using rule 128 (expression)]
    CMP_NEQ	[reduce using rule 128 (expression)]
    SL  	[reduce using rule 128 (expression)]
    SR  	[reduce using rule 128 (expression)]
    SRR 	[reduce using rule 128 (expression)]
    '&' 	[reduce using rule 128 (expression)]
    '+' 	[reduce using rule 128 (expression)]
    '-' 	[reduce using rule 128 (expression)]
    '*' 	[reduce using rule 128 (expression)]
    '/' 	[reduce using rule 128 (expression)]
    '%' 	[reduce using rule 128 (expression)]
    '^' 	[reduce using rule 128 (expression)]
    '|' 	[reduce using rule 128 (expression)]
    '<' 	[reduce using rule 128 (expression)]
    '>' 	[reduce using rule 128 (expression)]
    $default	reduce using rule 128 (expression)



state 197

    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression SR expression .   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    OR  	[reduce using rule 127 (expression)]
    AND 	[reduce using rule 127 (expression)]
    SUBSTR_EQ	[reduce using rule 127 (expression)]
    SUBSTR_NEQ	[reduce using rule 127 (expression)]
    REGEX_EQ	[reduce using rule 127 (expression)]
    REGEX_NEQ	[reduce using rule 127 (expression)]
    POWER	[reduce using rule 127 (expression)]
    CMP_EQ	[reduce using rule 127 (expression)]
    CMP_GE	[reduce using rule 127 (expression)]
    CMP_LE	[reduce using rule 127 (expression)]
    CMP_NEQ	[reduce using rule 127 (expression)]
    SL  	[reduce using rule 127 (expression)]
    SR  	[reduce using rule 127 (expression)]
    SRR 	[reduce using rule 127 (expression)]
    '&' 	[reduce using rule 127 (expression)]
    '+' 	[reduce using rule 127 (expression)]
    '-' 	[reduce using rule 127 (expression)]
    '*' 	[reduce using rule 127 (expression)]
    '/' 	[reduce using rule 127 (expression)]
    '%' 	[reduce using rule 127 (expression)]
    '^' 	[reduce using rule 127 (expression)]
    '|' 	[reduce using rule 127 (expression)]
    '<' 	[reduce using rule 127 (expression)]
    '>' 	[reduce using rule 127 (expression)]
    $default	reduce using rule 127 (expression)



state 198

    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression SRR expression .   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    OR  	[reduce using rule 129 (expression)]
    AND 	[reduce using rule 129 (expression)]
    SUBSTR_EQ	[reduce using rule 129 (expression)]
    SUBSTR_NEQ	[reduce using rule 129 (expression)]
    REGEX_EQ	[reduce using rule 129 (expression)]
    REGEX_NEQ	[reduce using rule 129 (expression)]
    POWER	[reduce using rule 129 (expression)]
    CMP_EQ	[reduce using rule 129 (expression)]
    CMP_GE	[reduce using rule 129 (expression)]
    CMP_LE	[reduce using rule 129 (expression)]
    CMP_NEQ	[reduce using rule 129 (expression)]
    SL  	[reduce using rule 129 (expression)]
    SR  	[reduce using rule 129 (expression)]
    SRR 	[reduce using rule 129 (expression)]
    '&' 	[reduce using rule 129 (expression)]
    '+' 	[reduce using rule 129 (expression)]
    '-' 	[reduce using rule 129 (expression)]
    '*' 	[reduce using rule 129 (expression)]
    '/' 	[reduce using rule 129 (expression)]
    '%' 	[reduce using rule 129 (expression)]
    '^' 	[reduce using rule 129 (expression)]
    '|' 	[reduce using rule 129 (expression)]
    '<' 	[reduce using rule 129 (expression)]
    '>' 	[reduce using rule 129 (expression)]
    $default	reduce using rule 129 (expression)



state 199

    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression '&' expression .   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    OR  	[reduce using rule 124 (expression)]
    AND 	[reduce using rule 124 (expression)]
    SUBSTR_EQ	[reduce using rule 124 (expression)]
    SUBSTR_NEQ	[reduce using rule 124 (expression)]
    REGEX_EQ	[reduce using rule 124 (expression)]
    REGEX_NEQ	[reduce using rule 124 (expression)]
    POWER	[reduce using rule 124 (expression)]
    CMP_EQ	[reduce using rule 124 (expression)]
    CMP_GE	[reduce using rule 124 (expression)]
    CMP_LE	[reduce using rule 124 (expression)]
    CMP_NEQ	[reduce using rule 124 (expression)]
    SL  	[reduce using rule 124 (expression)]
    SR  	[reduce using rule 124 (expression)]
    SRR 	[reduce using rule 124 (expression)]
    '&' 	[reduce using rule 124 (expression)]
    '+' 	[reduce using rule 124 (expression)]
    '-' 	[reduce using rule 124 (expression)]
    '*' 	[reduce using rule 124 (expression)]
    '/' 	[reduce using rule 124 (expression)]
    '%' 	[reduce using rule 124 (expression)]
    '^' 	[reduce using rule 124 (expression)]
    '|' 	[reduce using rule 124 (expression)]
    '<' 	[reduce using rule 124 (expression)]
    '>' 	[reduce using rule 124 (expression)]
    $default	reduce using rule 124 (expression)



state 200

    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression '+' expression .   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    OR  	[reduce using rule 117 (expression)]
    AND 	[reduce using rule 117 (expression)]
    SUBSTR_EQ	[reduce using rule 117 (expression)]
    SUBSTR_NEQ	[reduce using rule 117 (expression)]
    REGEX_EQ	[reduce using rule 117 (expression)]
    REGEX_NEQ	[reduce using rule 117 (expression)]
    POWER	[reduce using rule 117 (expression)]
    CMP_EQ	[reduce using rule 117 (expression)]
    CMP_GE	[reduce using rule 117 (expression)]
    CMP_LE	[reduce using rule 117 (expression)]
    CMP_NEQ	[reduce using rule 117 (expression)]
    SL  	[reduce using rule 117 (expression)]
    SR  	[reduce using rule 117 (expression)]
    SRR 	[reduce using rule 117 (expression)]
    '&' 	[reduce using rule 117 (expression)]
    '+' 	[reduce using rule 117 (expression)]
    '-' 	[reduce using rule 117 (expression)]
    '*' 	[reduce using rule 117 (expression)]
    '/' 	[reduce using rule 117 (expression)]
    '%' 	[reduce using rule 117 (expression)]
    '^' 	[reduce using rule 117 (expression)]
    '|' 	[reduce using rule 117 (expression)]
    '<' 	[reduce using rule 117 (expression)]
    '>' 	[reduce using rule 117 (expression)]
    $default	reduce using rule 117 (expression)



state 201

    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression '-' expression .   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    OR  	[reduce using rule 118 (expression)]
    AND 	[reduce using rule 118 (expression)]
    SUBSTR_EQ	[reduce using rule 118 (expression)]
    SUBSTR_NEQ	[reduce using rule 118 (expression)]
    REGEX_EQ	[reduce using rule 118 (expression)]
    REGEX_NEQ	[reduce using rule 118 (expression)]
    POWER	[reduce using rule 118 (expression)]
    CMP_EQ	[reduce using rule 118 (expression)]
    CMP_GE	[reduce using rule 118 (expression)]
    CMP_LE	[reduce using rule 118 (expression)]
    CMP_NEQ	[reduce using rule 118 (expression)]
    SL  	[reduce using rule 118 (expression)]
    SR  	[reduce using rule 118 (expression)]
    SRR 	[reduce using rule 118 (expression)]
    '&' 	[reduce using rule 118 (expression)]
    '+' 	[reduce using rule 118 (expression)]
    '-' 	[reduce using rule 118 (expression)]
    '*' 	[reduce using rule 118 (expression)]
    '/' 	[reduce using rule 118 (expression)]
    '%' 	[reduce using rule 118 (expression)]
    '^' 	[reduce using rule 118 (expression)]
    '|' 	[reduce using rule 118 (expression)]
    '<' 	[reduce using rule 118 (expression)]
    '>' 	[reduce using rule 118 (expression)]
    $default	reduce using rule 118 (expression)



state 202

    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression '*' expression .   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    OR  	[reduce using rule 120 (expression)]
    AND 	[reduce using rule 120 (expression)]
    SUBSTR_EQ	[reduce using rule 120 (expression)]
    SUBSTR_NEQ	[reduce using rule 120 (expression)]
    REGEX_EQ	[reduce using rule 120 (expression)]
    REGEX_NEQ	[reduce using rule 120 (expression)]
    POWER	[reduce using rule 120 (expression)]
    CMP_EQ	[reduce using rule 120 (expression)]
    CMP_GE	[reduce using rule 120 (expression)]
    CMP_LE	[reduce using rule 120 (expression)]
    CMP_NEQ	[reduce using rule 120 (expression)]
    SL  	[reduce using rule 120 (expression)]
    SR  	[reduce using rule 120 (expression)]
    SRR 	[reduce using rule 120 (expression)]
    '&' 	[reduce using rule 120 (expression)]
    '+' 	[reduce using rule 120 (expression)]
    '-' 	[reduce using rule 120 (expression)]
    '*' 	[reduce using rule 120 (expression)]
    '/' 	[reduce using rule 120 (expression)]
    '%' 	[reduce using rule 120 (expression)]
    '^' 	[reduce using rule 120 (expression)]
    '|' 	[reduce using rule 120 (expression)]
    '<' 	[reduce using rule 120 (expression)]
    '>' 	[reduce using rule 120 (expression)]
    $default	reduce using rule 120 (expression)



state 203

    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression '/' expression .   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    OR  	[reduce using rule 122 (expression)]
    AND 	[reduce using rule 122 (expression)]
    SUBSTR_EQ	[reduce using rule 122 (expression)]
    SUBSTR_NEQ	[reduce using rule 122 (expression)]
    REGEX_EQ	[reduce using rule 122 (expression)]
    REGEX_NEQ	[reduce using rule 122 (expression)]
    POWER	[reduce using rule 122 (expression)]
    CMP_EQ	[reduce using rule 122 (expression)]
    CMP_GE	[reduce using rule 122 (expression)]
    CMP_LE	[reduce using rule 122 (expression)]
    CMP_NEQ	[reduce using rule 122 (expression)]
    SL  	[reduce using rule 122 (expression)]
    SR  	[reduce using rule 122 (expression)]
    SRR 	[reduce using rule 122 (expression)]
    '&' 	[reduce using rule 122 (expression)]
    '+' 	[reduce using rule 122 (expression)]
    '-' 	[reduce using rule 122 (expression)]
    '*' 	[reduce using rule 122 (expression)]
    '/' 	[reduce using rule 122 (expression)]
    '%' 	[reduce using rule 122 (expression)]
    '^' 	[reduce using rule 122 (expression)]
    '|' 	[reduce using rule 122 (expression)]
    '<' 	[reduce using rule 122 (expression)]
    '>' 	[reduce using rule 122 (expression)]
    $default	reduce using rule 122 (expression)



state 204

    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression '%' expression .   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    OR  	[reduce using rule 123 (expression)]
    AND 	[reduce using rule 123 (expression)]
    SUBSTR_EQ	[reduce using rule 123 (expression)]
    SUBSTR_NEQ	[reduce using rule 123 (expression)]
    REGEX_EQ	[reduce using rule 123 (expression)]
    REGEX_NEQ	[reduce using rule 123 (expression)]
    POWER	[reduce using rule 123 (expression)]
    CMP_EQ	[reduce using rule 123 (expression)]
    CMP_GE	[reduce using rule 123 (expression)]
    CMP_LE	[reduce using rule 123 (expression)]
    CMP_NEQ	[reduce using rule 123 (expression)]
    SL  	[reduce using rule 123 (expression)]
    SR  	[reduce using rule 123 (expression)]
    SRR 	[reduce using rule 123 (expression)]
    '&' 	[reduce using rule 123 (expression)]
    '+' 	[reduce using rule 123 (expression)]
    '-' 	[reduce using rule 123 (expression)]
    '*' 	[reduce using rule 123 (expression)]
    '/' 	[reduce using rule 123 (expression)]
    '%' 	[reduce using rule 123 (expression)]
    '^' 	[reduce using rule 123 (expression)]
    '|' 	[reduce using rule 123 (expression)]
    '<' 	[reduce using rule 123 (expression)]
    '>' 	[reduce using rule 123 (expression)]
    $default	reduce using rule 123 (expression)



state 205

    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression '^' expression .   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    OR  	[reduce using rule 125 (expression)]
    AND 	[reduce using rule 125 (expression)]
    SUBSTR_EQ	[reduce using rule 125 (expression)]
    SUBSTR_NEQ	[reduce using rule 125 (expression)]
    REGEX_EQ	[reduce using rule 125 (expression)]
    REGEX_NEQ	[reduce using rule 125 (expression)]
    POWER	[reduce using rule 125 (expression)]
    CMP_EQ	[reduce using rule 125 (expression)]
    CMP_GE	[reduce using rule 125 (expression)]
    CMP_LE	[reduce using rule 125 (expression)]
    CMP_NEQ	[reduce using rule 125 (expression)]
    SL  	[reduce using rule 125 (expression)]
    SR  	[reduce using rule 125 (expression)]
    SRR 	[reduce using rule 125 (expression)]
    '&' 	[reduce using rule 125 (expression)]
    '+' 	[reduce using rule 125 (expression)]
    '-' 	[reduce using rule 125 (expression)]
    '*' 	[reduce using rule 125 (expression)]
    '/' 	[reduce using rule 125 (expression)]
    '%' 	[reduce using rule 125 (expression)]
    '^' 	[reduce using rule 125 (expression)]
    '|' 	[reduce using rule 125 (expression)]
    '<' 	[reduce using rule 125 (expression)]
    '>' 	[reduce using rule 125 (expression)]
    $default	reduce using rule 125 (expression)



state 206

    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression '|' expression .   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    OR  	[reduce using rule 126 (expression)]
    AND 	[reduce using rule 126 (expression)]
    SUBSTR_EQ	[reduce using rule 126 (expression)]
    SUBSTR_NEQ	[reduce using rule 126 (expression)]
    REGEX_EQ	[reduce using rule 126 (expression)]
    REGEX_NEQ	[reduce using rule 126 (expression)]
    POWER	[reduce using rule 126 (expression)]
    CMP_EQ	[reduce using rule 126 (expression)]
    CMP_GE	[reduce using rule 126 (expression)]
    CMP_LE	[reduce using rule 126 (expression)]
    CMP_NEQ	[reduce using rule 126 (expression)]
    SL  	[reduce using rule 126 (expression)]
    SR  	[reduce using rule 126 (expression)]
    SRR 	[reduce using rule 126 (expression)]
    '&' 	[reduce using rule 126 (expression)]
    '+' 	[reduce using rule 126 (expression)]
    '-' 	[reduce using rule 126 (expression)]
    '*' 	[reduce using rule 126 (expression)]
    '/' 	[reduce using rule 126 (expression)]
    '%' 	[reduce using rule 126 (expression)]
    '^' 	[reduce using rule 126 (expression)]
    '|' 	[reduce using rule 126 (expression)]
    '<' 	[reduce using rule 126 (expression)]
    '>' 	[reduce using rule 126 (expression)]
    $default	reduce using rule 126 (expression)



state 207

    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression '<' expression .   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    OR  	[reduce using rule 134 (expression)]
    AND 	[reduce using rule 134 (expression)]
    SUBSTR_EQ	[reduce using rule 134 (expression)]
    SUBSTR_NEQ	[reduce using rule 134 (expression)]
    REGEX_EQ	[reduce using rule 134 (expression)]
    REGEX_NEQ	[reduce using rule 134 (expression)]
    POWER	[reduce using rule 134 (expression)]
    CMP_EQ	[reduce using rule 134 (expression)]
    CMP_GE	[reduce using rule 134 (expression)]
    CMP_LE	[reduce using rule 134 (expression)]
    CMP_NEQ	[reduce using rule 134 (expression)]
    SL  	[reduce using rule 134 (expression)]
    SR  	[reduce using rule 134 (expression)]
    SRR 	[reduce using rule 134 (expression)]
    '&' 	[reduce using rule 134 (expression)]
    '+' 	[reduce using rule 134 (expression)]
    '-' 	[reduce using rule 134 (expression)]
    '*' 	[reduce using rule 134 (expression)]
    '/' 	[reduce using rule 134 (expression)]
    '%' 	[reduce using rule 134 (expression)]
    '^' 	[reduce using rule 134 (expression)]
    '|' 	[reduce using rule 134 (expression)]
    '<' 	[reduce using rule 134 (expression)]
    '>' 	[reduce using rule 134 (expression)]
    $default	reduce using rule 134 (expression)



state 208

    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression '>' expression .   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    OR  	[reduce using rule 135 (expression)]
    AND 	[reduce using rule 135 (expression)]
    SUBSTR_EQ	[reduce using rule 135 (expression)]
    SUBSTR_NEQ	[reduce using rule 135 (expression)]
    REGEX_EQ	[reduce using rule 135 (expression)]
    REGEX_NEQ	[reduce using rule 135 (expression)]
    POWER	[reduce using rule 135 (expression)]
    CMP_EQ	[reduce using rule 135 (expression)]
    CMP_GE	[reduce using rule 135 (expression)]
    CMP_LE	[reduce using rule 135 (expression)]
    CMP_NEQ	[reduce using rule 135 (expression)]
    SL  	[reduce using rule 135 (expression)]
    SR  	[reduce using rule 135 (expression)]
    SRR 	[reduce using rule 135 (expression)]
    '&' 	[reduce using rule 135 (expression)]
    '+' 	[reduce using rule 135 (expression)]
    '-' 	[reduce using rule 135 (expression)]
    '*' 	[reduce using rule 135 (expression)]
    '/' 	[reduce using rule 135 (expression)]
    '%' 	[reduce using rule 135 (expression)]
    '^' 	[reduce using rule 135 (expression)]
    '|' 	[reduce using rule 135 (expression)]
    '<' 	[reduce using rule 135 (expression)]
    '>' 	[reduce using rule 135 (expression)]
    $default	reduce using rule 135 (expression)



state 209

    for_loop  ->  FOR '(' expression ';' . expression ';' expression ')' block   (rule 75)
    for_loop  ->  FOR '(' expression ';' . expression ';' expression ')' command   (rule 76)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 235



state 210

    foreach_loop  ->  FOREACH '(' identifier IN_ITER . expression ')' block   (rule 79)
    foreach_loop  ->  FOREACH '(' identifier IN_ITER . expression ')' command   (rule 80)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 236



state 211

    foreach_loop  ->  FOREACH identifier '(' expression . ')' block   (rule 77)
    foreach_loop  ->  FOREACH identifier '(' expression . ')' command   (rule 78)
    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    ')' 	shift, and go to state 237
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133



state 212

    while_loop  ->  WHILE '(' expression ')' . block   (rule 83)
    while_loop  ->  WHILE '(' expression ')' . command   (rule 84)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20
    '{' 	shift, and go to state 76
    '[' 	shift, and go to state 77

    LOCAL	[reduce using rule 91 (block)]
    GLOBAL	[reduce using rule 91 (block)]
    IF  	[reduce using rule 91 (block)]
    INCLUDE	[reduce using rule 91 (block)]
    IMPORT	[reduce using rule 91 (block)]
    RETURN	[reduce using rule 91 (block)]
    BREAK	[reduce using rule 91 (block)]
    CONTINUE	[reduce using rule 91 (block)]
    FOR 	[reduce using rule 91 (block)]
    FOREACH	[reduce using rule 91 (block)]
    IN_ITER	[reduce using rule 91 (block)]
    WHILE	[reduce using rule 91 (block)]
    REPEAT	[reduce using rule 91 (block)]
    IDENT	[reduce using rule 91 (block)]
    DEC 	[reduce using rule 91 (block)]
    INC 	[reduce using rule 91 (block)]
    ';' 	[reduce using rule 91 (block)]
    $default	reduce using rule 91 (block)

    command	go to state 238
    simple	go to state 25
    break	go to state 26
    continue	go to state 27
    import	go to state 28
    include	go to state 29
    return	go to state 30
    empty	go to state 31
    global	go to state 32
    local	go to state 33
    rep 	go to state 34
    call_function	go to state 35
    assign	go to state 36
    inc_dec_exp	go to state 37
    assign_math_op	go to state 38
    assign_shift_op	go to state 39
    identifier	go to state 40
    compound	go to state 41
    for_loop	go to state 42
    foreach_loop	go to state 43
    repeat_loop	go to state 44
    while_loop	go to state 45
    if_cond	go to state 46
    block	go to state 239



state 213

    ref  ->  '@' IDENT .   (rule 69)

    $default	reduce using rule 69 (ref)



state 214

    block  ->  '{' line '}' .   (rule 93)

    $default	reduce using rule 93 (block)



state 215

    argument  ->  identifier ':' . expression   (rule 108)
    argument  ->  identifier ':' . ref   (rule 109)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '@' 	shift, and go to state 138
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    ref 	go to state 240
    expression	go to state 241



state 216

    argument  ->  integer ':' . expression   (rule 105)
    argument  ->  integer ':' . ref   (rule 107)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '@' 	shift, and go to state 138
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    ref 	go to state 242
    expression	go to state 243



state 217

    argument  ->  string ':' . expression   (rule 104)
    argument  ->  string ':' . ref   (rule 106)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '@' 	shift, and go to state 138
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    ref 	go to state 244
    expression	go to state 245



state 218

    argument_list  ->  argument_list ',' . argument   (rule 102)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '@' 	shift, and go to state 138
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    identifier	go to state 149
    integer	go to state 142
    string	go to state 143
    ip  	go to state 67
    null	go to state 68
    ref 	go to state 144
    argument	go to state 246
    expression	go to state 147



state 219

    block  ->  '{' argument_list '}' .   (rule 94)

    $default	reduce using rule 94 (block)



state 220

    block  ->  '[' argument_list ']' .   (rule 96)

    $default	reduce using rule 96 (block)



state 221

    repeat_loop  ->  REPEAT command UNTIL expression . ';'   (rule 82)
    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    ';' 	shift, and go to state 247
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133



state 222

    repeat_loop  ->  REPEAT block UNTIL expression . ';'   (rule 81)
    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    ';' 	shift, and go to state 248
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133



state 223

    rep  ->  call_function REP expression ';' .   (rule 40)

    $default	reduce using rule 40 (rep)



state 224

    call_function  ->  identifier '(' ')' ';' .   (rule 42)

    $default	reduce using rule 42 (call_function)



state 225

    call_function  ->  identifier '(' argument_list ')' . ';'   (rule 41)

    ';' 	shift, and go to state 249



state 226

    function  ->  FUNCTION identifier '(' ')' block .   (rule 9)

    $default	reduce using rule 9 (function)



state 227

    parameter  ->  '&' identifier .   (rule 13)

    $default	reduce using rule 13 (parameter)



state 228

    function  ->  FUNCTION identifier '(' parameters ')' . block   (rule 8)

    '{' 	shift, and go to state 76
    '[' 	shift, and go to state 77

    $default	reduce using rule 91 (block)

    block	go to state 250



state 229

    parameters  ->  parameter ',' . parameters   (rule 10)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    TRUE	shift, and go to state 60
    '&' 	shift, and go to state 170

    parameters	go to state 251
    parameter	go to state 172
    assign	go to state 173
    assign_math_op	go to state 38
    assign_shift_op	go to state 39
    identifier	go to state 174
    integer	go to state 175
    string	go to state 176



state 230

    if_cond  ->  IF '(' expression ')' command .   (rule 86)
    if_cond  ->  IF '(' expression ')' command . ELSE block   (rule 89)
    if_cond  ->  IF '(' expression ')' command . ELSE command   (rule 90)

    ELSE	shift, and go to state 252

    ELSE	[reduce using rule 86 (if_cond)]
    $default	reduce using rule 86 (if_cond)



state 231

    if_cond  ->  IF '(' expression ')' block .   (rule 85)
    if_cond  ->  IF '(' expression ')' block . ELSE command   (rule 87)
    if_cond  ->  IF '(' expression ')' block . ELSE block   (rule 88)

    ELSE	shift, and go to state 253

    ELSE	[reduce using rule 85 (if_cond)]
    $default	reduce using rule 85 (if_cond)



state 232

    include  ->  INCLUDE '(' string ')' ';' .   (rule 34)

    $default	reduce using rule 34 (include)



state 233

    import  ->  IMPORT '(' string ')' ';' .   (rule 33)

    $default	reduce using rule 33 (import)



state 234

    ip  ->  integer '.' integer '.' . integer '.' integer   (rule 67)

    INT 	shift, and go to state 56
    FALSE	shift, and go to state 58
    TRUE	shift, and go to state 60

    integer	go to state 254



state 235

    for_loop  ->  FOR '(' expression ';' expression . ';' expression ')' block   (rule 75)
    for_loop  ->  FOR '(' expression ';' expression . ';' expression ')' command   (rule 76)
    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    ';' 	shift, and go to state 255
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133



state 236

    foreach_loop  ->  FOREACH '(' identifier IN_ITER expression . ')' block   (rule 79)
    foreach_loop  ->  FOREACH '(' identifier IN_ITER expression . ')' command   (rule 80)
    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    ')' 	shift, and go to state 256
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133



state 237

    foreach_loop  ->  FOREACH identifier '(' expression ')' . block   (rule 77)
    foreach_loop  ->  FOREACH identifier '(' expression ')' . command   (rule 78)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20
    '{' 	shift, and go to state 76
    '[' 	shift, and go to state 77

    LOCAL	[reduce using rule 91 (block)]
    GLOBAL	[reduce using rule 91 (block)]
    IF  	[reduce using rule 91 (block)]
    INCLUDE	[reduce using rule 91 (block)]
    IMPORT	[reduce using rule 91 (block)]
    RETURN	[reduce using rule 91 (block)]
    BREAK	[reduce using rule 91 (block)]
    CONTINUE	[reduce using rule 91 (block)]
    FOR 	[reduce using rule 91 (block)]
    FOREACH	[reduce using rule 91 (block)]
    IN_ITER	[reduce using rule 91 (block)]
    WHILE	[reduce using rule 91 (block)]
    REPEAT	[reduce using rule 91 (block)]
    IDENT	[reduce using rule 91 (block)]
    DEC 	[reduce using rule 91 (block)]
    INC 	[reduce using rule 91 (block)]
    ';' 	[reduce using rule 91 (block)]
    $default	reduce using rule 91 (block)

    command	go to state 257
    simple	go to state 25
    break	go to state 26
    continue	go to state 27
    import	go to state 28
    include	go to state 29
    return	go to state 30
    empty	go to state 31
    global	go to state 32
    local	go to state 33
    rep 	go to state 34
    call_function	go to state 35
    assign	go to state 36
    inc_dec_exp	go to state 37
    assign_math_op	go to state 38
    assign_shift_op	go to state 39
    identifier	go to state 40
    compound	go to state 41
    for_loop	go to state 42
    foreach_loop	go to state 43
    repeat_loop	go to state 44
    while_loop	go to state 45
    if_cond	go to state 46
    block	go to state 258



state 238

    while_loop  ->  WHILE '(' expression ')' command .   (rule 84)

    $default	reduce using rule 84 (while_loop)



state 239

    while_loop  ->  WHILE '(' expression ')' block .   (rule 83)

    $default	reduce using rule 83 (while_loop)



state 240

    argument  ->  identifier ':' ref .   (rule 109)

    $default	reduce using rule 109 (argument)



state 241

    argument  ->  identifier ':' expression .   (rule 108)
    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    $default	reduce using rule 108 (argument)



state 242

    argument  ->  integer ':' ref .   (rule 107)

    $default	reduce using rule 107 (argument)



state 243

    argument  ->  integer ':' expression .   (rule 105)
    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    $default	reduce using rule 105 (argument)



state 244

    argument  ->  string ':' ref .   (rule 106)

    $default	reduce using rule 106 (argument)



state 245

    argument  ->  string ':' expression .   (rule 104)
    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133

    $default	reduce using rule 104 (argument)



state 246

    argument_list  ->  argument_list ',' argument .   (rule 102)

    $default	reduce using rule 102 (argument_list)



state 247

    repeat_loop  ->  REPEAT command UNTIL expression ';' .   (rule 82)

    $default	reduce using rule 82 (repeat_loop)



state 248

    repeat_loop  ->  REPEAT block UNTIL expression ';' .   (rule 81)

    $default	reduce using rule 81 (repeat_loop)



state 249

    call_function  ->  identifier '(' argument_list ')' ';' .   (rule 41)

    $default	reduce using rule 41 (call_function)



state 250

    function  ->  FUNCTION identifier '(' parameters ')' block .   (rule 8)

    $default	reduce using rule 8 (function)



state 251

    parameters  ->  parameter ',' parameters .   (rule 10)

    $default	reduce using rule 10 (parameters)



state 252

    if_cond  ->  IF '(' expression ')' command ELSE . block   (rule 89)
    if_cond  ->  IF '(' expression ')' command ELSE . command   (rule 90)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20
    '{' 	shift, and go to state 76
    '[' 	shift, and go to state 77

    LOCAL	[reduce using rule 91 (block)]
    GLOBAL	[reduce using rule 91 (block)]
    IF  	[reduce using rule 91 (block)]
    INCLUDE	[reduce using rule 91 (block)]
    IMPORT	[reduce using rule 91 (block)]
    RETURN	[reduce using rule 91 (block)]
    BREAK	[reduce using rule 91 (block)]
    CONTINUE	[reduce using rule 91 (block)]
    FOR 	[reduce using rule 91 (block)]
    FOREACH	[reduce using rule 91 (block)]
    IN_ITER	[reduce using rule 91 (block)]
    WHILE	[reduce using rule 91 (block)]
    REPEAT	[reduce using rule 91 (block)]
    IDENT	[reduce using rule 91 (block)]
    DEC 	[reduce using rule 91 (block)]
    INC 	[reduce using rule 91 (block)]
    ';' 	[reduce using rule 91 (block)]
    $default	reduce using rule 91 (block)

    command	go to state 259
    simple	go to state 25
    break	go to state 26
    continue	go to state 27
    import	go to state 28
    include	go to state 29
    return	go to state 30
    empty	go to state 31
    global	go to state 32
    local	go to state 33
    rep 	go to state 34
    call_function	go to state 35
    assign	go to state 36
    inc_dec_exp	go to state 37
    assign_math_op	go to state 38
    assign_shift_op	go to state 39
    identifier	go to state 40
    compound	go to state 41
    for_loop	go to state 42
    foreach_loop	go to state 43
    repeat_loop	go to state 44
    while_loop	go to state 45
    if_cond	go to state 46
    block	go to state 260



state 253

    if_cond  ->  IF '(' expression ')' block ELSE . command   (rule 87)
    if_cond  ->  IF '(' expression ')' block ELSE . block   (rule 88)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20
    '{' 	shift, and go to state 76
    '[' 	shift, and go to state 77

    LOCAL	[reduce using rule 91 (block)]
    GLOBAL	[reduce using rule 91 (block)]
    IF  	[reduce using rule 91 (block)]
    INCLUDE	[reduce using rule 91 (block)]
    IMPORT	[reduce using rule 91 (block)]
    RETURN	[reduce using rule 91 (block)]
    BREAK	[reduce using rule 91 (block)]
    CONTINUE	[reduce using rule 91 (block)]
    FOR 	[reduce using rule 91 (block)]
    FOREACH	[reduce using rule 91 (block)]
    IN_ITER	[reduce using rule 91 (block)]
    WHILE	[reduce using rule 91 (block)]
    REPEAT	[reduce using rule 91 (block)]
    IDENT	[reduce using rule 91 (block)]
    DEC 	[reduce using rule 91 (block)]
    INC 	[reduce using rule 91 (block)]
    ';' 	[reduce using rule 91 (block)]
    $default	reduce using rule 91 (block)

    command	go to state 261
    simple	go to state 25
    break	go to state 26
    continue	go to state 27
    import	go to state 28
    include	go to state 29
    return	go to state 30
    empty	go to state 31
    global	go to state 32
    local	go to state 33
    rep 	go to state 34
    call_function	go to state 35
    assign	go to state 36
    inc_dec_exp	go to state 37
    assign_math_op	go to state 38
    assign_shift_op	go to state 39
    identifier	go to state 40
    compound	go to state 41
    for_loop	go to state 42
    foreach_loop	go to state 43
    repeat_loop	go to state 44
    while_loop	go to state 45
    if_cond	go to state 46
    block	go to state 262



state 254

    ip  ->  integer '.' integer '.' integer . '.' integer   (rule 67)

    '.' 	shift, and go to state 263



state 255

    for_loop  ->  FOR '(' expression ';' expression ';' . expression ')' block   (rule 75)
    for_loop  ->  FOR '(' expression ';' expression ';' . expression ')' command   (rule 76)

    INT 	shift, and go to state 56
    STRING	shift, and go to state 57
    FALSE	shift, and go to state 58
    _NULL_	shift, and go to state 59
    TRUE	shift, and go to state 60
    '(' 	shift, and go to state 61
    '!' 	shift, and go to state 63
    '-' 	shift, and go to state 64

    '-' 	[reduce using rule 112 (expression)]
    $default	reduce using rule 112 (expression)

    integer	go to state 65
    string	go to state 66
    ip  	go to state 67
    null	go to state 68
    expression	go to state 264



state 256

    foreach_loop  ->  FOREACH '(' identifier IN_ITER expression ')' . block   (rule 79)
    foreach_loop  ->  FOREACH '(' identifier IN_ITER expression ')' . command   (rule 80)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20
    '{' 	shift, and go to state 76
    '[' 	shift, and go to state 77

    LOCAL	[reduce using rule 91 (block)]
    GLOBAL	[reduce using rule 91 (block)]
    IF  	[reduce using rule 91 (block)]
    INCLUDE	[reduce using rule 91 (block)]
    IMPORT	[reduce using rule 91 (block)]
    RETURN	[reduce using rule 91 (block)]
    BREAK	[reduce using rule 91 (block)]
    CONTINUE	[reduce using rule 91 (block)]
    FOR 	[reduce using rule 91 (block)]
    FOREACH	[reduce using rule 91 (block)]
    IN_ITER	[reduce using rule 91 (block)]
    WHILE	[reduce using rule 91 (block)]
    REPEAT	[reduce using rule 91 (block)]
    IDENT	[reduce using rule 91 (block)]
    DEC 	[reduce using rule 91 (block)]
    INC 	[reduce using rule 91 (block)]
    ';' 	[reduce using rule 91 (block)]
    $default	reduce using rule 91 (block)

    command	go to state 265
    simple	go to state 25
    break	go to state 26
    continue	go to state 27
    import	go to state 28
    include	go to state 29
    return	go to state 30
    empty	go to state 31
    global	go to state 32
    local	go to state 33
    rep 	go to state 34
    call_function	go to state 35
    assign	go to state 36
    inc_dec_exp	go to state 37
    assign_math_op	go to state 38
    assign_shift_op	go to state 39
    identifier	go to state 40
    compound	go to state 41
    for_loop	go to state 42
    foreach_loop	go to state 43
    repeat_loop	go to state 44
    while_loop	go to state 45
    if_cond	go to state 46
    block	go to state 266



state 257

    foreach_loop  ->  FOREACH identifier '(' expression ')' command .   (rule 78)

    $default	reduce using rule 78 (foreach_loop)



state 258

    foreach_loop  ->  FOREACH identifier '(' expression ')' block .   (rule 77)

    $default	reduce using rule 77 (foreach_loop)



state 259

    if_cond  ->  IF '(' expression ')' command ELSE command .   (rule 90)

    $default	reduce using rule 90 (if_cond)



state 260

    if_cond  ->  IF '(' expression ')' command ELSE block .   (rule 89)

    $default	reduce using rule 89 (if_cond)



state 261

    if_cond  ->  IF '(' expression ')' block ELSE command .   (rule 87)

    $default	reduce using rule 87 (if_cond)



state 262

    if_cond  ->  IF '(' expression ')' block ELSE block .   (rule 88)

    $default	reduce using rule 88 (if_cond)



state 263

    ip  ->  integer '.' integer '.' integer '.' . integer   (rule 67)

    INT 	shift, and go to state 56
    FALSE	shift, and go to state 58
    TRUE	shift, and go to state 60

    integer	go to state 267



state 264

    for_loop  ->  FOR '(' expression ';' expression ';' expression . ')' block   (rule 75)
    for_loop  ->  FOR '(' expression ';' expression ';' expression . ')' command   (rule 76)
    expression  ->  expression . AND expression   (rule 114)
    expression  ->  expression . OR expression   (rule 116)
    expression  ->  expression . '+' expression   (rule 117)
    expression  ->  expression . '-' expression   (rule 118)
    expression  ->  expression . '*' expression   (rule 120)
    expression  ->  expression . POWER expression   (rule 121)
    expression  ->  expression . '/' expression   (rule 122)
    expression  ->  expression . '%' expression   (rule 123)
    expression  ->  expression . '&' expression   (rule 124)
    expression  ->  expression . '^' expression   (rule 125)
    expression  ->  expression . '|' expression   (rule 126)
    expression  ->  expression . SR expression   (rule 127)
    expression  ->  expression . SL expression   (rule 128)
    expression  ->  expression . SRR expression   (rule 129)
    expression  ->  expression . SUBSTR_EQ expression   (rule 130)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 131)
    expression  ->  expression . REGEX_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_EQ expression   (rule 133)
    expression  ->  expression . '<' expression   (rule 134)
    expression  ->  expression . '>' expression   (rule 135)
    expression  ->  expression . CMP_GE expression   (rule 136)
    expression  ->  expression . CMP_LE expression   (rule 137)
    expression  ->  expression . CMP_EQ expression   (rule 138)
    expression  ->  expression . CMP_NEQ expression   (rule 139)

    OR  	shift, and go to state 109
    AND 	shift, and go to state 110
    SUBSTR_EQ	shift, and go to state 111
    SUBSTR_NEQ	shift, and go to state 112
    REGEX_EQ	shift, and go to state 113
    REGEX_NEQ	shift, and go to state 114
    POWER	shift, and go to state 115
    CMP_EQ	shift, and go to state 116
    CMP_GE	shift, and go to state 117
    CMP_LE	shift, and go to state 118
    CMP_NEQ	shift, and go to state 119
    SL  	shift, and go to state 120
    SR  	shift, and go to state 121
    SRR 	shift, and go to state 122
    ')' 	shift, and go to state 268
    '&' 	shift, and go to state 123
    '+' 	shift, and go to state 125
    '-' 	shift, and go to state 126
    '*' 	shift, and go to state 127
    '/' 	shift, and go to state 128
    '%' 	shift, and go to state 129
    '^' 	shift, and go to state 130
    '|' 	shift, and go to state 131
    '<' 	shift, and go to state 132
    '>' 	shift, and go to state 133



state 265

    foreach_loop  ->  FOREACH '(' identifier IN_ITER expression ')' command .   (rule 80)

    $default	reduce using rule 80 (foreach_loop)



state 266

    foreach_loop  ->  FOREACH '(' identifier IN_ITER expression ')' block .   (rule 79)

    $default	reduce using rule 79 (foreach_loop)



state 267

    ip  ->  integer '.' integer '.' integer '.' integer .   (rule 67)

    $default	reduce using rule 67 (ip)



state 268

    for_loop  ->  FOR '(' expression ';' expression ';' expression ')' . block   (rule 75)
    for_loop  ->  FOR '(' expression ';' expression ';' expression ')' . command   (rule 76)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20
    '{' 	shift, and go to state 76
    '[' 	shift, and go to state 77

    LOCAL	[reduce using rule 91 (block)]
    GLOBAL	[reduce using rule 91 (block)]
    IF  	[reduce using rule 91 (block)]
    INCLUDE	[reduce using rule 91 (block)]
    IMPORT	[reduce using rule 91 (block)]
    RETURN	[reduce using rule 91 (block)]
    BREAK	[reduce using rule 91 (block)]
    CONTINUE	[reduce using rule 91 (block)]
    FOR 	[reduce using rule 91 (block)]
    FOREACH	[reduce using rule 91 (block)]
    IN_ITER	[reduce using rule 91 (block)]
    WHILE	[reduce using rule 91 (block)]
    REPEAT	[reduce using rule 91 (block)]
    IDENT	[reduce using rule 91 (block)]
    DEC 	[reduce using rule 91 (block)]
    INC 	[reduce using rule 91 (block)]
    ';' 	[reduce using rule 91 (block)]
    $default	reduce using rule 91 (block)

    command	go to state 269
    simple	go to state 25
    break	go to state 26
    continue	go to state 27
    import	go to state 28
    include	go to state 29
    return	go to state 30
    empty	go to state 31
    global	go to state 32
    local	go to state 33
    rep 	go to state 34
    call_function	go to state 35
    assign	go to state 36
    inc_dec_exp	go to state 37
    assign_math_op	go to state 38
    assign_shift_op	go to state 39
    identifier	go to state 40
    compound	go to state 41
    for_loop	go to state 42
    foreach_loop	go to state 43
    repeat_loop	go to state 44
    while_loop	go to state 45
    if_cond	go to state 46
    block	go to state 270



state 269

    for_loop  ->  FOR '(' expression ';' expression ';' expression ')' command .   (rule 76)

    $default	reduce using rule 76 (for_loop)



state 270

    for_loop  ->  FOR '(' expression ';' expression ';' expression ')' block .   (rule 75)

    $default	reduce using rule 75 (for_loop)



state 271

    $   	go to state 272



state 272

    $   	go to state 273



state 273

    $default	accept
