State 9 contains 1 shift/reduce conflict.
State 53 contains 1 shift/reduce conflict.
State 62 contains 1 shift/reduce conflict.
State 64 contains 3 shift/reduce conflicts.
State 65 contains 3 shift/reduce conflicts.
State 75 contains 1 shift/reduce conflict.
State 78 contains 1 shift/reduce conflict.
State 79 contains 2 shift/reduce conflicts.
State 80 contains 2 shift/reduce conflicts.
State 86 contains 1 shift/reduce conflict.
State 87 contains 3 shift/reduce conflicts.
State 88 contains 3 shift/reduce conflicts.
State 91 contains 3 shift/reduce conflicts.
State 92 contains 3 shift/reduce conflicts.
State 93 contains 3 shift/reduce conflicts.
State 94 contains 3 shift/reduce conflicts.
State 95 contains 3 shift/reduce conflicts.
State 96 contains 3 shift/reduce conflicts.
State 98 contains 3 shift/reduce conflicts.
State 100 contains 1 shift/reduce conflict.
State 109 contains 24 shift/reduce conflicts.
State 110 contains 24 shift/reduce conflicts.
State 112 contains 3 shift/reduce conflicts.
State 113 contains 3 shift/reduce conflicts.
State 114 contains 3 shift/reduce conflicts.
State 115 contains 3 shift/reduce conflicts.
State 116 contains 3 shift/reduce conflicts.
State 117 contains 3 shift/reduce conflicts.
State 118 contains 3 shift/reduce conflicts.
State 119 contains 3 shift/reduce conflicts.
State 120 contains 3 shift/reduce conflicts.
State 121 contains 3 shift/reduce conflicts.
State 122 contains 3 shift/reduce conflicts.
State 123 contains 3 shift/reduce conflicts.
State 124 contains 3 shift/reduce conflicts.
State 125 contains 3 shift/reduce conflicts.
State 126 contains 3 shift/reduce conflicts.
State 128 contains 3 shift/reduce conflicts.
State 129 contains 3 shift/reduce conflicts.
State 130 contains 3 shift/reduce conflicts.
State 131 contains 3 shift/reduce conflicts.
State 132 contains 3 shift/reduce conflicts.
State 133 contains 3 shift/reduce conflicts.
State 134 contains 3 shift/reduce conflicts.
State 135 contains 3 shift/reduce conflicts.
State 136 contains 3 shift/reduce conflicts.
State 139 contains 1 shift/reduce conflict.
State 144 contains 1 reduce/reduce conflict.
State 155 contains 1 shift/reduce conflict.
State 156 contains 1 shift/reduce conflict.
State 182 contains 17 shift/reduce conflicts.
State 187 contains 24 shift/reduce conflicts.
State 188 contains 24 shift/reduce conflicts.
State 189 contains 24 shift/reduce conflicts.
State 190 contains 24 shift/reduce conflicts.
State 191 contains 24 shift/reduce conflicts.
State 192 contains 24 shift/reduce conflicts.
State 193 contains 24 shift/reduce conflicts.
State 194 contains 24 shift/reduce conflicts.
State 195 contains 24 shift/reduce conflicts.
State 196 contains 24 shift/reduce conflicts.
State 197 contains 24 shift/reduce conflicts.
State 198 contains 24 shift/reduce conflicts.
State 199 contains 24 shift/reduce conflicts.
State 200 contains 24 shift/reduce conflicts.
State 201 contains 24 shift/reduce conflicts.
State 202 contains 24 shift/reduce conflicts.
State 203 contains 24 shift/reduce conflicts.
State 204 contains 24 shift/reduce conflicts.
State 205 contains 24 shift/reduce conflicts.
State 206 contains 24 shift/reduce conflicts.
State 207 contains 24 shift/reduce conflicts.
State 208 contains 24 shift/reduce conflicts.
State 209 contains 24 shift/reduce conflicts.
State 210 contains 24 shift/reduce conflicts.
State 211 contains 1 shift/reduce conflict.
State 212 contains 1 shift/reduce conflict.
State 214 contains 17 shift/reduce conflicts.
State 217 contains 1 shift/reduce conflict.
State 218 contains 1 shift/reduce conflict.
State 219 contains 1 shift/reduce conflict.
State 220 contains 1 shift/reduce conflict.
State 232 contains 1 shift/reduce conflict.
State 233 contains 1 shift/reduce conflict.
State 239 contains 17 shift/reduce conflicts.
State 254 contains 17 shift/reduce conflicts.
State 255 contains 17 shift/reduce conflicts.
State 257 contains 1 shift/reduce conflict.
State 258 contains 17 shift/reduce conflicts.
State 270 contains 17 shift/reduce conflicts.

Grammar
rule 1    nasl_script ->		/* empty */
rule 2    nasl_script -> lines
rule 3    lines -> line
rule 4    lines -> lines line
rule 5    line -> COMMENT
rule 6    line -> export
rule 7    line -> function
rule 8    line -> command
rule 9    export -> EXPORT function
rule 10   function -> FUNCTION identifier '(' parameters ')' block
rule 11   function -> FUNCTION identifier '(' ')' block
rule 12   parameters -> parameter ',' parameters
rule 13   parameters -> parameter
rule 14   parameter -> identifier
rule 15   parameter -> '&' identifier
rule 16   parameter -> assign
rule 17   parameter -> string
rule 18   parameter -> integer
rule 19   command -> simple
rule 20   command -> compound
rule 21   simple -> assign
rule 22   simple -> call_function
rule 23   simple -> break
rule 24   simple -> continue
rule 25   simple -> return
rule 26   simple -> local
rule 27   simple -> global
rule 28   simple -> inc_dec_exp
rule 29   simple -> rep
rule 30   simple -> import
rule 31   simple -> include
rule 32   simple -> empty
rule 33   break -> BREAK ';'
rule 34   continue -> CONTINUE ';'
rule 35   import -> IMPORT '(' string ')' ';'
rule 36   include -> INCLUDE '(' string ')' ';'
rule 37   return -> RETURN expression ';'
rule 38   return -> RETURN '@' ';'
rule 39   empty -> ';'
rule 40   global -> GLOBAL vars ';'
rule 41   local -> LOCAL vars ';'
rule 42   rep -> call_function REP expression ';'
rule 43   call_function -> identifier '(' parameters ')' ';'
rule 44   call_function -> identifier '(' ')' ';'
rule 45   assign -> identifier '=' value
rule 46   assign -> identifier '=' ref
rule 47   assign -> assign_math_op
rule 48   assign -> assign_shift_op
rule 49   inc_dec_exp -> INC identifier
rule 50   inc_dec_exp -> DEC identifier
rule 51   inc_dec_exp -> identifier INC
rule 52   inc_dec_exp -> identifier DEC
rule 53   assign_math_op -> identifier ADD_ASS value
rule 54   assign_math_op -> identifier SUB_ASS value
rule 55   assign_math_op -> identifier MUL_ASS value
rule 56   assign_math_op -> identifier DIV_ASS value
rule 57   assign_math_op -> identifier MOD_ASS value
rule 58   assign_shift_op -> identifier SR_ASS value
rule 59   assign_shift_op -> identifier SRR_ASS value
rule 60   assign_shift_op -> identifier SL_ASS value
rule 61   value -> expression
rule 62   identifier -> IDENT
rule 63   identifier -> IN_ITER
rule 64   integer -> INT
rule 65   integer -> TRUE
rule 66   integer -> FALSE
rule 67   string -> STRING
rule 68   ip -> integer '.' integer '.' integer '.' integer
rule 69   null -> _NULL_
rule 70   ref -> '@' IDENT
rule 71   compound -> for_loop
rule 72   compound -> foreach_loop
rule 73   compound -> repeat_loop
rule 74   compound -> while_loop
rule 75   compound -> if_cond
rule 76   for_loop -> FOR '(' expression ';' expression ';' expression ')' block
rule 77   for_loop -> FOR '(' expression ';' expression ';' expression ')' command
rule 78   foreach_loop -> FOREACH identifier '(' expression ')' block
rule 79   foreach_loop -> FOREACH identifier '(' expression ')' command
rule 80   foreach_loop -> FOREACH '(' identifier IN_ITER expression ')' block
rule 81   foreach_loop -> FOREACH '(' identifier IN_ITER expression ')' command
rule 82   repeat_loop -> REPEAT block UNTIL expression ';'
rule 83   repeat_loop -> REPEAT command UNTIL expression ';'
rule 84   while_loop -> WHILE '(' expression ')' block
rule 85   while_loop -> WHILE '(' expression ')' command
rule 86   if_cond -> IF '(' expression ')' block
rule 87   if_cond -> IF '(' expression ')' command
rule 88   if_cond -> IF '(' expression ')' block ELSE command
rule 89   if_cond -> IF '(' expression ')' block ELSE block
rule 90   if_cond -> IF '(' expression ')' command ELSE block
rule 91   if_cond -> IF '(' expression ')' command ELSE command
rule 92   block ->		/* empty */
rule 93   block -> '{' '}'
rule 94   block -> '{' lines '}'
rule 95   block -> '{' argument_list '}'
rule 96   block -> '[' ']'
rule 97   block -> '[' argument_list ']'
rule 98   var -> identifier '=' value
rule 99   var -> identifier '=' ref
rule 100  var -> identifier
rule 101  vars -> var ',' vars
rule 102  vars -> var
rule 103  argument_list -> argument_list ',' argument
rule 104  argument_list -> argument
rule 105  argument -> string ':' expression
rule 106  argument -> integer ':' expression
rule 107  argument -> string ':' ref
rule 108  argument -> integer ':' ref
rule 109  argument -> identifier ':' expression
rule 110  argument -> identifier ':' ref
rule 111  argument -> expression
rule 112  argument -> ref
rule 113  expression ->		/* empty */
rule 114  expression -> '(' expression ')'
rule 115  expression -> expression AND expression
rule 116  expression -> '!' expression
rule 117  expression -> expression OR expression
rule 118  expression -> expression '+' expression
rule 119  expression -> expression '-' expression
rule 120  expression -> '-' expression
rule 121  expression -> expression '*' expression
rule 122  expression -> expression POWER expression
rule 123  expression -> expression '/' expression
rule 124  expression -> expression '%' expression
rule 125  expression -> expression '&' expression
rule 126  expression -> expression '^' expression
rule 127  expression -> expression '|' expression
rule 128  expression -> expression SR expression
rule 129  expression -> expression SL expression
rule 130  expression -> expression SRR expression
rule 131  expression -> expression SUBSTR_EQ expression
rule 132  expression -> expression SUBSTR_NEQ expression
rule 133  expression -> expression REGEX_NEQ expression
rule 134  expression -> expression REGEX_EQ expression
rule 135  expression -> expression '<' expression
rule 136  expression -> expression '>' expression
rule 137  expression -> expression CMP_GE expression
rule 138  expression -> expression CMP_LE expression
rule 139  expression -> expression CMP_EQ expression
rule 140  expression -> expression CMP_NEQ expression
rule 141  expression -> integer
rule 142  expression -> string
rule 143  expression -> ip
rule 144  expression -> null
rule 145  expression -> call_function

Terminals, with rules where they appear

$ (-1)
'!' (33) 116
'%' (37) 124
'&' (38) 15 125
'(' (40) 10 11 35 36 43 44 76 77 78 79 80 81 84 85 86 87 88 89 90 91
    114
')' (41) 10 11 35 36 43 44 76 77 78 79 80 81 84 85 86 87 88 89 90 91
    114
'*' (42) 121
'+' (43) 118
',' (44) 12 101 103
'-' (45) 119 120
'.' (46) 68
'/' (47) 123
':' (58) 105 106 107 108 109 110
';' (59) 33 34 35 36 37 38 39 40 41 42 43 44 76 77 82 83
'<' (60) 135
'=' (61) 45 46 98 99
'>' (62) 136
'@' (64) 38 70
'[' (91) 96 97
']' (93) 96 97
'^' (94) 126
'{' (123) 93 94 95
'|' (124) 127
'}' (125) 93 94 95
error (256)
COMMENT (258) 5
FUNCTION (259) 10 11
LOCAL (260) 41
GLOBAL (261) 40
ELSE (262) 88 89 90 91
IF (263) 86 87 88 89 90 91
INCLUDE (264) 36
EXPORT (265) 9
IMPORT (266) 35
RETURN (267) 37 38
BREAK (268) 33
CONTINUE (269) 34
FOR (270) 76 77
FOREACH (271) 78 79 80 81
IN_ITER (272) 63 80 81
WHILE (273) 84 85
REPEAT (274) 82 83
REP (275) 42
UNTIL (276) 82 83
IDENT (277) 62 70
INT (278) 64
STRING (279) 67
FALSE (280) 66
_NULL_ (281) 69
TRUE (282) 65
OR (283) 117
AND (284) 115
ADD_ASS (285) 53
SUB_ASS (286) 54
SUBSTR_EQ (287) 131
SUBSTR_NEQ (288) 132
REGEX_EQ (289) 134
REGEX_NEQ (290) 133
DEC (291) 50 52
INC (292) 49 51
DIV_ASS (293) 56
MUL_ASS (294) 55
MOD_ASS (295) 57
POWER (296) 122
CMP_EQ (297) 139
CMP_GE (298) 137
CMP_LE (299) 138
CMP_NEQ (300) 140
SL (301) 129
SR (302) 128
SRR (303) 130
SRR_ASS (304) 59
SR_ASS (305) 58
SL_ASS (306) 60

Nonterminals, with rules where they appear

nasl_script (75)
    on left: 1 2
lines (76)
    on left: 3 4, on right: 2 4 94
line (77)
    on left: 5 6 7 8, on right: 3 4
export (78)
    on left: 9, on right: 6
function (79)
    on left: 10 11, on right: 7 9
parameters (80)
    on left: 12 13, on right: 10 12 43
parameter (81)
    on left: 14 15 16 17 18, on right: 12 13
command (82)
    on left: 19 20, on right: 8 77 79 81 83 85 87 88 90 91
simple (83)
    on left: 21 22 23 24 25 26 27 28 29 30 31 32, on right: 19
break (84)
    on left: 33, on right: 23
continue (85)
    on left: 34, on right: 24
import (86)
    on left: 35, on right: 30
include (87)
    on left: 36, on right: 31
return (88)
    on left: 37 38, on right: 25
empty (89)
    on left: 39, on right: 32
global (90)
    on left: 40, on right: 27
local (91)
    on left: 41, on right: 26
rep (92)
    on left: 42, on right: 29
call_function (93)
    on left: 43 44, on right: 22 42 145
assign (94)
    on left: 45 46 47 48, on right: 16 21
inc_dec_exp (95)
    on left: 49 50 51 52, on right: 28
assign_math_op (96)
    on left: 53 54 55 56 57, on right: 47
assign_shift_op (97)
    on left: 58 59 60, on right: 48
value (98)
    on left: 61, on right: 45 53 54 55 56 57 58 59 60 98
identifier (99)
    on left: 62 63, on right: 10 11 14 15 43 44 45 46 49 50 51 52 53
    54 55 56 57 58 59 60 78 79 80 81 98 99 100 109 110
integer (100)
    on left: 64 65 66, on right: 18 68 106 108 141
string (101)
    on left: 67, on right: 17 35 36 105 107 142
ip (102)
    on left: 68, on right: 143
null (103)
    on left: 69, on right: 144
ref (104)
    on left: 70, on right: 46 99 107 108 110 112
compound (105)
    on left: 71 72 73 74 75, on right: 20
for_loop (106)
    on left: 76 77, on right: 71
foreach_loop (107)
    on left: 78 79 80 81, on right: 72
repeat_loop (108)
    on left: 82 83, on right: 73
while_loop (109)
    on left: 84 85, on right: 74
if_cond (110)
    on left: 86 87 88 89 90 91, on right: 75
block (111)
    on left: 92 93 94 95 96 97, on right: 10 11 76 78 80 82 84 86 88
    89 90
var (112)
    on left: 98 99 100, on right: 101 102
vars (113)
    on left: 101 102, on right: 40 41 101
argument_list (114)
    on left: 103 104, on right: 95 97 103
argument (115)
    on left: 105 106 107 108 109 110 111 112, on right: 103 104
expression (116)
    on left: 113 114 115 116 117 118 119 120 121 122 123 124 125 126
    127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142
    143 144 145, on right: 37 42 61 76 77 78 79 80 81 82 83 84 85 86
    87 88 89 90 91 105 106 109 111 114 115 116 117 118 119 120 121
    122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137
    138 139 140


state 0

    COMMENT	shift, and go to state 1
    FUNCTION	shift, and go to state 2
    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    EXPORT	shift, and go to state 7
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20

    $default	reduce using rule 1 (nasl_script)

    nasl_script	go to state 273
    lines	go to state 21
    line	go to state 22
    export	go to state 23
    function	go to state 24
    command	go to state 25
    simple	go to state 26
    break	go to state 27
    continue	go to state 28
    import	go to state 29
    include	go to state 30
    return	go to state 31
    empty	go to state 32
    global	go to state 33
    local	go to state 34
    rep 	go to state 35
    call_function	go to state 36
    assign	go to state 37
    inc_dec_exp	go to state 38
    assign_math_op	go to state 39
    assign_shift_op	go to state 40
    identifier	go to state 41
    compound	go to state 42
    for_loop	go to state 43
    foreach_loop	go to state 44
    repeat_loop	go to state 45
    while_loop	go to state 46
    if_cond	go to state 47



state 1

    line  ->  COMMENT .   (rule 5)

    $default	reduce using rule 5 (line)



state 2

    function  ->  FUNCTION . identifier '(' parameters ')' block   (rule 10)
    function  ->  FUNCTION . identifier '(' ')' block   (rule 11)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17

    identifier	go to state 48



state 3

    local  ->  LOCAL . vars ';'   (rule 41)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17

    identifier	go to state 49
    var 	go to state 50
    vars	go to state 51



state 4

    global  ->  GLOBAL . vars ';'   (rule 40)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17

    identifier	go to state 49
    var 	go to state 50
    vars	go to state 52



state 5

    if_cond  ->  IF . '(' expression ')' block   (rule 86)
    if_cond  ->  IF . '(' expression ')' command   (rule 87)
    if_cond  ->  IF . '(' expression ')' block ELSE command   (rule 88)
    if_cond  ->  IF . '(' expression ')' block ELSE block   (rule 89)
    if_cond  ->  IF . '(' expression ')' command ELSE block   (rule 90)
    if_cond  ->  IF . '(' expression ')' command ELSE command   (rule 91)

    '(' 	shift, and go to state 53



state 6

    include  ->  INCLUDE . '(' string ')' ';'   (rule 36)

    '(' 	shift, and go to state 54



state 7

    export  ->  EXPORT . function   (rule 9)

    FUNCTION	shift, and go to state 2

    function	go to state 55



state 8

    import  ->  IMPORT . '(' string ')' ';'   (rule 35)

    '(' 	shift, and go to state 56



state 9

    return  ->  RETURN . expression ';'   (rule 37)
    return  ->  RETURN . '@' ';'   (rule 38)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '@' 	shift, and go to state 63
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 72



state 10

    break  ->  BREAK . ';'   (rule 33)

    ';' 	shift, and go to state 73



state 11

    continue  ->  CONTINUE . ';'   (rule 34)

    ';' 	shift, and go to state 74



state 12

    for_loop  ->  FOR . '(' expression ';' expression ';' expression ')' block   (rule 76)
    for_loop  ->  FOR . '(' expression ';' expression ';' expression ')' command   (rule 77)

    '(' 	shift, and go to state 75



state 13

    foreach_loop  ->  FOREACH . identifier '(' expression ')' block   (rule 78)
    foreach_loop  ->  FOREACH . identifier '(' expression ')' command   (rule 79)
    foreach_loop  ->  FOREACH . '(' identifier IN_ITER expression ')' block   (rule 80)
    foreach_loop  ->  FOREACH . '(' identifier IN_ITER expression ')' command   (rule 81)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    '(' 	shift, and go to state 76

    identifier	go to state 77



state 14

    identifier  ->  IN_ITER .   (rule 63)

    $default	reduce using rule 63 (identifier)



state 15

    while_loop  ->  WHILE . '(' expression ')' block   (rule 84)
    while_loop  ->  WHILE . '(' expression ')' command   (rule 85)

    '(' 	shift, and go to state 78



state 16

    repeat_loop  ->  REPEAT . block UNTIL expression ';'   (rule 82)
    repeat_loop  ->  REPEAT . command UNTIL expression ';'   (rule 83)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20
    '{' 	shift, and go to state 79
    '[' 	shift, and go to state 80

    $default	reduce using rule 92 (block)

    command	go to state 81
    simple	go to state 26
    break	go to state 27
    continue	go to state 28
    import	go to state 29
    include	go to state 30
    return	go to state 31
    empty	go to state 32
    global	go to state 33
    local	go to state 34
    rep 	go to state 35
    call_function	go to state 36
    assign	go to state 37
    inc_dec_exp	go to state 38
    assign_math_op	go to state 39
    assign_shift_op	go to state 40
    identifier	go to state 41
    compound	go to state 42
    for_loop	go to state 43
    foreach_loop	go to state 44
    repeat_loop	go to state 45
    while_loop	go to state 46
    if_cond	go to state 47
    block	go to state 82



state 17

    identifier  ->  IDENT .   (rule 62)

    $default	reduce using rule 62 (identifier)



state 18

    inc_dec_exp  ->  DEC . identifier   (rule 50)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17

    identifier	go to state 83



state 19

    inc_dec_exp  ->  INC . identifier   (rule 49)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17

    identifier	go to state 84



state 20

    empty  ->  ';' .   (rule 39)

    $default	reduce using rule 39 (empty)



state 21

    nasl_script  ->  lines .   (rule 2)
    lines  ->  lines . line   (rule 4)

    COMMENT	shift, and go to state 1
    FUNCTION	shift, and go to state 2
    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    EXPORT	shift, and go to state 7
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20

    $default	reduce using rule 2 (nasl_script)

    line	go to state 85
    export	go to state 23
    function	go to state 24
    command	go to state 25
    simple	go to state 26
    break	go to state 27
    continue	go to state 28
    import	go to state 29
    include	go to state 30
    return	go to state 31
    empty	go to state 32
    global	go to state 33
    local	go to state 34
    rep 	go to state 35
    call_function	go to state 36
    assign	go to state 37
    inc_dec_exp	go to state 38
    assign_math_op	go to state 39
    assign_shift_op	go to state 40
    identifier	go to state 41
    compound	go to state 42
    for_loop	go to state 43
    foreach_loop	go to state 44
    repeat_loop	go to state 45
    while_loop	go to state 46
    if_cond	go to state 47



state 22

    lines  ->  line .   (rule 3)

    $default	reduce using rule 3 (lines)



state 23

    line  ->  export .   (rule 6)

    $default	reduce using rule 6 (line)



state 24

    line  ->  function .   (rule 7)

    $default	reduce using rule 7 (line)



state 25

    line  ->  command .   (rule 8)

    $default	reduce using rule 8 (line)



state 26

    command  ->  simple .   (rule 19)

    $default	reduce using rule 19 (command)



state 27

    simple  ->  break .   (rule 23)

    $default	reduce using rule 23 (simple)



state 28

    simple  ->  continue .   (rule 24)

    $default	reduce using rule 24 (simple)



state 29

    simple  ->  import .   (rule 30)

    $default	reduce using rule 30 (simple)



state 30

    simple  ->  include .   (rule 31)

    $default	reduce using rule 31 (simple)



state 31

    simple  ->  return .   (rule 25)

    $default	reduce using rule 25 (simple)



state 32

    simple  ->  empty .   (rule 32)

    $default	reduce using rule 32 (simple)



state 33

    simple  ->  global .   (rule 27)

    $default	reduce using rule 27 (simple)



state 34

    simple  ->  local .   (rule 26)

    $default	reduce using rule 26 (simple)



state 35

    simple  ->  rep .   (rule 29)

    $default	reduce using rule 29 (simple)



state 36

    simple  ->  call_function .   (rule 22)
    rep  ->  call_function . REP expression ';'   (rule 42)

    REP 	shift, and go to state 86

    $default	reduce using rule 22 (simple)



state 37

    simple  ->  assign .   (rule 21)

    $default	reduce using rule 21 (simple)



state 38

    simple  ->  inc_dec_exp .   (rule 28)

    $default	reduce using rule 28 (simple)



state 39

    assign  ->  assign_math_op .   (rule 47)

    $default	reduce using rule 47 (assign)



state 40

    assign  ->  assign_shift_op .   (rule 48)

    $default	reduce using rule 48 (assign)



state 41

    call_function  ->  identifier . '(' parameters ')' ';'   (rule 43)
    call_function  ->  identifier . '(' ')' ';'   (rule 44)
    assign  ->  identifier . '=' value   (rule 45)
    assign  ->  identifier . '=' ref   (rule 46)
    inc_dec_exp  ->  identifier . INC   (rule 51)
    inc_dec_exp  ->  identifier . DEC   (rule 52)
    assign_math_op  ->  identifier . ADD_ASS value   (rule 53)
    assign_math_op  ->  identifier . SUB_ASS value   (rule 54)
    assign_math_op  ->  identifier . MUL_ASS value   (rule 55)
    assign_math_op  ->  identifier . DIV_ASS value   (rule 56)
    assign_math_op  ->  identifier . MOD_ASS value   (rule 57)
    assign_shift_op  ->  identifier . SR_ASS value   (rule 58)
    assign_shift_op  ->  identifier . SRR_ASS value   (rule 59)
    assign_shift_op  ->  identifier . SL_ASS value   (rule 60)

    ADD_ASS	shift, and go to state 87
    SUB_ASS	shift, and go to state 88
    DEC 	shift, and go to state 89
    INC 	shift, and go to state 90
    DIV_ASS	shift, and go to state 91
    MUL_ASS	shift, and go to state 92
    MOD_ASS	shift, and go to state 93
    SRR_ASS	shift, and go to state 94
    SR_ASS	shift, and go to state 95
    SL_ASS	shift, and go to state 96
    '(' 	shift, and go to state 97
    '=' 	shift, and go to state 98



state 42

    command  ->  compound .   (rule 20)

    $default	reduce using rule 20 (command)



state 43

    compound  ->  for_loop .   (rule 71)

    $default	reduce using rule 71 (compound)



state 44

    compound  ->  foreach_loop .   (rule 72)

    $default	reduce using rule 72 (compound)



state 45

    compound  ->  repeat_loop .   (rule 73)

    $default	reduce using rule 73 (compound)



state 46

    compound  ->  while_loop .   (rule 74)

    $default	reduce using rule 74 (compound)



state 47

    compound  ->  if_cond .   (rule 75)

    $default	reduce using rule 75 (compound)



state 48

    function  ->  FUNCTION identifier . '(' parameters ')' block   (rule 10)
    function  ->  FUNCTION identifier . '(' ')' block   (rule 11)

    '(' 	shift, and go to state 99



state 49

    var  ->  identifier . '=' value   (rule 98)
    var  ->  identifier . '=' ref   (rule 99)
    var  ->  identifier .   (rule 100)

    '=' 	shift, and go to state 100

    $default	reduce using rule 100 (var)



state 50

    vars  ->  var . ',' vars   (rule 101)
    vars  ->  var .   (rule 102)

    ',' 	shift, and go to state 101

    $default	reduce using rule 102 (vars)



state 51

    local  ->  LOCAL vars . ';'   (rule 41)

    ';' 	shift, and go to state 102



state 52

    global  ->  GLOBAL vars . ';'   (rule 40)

    ';' 	shift, and go to state 103



state 53

    if_cond  ->  IF '(' . expression ')' block   (rule 86)
    if_cond  ->  IF '(' . expression ')' command   (rule 87)
    if_cond  ->  IF '(' . expression ')' block ELSE command   (rule 88)
    if_cond  ->  IF '(' . expression ')' block ELSE block   (rule 89)
    if_cond  ->  IF '(' . expression ')' command ELSE block   (rule 90)
    if_cond  ->  IF '(' . expression ')' command ELSE command   (rule 91)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 104



state 54

    include  ->  INCLUDE '(' . string ')' ';'   (rule 36)

    STRING	shift, and go to state 58

    string	go to state 105



state 55

    export  ->  EXPORT function .   (rule 9)

    $default	reduce using rule 9 (export)



state 56

    import  ->  IMPORT '(' . string ')' ';'   (rule 35)

    STRING	shift, and go to state 58

    string	go to state 106



state 57

    integer  ->  INT .   (rule 64)

    $default	reduce using rule 64 (integer)



state 58

    string  ->  STRING .   (rule 67)

    $default	reduce using rule 67 (string)



state 59

    integer  ->  FALSE .   (rule 66)

    $default	reduce using rule 66 (integer)



state 60

    null  ->  _NULL_ .   (rule 69)

    $default	reduce using rule 69 (null)



state 61

    integer  ->  TRUE .   (rule 65)

    $default	reduce using rule 65 (integer)



state 62

    expression  ->  '(' . expression ')'   (rule 114)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 107



state 63

    return  ->  RETURN '@' . ';'   (rule 38)

    ';' 	shift, and go to state 108



state 64

    expression  ->  '!' . expression   (rule 116)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 109



state 65

    expression  ->  '-' . expression   (rule 120)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 110



state 66

    expression  ->  call_function .   (rule 145)

    $default	reduce using rule 145 (expression)



state 67

    call_function  ->  identifier . '(' parameters ')' ';'   (rule 43)
    call_function  ->  identifier . '(' ')' ';'   (rule 44)

    '(' 	shift, and go to state 97



state 68

    ip  ->  integer . '.' integer '.' integer '.' integer   (rule 68)
    expression  ->  integer .   (rule 141)

    '.' 	shift, and go to state 111

    $default	reduce using rule 141 (expression)



state 69

    expression  ->  string .   (rule 142)

    $default	reduce using rule 142 (expression)



state 70

    expression  ->  ip .   (rule 143)

    $default	reduce using rule 143 (expression)



state 71

    expression  ->  null .   (rule 144)

    $default	reduce using rule 144 (expression)



state 72

    return  ->  RETURN expression . ';'   (rule 37)
    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    ';' 	shift, and go to state 127
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136



state 73

    break  ->  BREAK ';' .   (rule 33)

    $default	reduce using rule 33 (break)



state 74

    continue  ->  CONTINUE ';' .   (rule 34)

    $default	reduce using rule 34 (continue)



state 75

    for_loop  ->  FOR '(' . expression ';' expression ';' expression ')' block   (rule 76)
    for_loop  ->  FOR '(' . expression ';' expression ';' expression ')' command   (rule 77)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 137



state 76

    foreach_loop  ->  FOREACH '(' . identifier IN_ITER expression ')' block   (rule 80)
    foreach_loop  ->  FOREACH '(' . identifier IN_ITER expression ')' command   (rule 81)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17

    identifier	go to state 138



state 77

    foreach_loop  ->  FOREACH identifier . '(' expression ')' block   (rule 78)
    foreach_loop  ->  FOREACH identifier . '(' expression ')' command   (rule 79)

    '(' 	shift, and go to state 139



state 78

    while_loop  ->  WHILE '(' . expression ')' block   (rule 84)
    while_loop  ->  WHILE '(' . expression ')' command   (rule 85)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 140



state 79

    block  ->  '{' . '}'   (rule 93)
    block  ->  '{' . lines '}'   (rule 94)
    block  ->  '{' . argument_list '}'   (rule 95)

    COMMENT	shift, and go to state 1
    FUNCTION	shift, and go to state 2
    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    EXPORT	shift, and go to state 7
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    '(' 	shift, and go to state 62
    ';' 	shift, and go to state 20
    '@' 	shift, and go to state 141
    '}' 	shift, and go to state 142
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    '}' 	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    lines	go to state 143
    line	go to state 22
    export	go to state 23
    function	go to state 24
    command	go to state 25
    simple	go to state 26
    break	go to state 27
    continue	go to state 28
    import	go to state 29
    include	go to state 30
    return	go to state 31
    empty	go to state 32
    global	go to state 33
    local	go to state 34
    rep 	go to state 35
    call_function	go to state 144
    assign	go to state 37
    inc_dec_exp	go to state 38
    assign_math_op	go to state 39
    assign_shift_op	go to state 40
    identifier	go to state 145
    integer	go to state 146
    string	go to state 147
    ip  	go to state 70
    null	go to state 71
    ref 	go to state 148
    compound	go to state 42
    for_loop	go to state 43
    foreach_loop	go to state 44
    repeat_loop	go to state 45
    while_loop	go to state 46
    if_cond	go to state 47
    argument_list	go to state 149
    argument	go to state 150
    expression	go to state 151



state 80

    block  ->  '[' . ']'   (rule 96)
    block  ->  '[' . argument_list ']'   (rule 97)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '@' 	shift, and go to state 141
    ']' 	shift, and go to state 152
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    ']' 	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 153
    integer	go to state 146
    string	go to state 147
    ip  	go to state 70
    null	go to state 71
    ref 	go to state 148
    argument_list	go to state 154
    argument	go to state 150
    expression	go to state 151



state 81

    repeat_loop  ->  REPEAT command . UNTIL expression ';'   (rule 83)

    UNTIL	shift, and go to state 155



state 82

    repeat_loop  ->  REPEAT block . UNTIL expression ';'   (rule 82)

    UNTIL	shift, and go to state 156



state 83

    inc_dec_exp  ->  DEC identifier .   (rule 50)

    $default	reduce using rule 50 (inc_dec_exp)



state 84

    inc_dec_exp  ->  INC identifier .   (rule 49)

    $default	reduce using rule 49 (inc_dec_exp)



state 85

    lines  ->  lines line .   (rule 4)

    $default	reduce using rule 4 (lines)



state 86

    rep  ->  call_function REP . expression ';'   (rule 42)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 157



state 87

    assign_math_op  ->  identifier ADD_ASS . value   (rule 53)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    value	go to state 158
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 159



state 88

    assign_math_op  ->  identifier SUB_ASS . value   (rule 54)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    value	go to state 160
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 159



state 89

    inc_dec_exp  ->  identifier DEC .   (rule 52)

    $default	reduce using rule 52 (inc_dec_exp)



state 90

    inc_dec_exp  ->  identifier INC .   (rule 51)

    $default	reduce using rule 51 (inc_dec_exp)



state 91

    assign_math_op  ->  identifier DIV_ASS . value   (rule 56)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    value	go to state 161
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 159



state 92

    assign_math_op  ->  identifier MUL_ASS . value   (rule 55)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    value	go to state 162
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 159



state 93

    assign_math_op  ->  identifier MOD_ASS . value   (rule 57)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    value	go to state 163
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 159



state 94

    assign_shift_op  ->  identifier SRR_ASS . value   (rule 59)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    value	go to state 164
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 159



state 95

    assign_shift_op  ->  identifier SR_ASS . value   (rule 58)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    value	go to state 165
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 159



state 96

    assign_shift_op  ->  identifier SL_ASS . value   (rule 60)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    value	go to state 166
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 159



state 97

    call_function  ->  identifier '(' . parameters ')' ';'   (rule 43)
    call_function  ->  identifier '(' . ')' ';'   (rule 44)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    TRUE	shift, and go to state 61
    ')' 	shift, and go to state 167
    '&' 	shift, and go to state 168

    parameters	go to state 169
    parameter	go to state 170
    assign	go to state 171
    assign_math_op	go to state 39
    assign_shift_op	go to state 40
    identifier	go to state 172
    integer	go to state 173
    string	go to state 174



state 98

    assign  ->  identifier '=' . value   (rule 45)
    assign  ->  identifier '=' . ref   (rule 46)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '@' 	shift, and go to state 141
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    value	go to state 175
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    ref 	go to state 176
    expression	go to state 159



state 99

    function  ->  FUNCTION identifier '(' . parameters ')' block   (rule 10)
    function  ->  FUNCTION identifier '(' . ')' block   (rule 11)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    TRUE	shift, and go to state 61
    ')' 	shift, and go to state 177
    '&' 	shift, and go to state 168

    parameters	go to state 178
    parameter	go to state 170
    assign	go to state 171
    assign_math_op	go to state 39
    assign_shift_op	go to state 40
    identifier	go to state 172
    integer	go to state 173
    string	go to state 174



state 100

    var  ->  identifier '=' . value   (rule 98)
    var  ->  identifier '=' . ref   (rule 99)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '@' 	shift, and go to state 141
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    value	go to state 179
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    ref 	go to state 180
    expression	go to state 159



state 101

    vars  ->  var ',' . vars   (rule 101)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17

    identifier	go to state 49
    var 	go to state 50
    vars	go to state 181



state 102

    local  ->  LOCAL vars ';' .   (rule 41)

    $default	reduce using rule 41 (local)



state 103

    global  ->  GLOBAL vars ';' .   (rule 40)

    $default	reduce using rule 40 (global)



state 104

    if_cond  ->  IF '(' expression . ')' block   (rule 86)
    if_cond  ->  IF '(' expression . ')' command   (rule 87)
    if_cond  ->  IF '(' expression . ')' block ELSE command   (rule 88)
    if_cond  ->  IF '(' expression . ')' block ELSE block   (rule 89)
    if_cond  ->  IF '(' expression . ')' command ELSE block   (rule 90)
    if_cond  ->  IF '(' expression . ')' command ELSE command   (rule 91)
    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    ')' 	shift, and go to state 182
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136



state 105

    include  ->  INCLUDE '(' string . ')' ';'   (rule 36)

    ')' 	shift, and go to state 183



state 106

    import  ->  IMPORT '(' string . ')' ';'   (rule 35)

    ')' 	shift, and go to state 184



state 107

    expression  ->  '(' expression . ')'   (rule 114)
    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    ')' 	shift, and go to state 185
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136



state 108

    return  ->  RETURN '@' ';' .   (rule 38)

    $default	reduce using rule 38 (return)



state 109

    expression  ->  expression . AND expression   (rule 115)
    expression  ->  '!' expression .   (rule 116)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    OR  	[reduce using rule 116 (expression)]
    AND 	[reduce using rule 116 (expression)]
    SUBSTR_EQ	[reduce using rule 116 (expression)]
    SUBSTR_NEQ	[reduce using rule 116 (expression)]
    REGEX_EQ	[reduce using rule 116 (expression)]
    REGEX_NEQ	[reduce using rule 116 (expression)]
    POWER	[reduce using rule 116 (expression)]
    CMP_EQ	[reduce using rule 116 (expression)]
    CMP_GE	[reduce using rule 116 (expression)]
    CMP_LE	[reduce using rule 116 (expression)]
    CMP_NEQ	[reduce using rule 116 (expression)]
    SL  	[reduce using rule 116 (expression)]
    SR  	[reduce using rule 116 (expression)]
    SRR 	[reduce using rule 116 (expression)]
    '&' 	[reduce using rule 116 (expression)]
    '+' 	[reduce using rule 116 (expression)]
    '-' 	[reduce using rule 116 (expression)]
    '*' 	[reduce using rule 116 (expression)]
    '/' 	[reduce using rule 116 (expression)]
    '%' 	[reduce using rule 116 (expression)]
    '^' 	[reduce using rule 116 (expression)]
    '|' 	[reduce using rule 116 (expression)]
    '<' 	[reduce using rule 116 (expression)]
    '>' 	[reduce using rule 116 (expression)]
    $default	reduce using rule 116 (expression)



state 110

    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  '-' expression .   (rule 120)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    OR  	[reduce using rule 120 (expression)]
    AND 	[reduce using rule 120 (expression)]
    SUBSTR_EQ	[reduce using rule 120 (expression)]
    SUBSTR_NEQ	[reduce using rule 120 (expression)]
    REGEX_EQ	[reduce using rule 120 (expression)]
    REGEX_NEQ	[reduce using rule 120 (expression)]
    POWER	[reduce using rule 120 (expression)]
    CMP_EQ	[reduce using rule 120 (expression)]
    CMP_GE	[reduce using rule 120 (expression)]
    CMP_LE	[reduce using rule 120 (expression)]
    CMP_NEQ	[reduce using rule 120 (expression)]
    SL  	[reduce using rule 120 (expression)]
    SR  	[reduce using rule 120 (expression)]
    SRR 	[reduce using rule 120 (expression)]
    '&' 	[reduce using rule 120 (expression)]
    '+' 	[reduce using rule 120 (expression)]
    '-' 	[reduce using rule 120 (expression)]
    '*' 	[reduce using rule 120 (expression)]
    '/' 	[reduce using rule 120 (expression)]
    '%' 	[reduce using rule 120 (expression)]
    '^' 	[reduce using rule 120 (expression)]
    '|' 	[reduce using rule 120 (expression)]
    '<' 	[reduce using rule 120 (expression)]
    '>' 	[reduce using rule 120 (expression)]
    $default	reduce using rule 120 (expression)



state 111

    ip  ->  integer '.' . integer '.' integer '.' integer   (rule 68)

    INT 	shift, and go to state 57
    FALSE	shift, and go to state 59
    TRUE	shift, and go to state 61

    integer	go to state 186



state 112

    expression  ->  expression OR . expression   (rule 117)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 187



state 113

    expression  ->  expression AND . expression   (rule 115)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 188



state 114

    expression  ->  expression SUBSTR_EQ . expression   (rule 131)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 189



state 115

    expression  ->  expression SUBSTR_NEQ . expression   (rule 132)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 190



state 116

    expression  ->  expression REGEX_EQ . expression   (rule 134)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 191



state 117

    expression  ->  expression REGEX_NEQ . expression   (rule 133)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 192



state 118

    expression  ->  expression POWER . expression   (rule 122)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 193



state 119

    expression  ->  expression CMP_EQ . expression   (rule 139)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 194



state 120

    expression  ->  expression CMP_GE . expression   (rule 137)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 195



state 121

    expression  ->  expression CMP_LE . expression   (rule 138)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 196



state 122

    expression  ->  expression CMP_NEQ . expression   (rule 140)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 197



state 123

    expression  ->  expression SL . expression   (rule 129)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 198



state 124

    expression  ->  expression SR . expression   (rule 128)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 199



state 125

    expression  ->  expression SRR . expression   (rule 130)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 200



state 126

    expression  ->  expression '&' . expression   (rule 125)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 201



state 127

    return  ->  RETURN expression ';' .   (rule 37)

    $default	reduce using rule 37 (return)



state 128

    expression  ->  expression '+' . expression   (rule 118)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 202



state 129

    expression  ->  expression '-' . expression   (rule 119)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 203



state 130

    expression  ->  expression '*' . expression   (rule 121)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 204



state 131

    expression  ->  expression '/' . expression   (rule 123)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 205



state 132

    expression  ->  expression '%' . expression   (rule 124)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 206



state 133

    expression  ->  expression '^' . expression   (rule 126)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 207



state 134

    expression  ->  expression '|' . expression   (rule 127)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 208



state 135

    expression  ->  expression '<' . expression   (rule 135)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 209



state 136

    expression  ->  expression '>' . expression   (rule 136)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    IN_ITER	[reduce using rule 113 (expression)]
    IDENT	[reduce using rule 113 (expression)]
    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 210



state 137

    for_loop  ->  FOR '(' expression . ';' expression ';' expression ')' block   (rule 76)
    for_loop  ->  FOR '(' expression . ';' expression ';' expression ')' command   (rule 77)
    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    ';' 	shift, and go to state 211
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136



state 138

    foreach_loop  ->  FOREACH '(' identifier . IN_ITER expression ')' block   (rule 80)
    foreach_loop  ->  FOREACH '(' identifier . IN_ITER expression ')' command   (rule 81)

    IN_ITER	shift, and go to state 212



state 139

    foreach_loop  ->  FOREACH identifier '(' . expression ')' block   (rule 78)
    foreach_loop  ->  FOREACH identifier '(' . expression ')' command   (rule 79)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 213



state 140

    while_loop  ->  WHILE '(' expression . ')' block   (rule 84)
    while_loop  ->  WHILE '(' expression . ')' command   (rule 85)
    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    ')' 	shift, and go to state 214
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136



state 141

    ref  ->  '@' . IDENT   (rule 70)

    IDENT	shift, and go to state 215



state 142

    block  ->  '{' '}' .   (rule 93)

    $default	reduce using rule 93 (block)



state 143

    lines  ->  lines . line   (rule 4)
    block  ->  '{' lines . '}'   (rule 94)

    COMMENT	shift, and go to state 1
    FUNCTION	shift, and go to state 2
    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    EXPORT	shift, and go to state 7
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20
    '}' 	shift, and go to state 216

    line	go to state 85
    export	go to state 23
    function	go to state 24
    command	go to state 25
    simple	go to state 26
    break	go to state 27
    continue	go to state 28
    import	go to state 29
    include	go to state 30
    return	go to state 31
    empty	go to state 32
    global	go to state 33
    local	go to state 34
    rep 	go to state 35
    call_function	go to state 36
    assign	go to state 37
    inc_dec_exp	go to state 38
    assign_math_op	go to state 39
    assign_shift_op	go to state 40
    identifier	go to state 41
    compound	go to state 42
    for_loop	go to state 43
    foreach_loop	go to state 44
    repeat_loop	go to state 45
    while_loop	go to state 46
    if_cond	go to state 47



state 144

    simple  ->  call_function .   (rule 22)
    rep  ->  call_function . REP expression ';'   (rule 42)
    expression  ->  call_function .   (rule 145)

    REP 	shift, and go to state 86

    COMMENT	reduce using rule 22 (simple)
    FUNCTION	reduce using rule 22 (simple)
    LOCAL	reduce using rule 22 (simple)
    GLOBAL	reduce using rule 22 (simple)
    IF  	reduce using rule 22 (simple)
    INCLUDE	reduce using rule 22 (simple)
    EXPORT	reduce using rule 22 (simple)
    IMPORT	reduce using rule 22 (simple)
    RETURN	reduce using rule 22 (simple)
    BREAK	reduce using rule 22 (simple)
    CONTINUE	reduce using rule 22 (simple)
    FOR 	reduce using rule 22 (simple)
    FOREACH	reduce using rule 22 (simple)
    IN_ITER	reduce using rule 22 (simple)
    WHILE	reduce using rule 22 (simple)
    REPEAT	reduce using rule 22 (simple)
    IDENT	reduce using rule 22 (simple)
    DEC 	reduce using rule 22 (simple)
    INC 	reduce using rule 22 (simple)
    ';' 	reduce using rule 22 (simple)
    '}' 	reduce using rule 22 (simple)
    '}' 	[reduce using rule 145 (expression)]
    $default	reduce using rule 145 (expression)



state 145

    call_function  ->  identifier . '(' parameters ')' ';'   (rule 43)
    call_function  ->  identifier . '(' ')' ';'   (rule 44)
    assign  ->  identifier . '=' value   (rule 45)
    assign  ->  identifier . '=' ref   (rule 46)
    inc_dec_exp  ->  identifier . INC   (rule 51)
    inc_dec_exp  ->  identifier . DEC   (rule 52)
    assign_math_op  ->  identifier . ADD_ASS value   (rule 53)
    assign_math_op  ->  identifier . SUB_ASS value   (rule 54)
    assign_math_op  ->  identifier . MUL_ASS value   (rule 55)
    assign_math_op  ->  identifier . DIV_ASS value   (rule 56)
    assign_math_op  ->  identifier . MOD_ASS value   (rule 57)
    assign_shift_op  ->  identifier . SR_ASS value   (rule 58)
    assign_shift_op  ->  identifier . SRR_ASS value   (rule 59)
    assign_shift_op  ->  identifier . SL_ASS value   (rule 60)
    argument  ->  identifier . ':' expression   (rule 109)
    argument  ->  identifier . ':' ref   (rule 110)

    ADD_ASS	shift, and go to state 87
    SUB_ASS	shift, and go to state 88
    DEC 	shift, and go to state 89
    INC 	shift, and go to state 90
    DIV_ASS	shift, and go to state 91
    MUL_ASS	shift, and go to state 92
    MOD_ASS	shift, and go to state 93
    SRR_ASS	shift, and go to state 94
    SR_ASS	shift, and go to state 95
    SL_ASS	shift, and go to state 96
    '(' 	shift, and go to state 97
    '=' 	shift, and go to state 98
    ':' 	shift, and go to state 217



state 146

    ip  ->  integer . '.' integer '.' integer '.' integer   (rule 68)
    argument  ->  integer . ':' expression   (rule 106)
    argument  ->  integer . ':' ref   (rule 108)
    expression  ->  integer .   (rule 141)

    '.' 	shift, and go to state 111
    ':' 	shift, and go to state 218

    $default	reduce using rule 141 (expression)



state 147

    argument  ->  string . ':' expression   (rule 105)
    argument  ->  string . ':' ref   (rule 107)
    expression  ->  string .   (rule 142)

    ':' 	shift, and go to state 219

    $default	reduce using rule 142 (expression)



state 148

    argument  ->  ref .   (rule 112)

    $default	reduce using rule 112 (argument)



state 149

    block  ->  '{' argument_list . '}'   (rule 95)
    argument_list  ->  argument_list . ',' argument   (rule 103)

    ',' 	shift, and go to state 220
    '}' 	shift, and go to state 221



state 150

    argument_list  ->  argument .   (rule 104)

    $default	reduce using rule 104 (argument_list)



state 151

    argument  ->  expression .   (rule 111)
    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    $default	reduce using rule 111 (argument)



state 152

    block  ->  '[' ']' .   (rule 96)

    $default	reduce using rule 96 (block)



state 153

    call_function  ->  identifier . '(' parameters ')' ';'   (rule 43)
    call_function  ->  identifier . '(' ')' ';'   (rule 44)
    argument  ->  identifier . ':' expression   (rule 109)
    argument  ->  identifier . ':' ref   (rule 110)

    '(' 	shift, and go to state 97
    ':' 	shift, and go to state 217



state 154

    block  ->  '[' argument_list . ']'   (rule 97)
    argument_list  ->  argument_list . ',' argument   (rule 103)

    ',' 	shift, and go to state 220
    ']' 	shift, and go to state 222



state 155

    repeat_loop  ->  REPEAT command UNTIL . expression ';'   (rule 83)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 223



state 156

    repeat_loop  ->  REPEAT block UNTIL . expression ';'   (rule 82)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 224



state 157

    rep  ->  call_function REP expression . ';'   (rule 42)
    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    ';' 	shift, and go to state 225
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136



state 158

    assign_math_op  ->  identifier ADD_ASS value .   (rule 53)

    $default	reduce using rule 53 (assign_math_op)



state 159

    value  ->  expression .   (rule 61)
    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    $default	reduce using rule 61 (value)



state 160

    assign_math_op  ->  identifier SUB_ASS value .   (rule 54)

    $default	reduce using rule 54 (assign_math_op)



state 161

    assign_math_op  ->  identifier DIV_ASS value .   (rule 56)

    $default	reduce using rule 56 (assign_math_op)



state 162

    assign_math_op  ->  identifier MUL_ASS value .   (rule 55)

    $default	reduce using rule 55 (assign_math_op)



state 163

    assign_math_op  ->  identifier MOD_ASS value .   (rule 57)

    $default	reduce using rule 57 (assign_math_op)



state 164

    assign_shift_op  ->  identifier SRR_ASS value .   (rule 59)

    $default	reduce using rule 59 (assign_shift_op)



state 165

    assign_shift_op  ->  identifier SR_ASS value .   (rule 58)

    $default	reduce using rule 58 (assign_shift_op)



state 166

    assign_shift_op  ->  identifier SL_ASS value .   (rule 60)

    $default	reduce using rule 60 (assign_shift_op)



state 167

    call_function  ->  identifier '(' ')' . ';'   (rule 44)

    ';' 	shift, and go to state 226



state 168

    parameter  ->  '&' . identifier   (rule 15)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17

    identifier	go to state 227



state 169

    call_function  ->  identifier '(' parameters . ')' ';'   (rule 43)

    ')' 	shift, and go to state 228



state 170

    parameters  ->  parameter . ',' parameters   (rule 12)
    parameters  ->  parameter .   (rule 13)

    ',' 	shift, and go to state 229

    $default	reduce using rule 13 (parameters)



state 171

    parameter  ->  assign .   (rule 16)

    $default	reduce using rule 16 (parameter)



state 172

    parameter  ->  identifier .   (rule 14)
    assign  ->  identifier . '=' value   (rule 45)
    assign  ->  identifier . '=' ref   (rule 46)
    assign_math_op  ->  identifier . ADD_ASS value   (rule 53)
    assign_math_op  ->  identifier . SUB_ASS value   (rule 54)
    assign_math_op  ->  identifier . MUL_ASS value   (rule 55)
    assign_math_op  ->  identifier . DIV_ASS value   (rule 56)
    assign_math_op  ->  identifier . MOD_ASS value   (rule 57)
    assign_shift_op  ->  identifier . SR_ASS value   (rule 58)
    assign_shift_op  ->  identifier . SRR_ASS value   (rule 59)
    assign_shift_op  ->  identifier . SL_ASS value   (rule 60)

    ADD_ASS	shift, and go to state 87
    SUB_ASS	shift, and go to state 88
    DIV_ASS	shift, and go to state 91
    MUL_ASS	shift, and go to state 92
    MOD_ASS	shift, and go to state 93
    SRR_ASS	shift, and go to state 94
    SR_ASS	shift, and go to state 95
    SL_ASS	shift, and go to state 96
    '=' 	shift, and go to state 98

    $default	reduce using rule 14 (parameter)



state 173

    parameter  ->  integer .   (rule 18)

    $default	reduce using rule 18 (parameter)



state 174

    parameter  ->  string .   (rule 17)

    $default	reduce using rule 17 (parameter)



state 175

    assign  ->  identifier '=' value .   (rule 45)

    $default	reduce using rule 45 (assign)



state 176

    assign  ->  identifier '=' ref .   (rule 46)

    $default	reduce using rule 46 (assign)



state 177

    function  ->  FUNCTION identifier '(' ')' . block   (rule 11)

    '{' 	shift, and go to state 79
    '[' 	shift, and go to state 80

    $default	reduce using rule 92 (block)

    block	go to state 230



state 178

    function  ->  FUNCTION identifier '(' parameters . ')' block   (rule 10)

    ')' 	shift, and go to state 231



state 179

    var  ->  identifier '=' value .   (rule 98)

    $default	reduce using rule 98 (var)



state 180

    var  ->  identifier '=' ref .   (rule 99)

    $default	reduce using rule 99 (var)



state 181

    vars  ->  var ',' vars .   (rule 101)

    $default	reduce using rule 101 (vars)



state 182

    if_cond  ->  IF '(' expression ')' . block   (rule 86)
    if_cond  ->  IF '(' expression ')' . command   (rule 87)
    if_cond  ->  IF '(' expression ')' . block ELSE command   (rule 88)
    if_cond  ->  IF '(' expression ')' . block ELSE block   (rule 89)
    if_cond  ->  IF '(' expression ')' . command ELSE block   (rule 90)
    if_cond  ->  IF '(' expression ')' . command ELSE command   (rule 91)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20
    '{' 	shift, and go to state 79
    '[' 	shift, and go to state 80

    LOCAL	[reduce using rule 92 (block)]
    GLOBAL	[reduce using rule 92 (block)]
    IF  	[reduce using rule 92 (block)]
    INCLUDE	[reduce using rule 92 (block)]
    IMPORT	[reduce using rule 92 (block)]
    RETURN	[reduce using rule 92 (block)]
    BREAK	[reduce using rule 92 (block)]
    CONTINUE	[reduce using rule 92 (block)]
    FOR 	[reduce using rule 92 (block)]
    FOREACH	[reduce using rule 92 (block)]
    IN_ITER	[reduce using rule 92 (block)]
    WHILE	[reduce using rule 92 (block)]
    REPEAT	[reduce using rule 92 (block)]
    IDENT	[reduce using rule 92 (block)]
    DEC 	[reduce using rule 92 (block)]
    INC 	[reduce using rule 92 (block)]
    ';' 	[reduce using rule 92 (block)]
    $default	reduce using rule 92 (block)

    command	go to state 232
    simple	go to state 26
    break	go to state 27
    continue	go to state 28
    import	go to state 29
    include	go to state 30
    return	go to state 31
    empty	go to state 32
    global	go to state 33
    local	go to state 34
    rep 	go to state 35
    call_function	go to state 36
    assign	go to state 37
    inc_dec_exp	go to state 38
    assign_math_op	go to state 39
    assign_shift_op	go to state 40
    identifier	go to state 41
    compound	go to state 42
    for_loop	go to state 43
    foreach_loop	go to state 44
    repeat_loop	go to state 45
    while_loop	go to state 46
    if_cond	go to state 47
    block	go to state 233



state 183

    include  ->  INCLUDE '(' string ')' . ';'   (rule 36)

    ';' 	shift, and go to state 234



state 184

    import  ->  IMPORT '(' string ')' . ';'   (rule 35)

    ';' 	shift, and go to state 235



state 185

    expression  ->  '(' expression ')' .   (rule 114)

    $default	reduce using rule 114 (expression)



state 186

    ip  ->  integer '.' integer . '.' integer '.' integer   (rule 68)

    '.' 	shift, and go to state 236



state 187

    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression OR expression .   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    OR  	[reduce using rule 117 (expression)]
    AND 	[reduce using rule 117 (expression)]
    SUBSTR_EQ	[reduce using rule 117 (expression)]
    SUBSTR_NEQ	[reduce using rule 117 (expression)]
    REGEX_EQ	[reduce using rule 117 (expression)]
    REGEX_NEQ	[reduce using rule 117 (expression)]
    POWER	[reduce using rule 117 (expression)]
    CMP_EQ	[reduce using rule 117 (expression)]
    CMP_GE	[reduce using rule 117 (expression)]
    CMP_LE	[reduce using rule 117 (expression)]
    CMP_NEQ	[reduce using rule 117 (expression)]
    SL  	[reduce using rule 117 (expression)]
    SR  	[reduce using rule 117 (expression)]
    SRR 	[reduce using rule 117 (expression)]
    '&' 	[reduce using rule 117 (expression)]
    '+' 	[reduce using rule 117 (expression)]
    '-' 	[reduce using rule 117 (expression)]
    '*' 	[reduce using rule 117 (expression)]
    '/' 	[reduce using rule 117 (expression)]
    '%' 	[reduce using rule 117 (expression)]
    '^' 	[reduce using rule 117 (expression)]
    '|' 	[reduce using rule 117 (expression)]
    '<' 	[reduce using rule 117 (expression)]
    '>' 	[reduce using rule 117 (expression)]
    $default	reduce using rule 117 (expression)



state 188

    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression AND expression .   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    OR  	[reduce using rule 115 (expression)]
    AND 	[reduce using rule 115 (expression)]
    SUBSTR_EQ	[reduce using rule 115 (expression)]
    SUBSTR_NEQ	[reduce using rule 115 (expression)]
    REGEX_EQ	[reduce using rule 115 (expression)]
    REGEX_NEQ	[reduce using rule 115 (expression)]
    POWER	[reduce using rule 115 (expression)]
    CMP_EQ	[reduce using rule 115 (expression)]
    CMP_GE	[reduce using rule 115 (expression)]
    CMP_LE	[reduce using rule 115 (expression)]
    CMP_NEQ	[reduce using rule 115 (expression)]
    SL  	[reduce using rule 115 (expression)]
    SR  	[reduce using rule 115 (expression)]
    SRR 	[reduce using rule 115 (expression)]
    '&' 	[reduce using rule 115 (expression)]
    '+' 	[reduce using rule 115 (expression)]
    '-' 	[reduce using rule 115 (expression)]
    '*' 	[reduce using rule 115 (expression)]
    '/' 	[reduce using rule 115 (expression)]
    '%' 	[reduce using rule 115 (expression)]
    '^' 	[reduce using rule 115 (expression)]
    '|' 	[reduce using rule 115 (expression)]
    '<' 	[reduce using rule 115 (expression)]
    '>' 	[reduce using rule 115 (expression)]
    $default	reduce using rule 115 (expression)



state 189

    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression SUBSTR_EQ expression .   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    OR  	[reduce using rule 131 (expression)]
    AND 	[reduce using rule 131 (expression)]
    SUBSTR_EQ	[reduce using rule 131 (expression)]
    SUBSTR_NEQ	[reduce using rule 131 (expression)]
    REGEX_EQ	[reduce using rule 131 (expression)]
    REGEX_NEQ	[reduce using rule 131 (expression)]
    POWER	[reduce using rule 131 (expression)]
    CMP_EQ	[reduce using rule 131 (expression)]
    CMP_GE	[reduce using rule 131 (expression)]
    CMP_LE	[reduce using rule 131 (expression)]
    CMP_NEQ	[reduce using rule 131 (expression)]
    SL  	[reduce using rule 131 (expression)]
    SR  	[reduce using rule 131 (expression)]
    SRR 	[reduce using rule 131 (expression)]
    '&' 	[reduce using rule 131 (expression)]
    '+' 	[reduce using rule 131 (expression)]
    '-' 	[reduce using rule 131 (expression)]
    '*' 	[reduce using rule 131 (expression)]
    '/' 	[reduce using rule 131 (expression)]
    '%' 	[reduce using rule 131 (expression)]
    '^' 	[reduce using rule 131 (expression)]
    '|' 	[reduce using rule 131 (expression)]
    '<' 	[reduce using rule 131 (expression)]
    '>' 	[reduce using rule 131 (expression)]
    $default	reduce using rule 131 (expression)



state 190

    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression SUBSTR_NEQ expression .   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    OR  	[reduce using rule 132 (expression)]
    AND 	[reduce using rule 132 (expression)]
    SUBSTR_EQ	[reduce using rule 132 (expression)]
    SUBSTR_NEQ	[reduce using rule 132 (expression)]
    REGEX_EQ	[reduce using rule 132 (expression)]
    REGEX_NEQ	[reduce using rule 132 (expression)]
    POWER	[reduce using rule 132 (expression)]
    CMP_EQ	[reduce using rule 132 (expression)]
    CMP_GE	[reduce using rule 132 (expression)]
    CMP_LE	[reduce using rule 132 (expression)]
    CMP_NEQ	[reduce using rule 132 (expression)]
    SL  	[reduce using rule 132 (expression)]
    SR  	[reduce using rule 132 (expression)]
    SRR 	[reduce using rule 132 (expression)]
    '&' 	[reduce using rule 132 (expression)]
    '+' 	[reduce using rule 132 (expression)]
    '-' 	[reduce using rule 132 (expression)]
    '*' 	[reduce using rule 132 (expression)]
    '/' 	[reduce using rule 132 (expression)]
    '%' 	[reduce using rule 132 (expression)]
    '^' 	[reduce using rule 132 (expression)]
    '|' 	[reduce using rule 132 (expression)]
    '<' 	[reduce using rule 132 (expression)]
    '>' 	[reduce using rule 132 (expression)]
    $default	reduce using rule 132 (expression)



state 191

    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression REGEX_EQ expression .   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    OR  	[reduce using rule 134 (expression)]
    AND 	[reduce using rule 134 (expression)]
    SUBSTR_EQ	[reduce using rule 134 (expression)]
    SUBSTR_NEQ	[reduce using rule 134 (expression)]
    REGEX_EQ	[reduce using rule 134 (expression)]
    REGEX_NEQ	[reduce using rule 134 (expression)]
    POWER	[reduce using rule 134 (expression)]
    CMP_EQ	[reduce using rule 134 (expression)]
    CMP_GE	[reduce using rule 134 (expression)]
    CMP_LE	[reduce using rule 134 (expression)]
    CMP_NEQ	[reduce using rule 134 (expression)]
    SL  	[reduce using rule 134 (expression)]
    SR  	[reduce using rule 134 (expression)]
    SRR 	[reduce using rule 134 (expression)]
    '&' 	[reduce using rule 134 (expression)]
    '+' 	[reduce using rule 134 (expression)]
    '-' 	[reduce using rule 134 (expression)]
    '*' 	[reduce using rule 134 (expression)]
    '/' 	[reduce using rule 134 (expression)]
    '%' 	[reduce using rule 134 (expression)]
    '^' 	[reduce using rule 134 (expression)]
    '|' 	[reduce using rule 134 (expression)]
    '<' 	[reduce using rule 134 (expression)]
    '>' 	[reduce using rule 134 (expression)]
    $default	reduce using rule 134 (expression)



state 192

    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression REGEX_NEQ expression .   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    OR  	[reduce using rule 133 (expression)]
    AND 	[reduce using rule 133 (expression)]
    SUBSTR_EQ	[reduce using rule 133 (expression)]
    SUBSTR_NEQ	[reduce using rule 133 (expression)]
    REGEX_EQ	[reduce using rule 133 (expression)]
    REGEX_NEQ	[reduce using rule 133 (expression)]
    POWER	[reduce using rule 133 (expression)]
    CMP_EQ	[reduce using rule 133 (expression)]
    CMP_GE	[reduce using rule 133 (expression)]
    CMP_LE	[reduce using rule 133 (expression)]
    CMP_NEQ	[reduce using rule 133 (expression)]
    SL  	[reduce using rule 133 (expression)]
    SR  	[reduce using rule 133 (expression)]
    SRR 	[reduce using rule 133 (expression)]
    '&' 	[reduce using rule 133 (expression)]
    '+' 	[reduce using rule 133 (expression)]
    '-' 	[reduce using rule 133 (expression)]
    '*' 	[reduce using rule 133 (expression)]
    '/' 	[reduce using rule 133 (expression)]
    '%' 	[reduce using rule 133 (expression)]
    '^' 	[reduce using rule 133 (expression)]
    '|' 	[reduce using rule 133 (expression)]
    '<' 	[reduce using rule 133 (expression)]
    '>' 	[reduce using rule 133 (expression)]
    $default	reduce using rule 133 (expression)



state 193

    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression POWER expression .   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    OR  	[reduce using rule 122 (expression)]
    AND 	[reduce using rule 122 (expression)]
    SUBSTR_EQ	[reduce using rule 122 (expression)]
    SUBSTR_NEQ	[reduce using rule 122 (expression)]
    REGEX_EQ	[reduce using rule 122 (expression)]
    REGEX_NEQ	[reduce using rule 122 (expression)]
    POWER	[reduce using rule 122 (expression)]
    CMP_EQ	[reduce using rule 122 (expression)]
    CMP_GE	[reduce using rule 122 (expression)]
    CMP_LE	[reduce using rule 122 (expression)]
    CMP_NEQ	[reduce using rule 122 (expression)]
    SL  	[reduce using rule 122 (expression)]
    SR  	[reduce using rule 122 (expression)]
    SRR 	[reduce using rule 122 (expression)]
    '&' 	[reduce using rule 122 (expression)]
    '+' 	[reduce using rule 122 (expression)]
    '-' 	[reduce using rule 122 (expression)]
    '*' 	[reduce using rule 122 (expression)]
    '/' 	[reduce using rule 122 (expression)]
    '%' 	[reduce using rule 122 (expression)]
    '^' 	[reduce using rule 122 (expression)]
    '|' 	[reduce using rule 122 (expression)]
    '<' 	[reduce using rule 122 (expression)]
    '>' 	[reduce using rule 122 (expression)]
    $default	reduce using rule 122 (expression)



state 194

    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression CMP_EQ expression .   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    OR  	[reduce using rule 139 (expression)]
    AND 	[reduce using rule 139 (expression)]
    SUBSTR_EQ	[reduce using rule 139 (expression)]
    SUBSTR_NEQ	[reduce using rule 139 (expression)]
    REGEX_EQ	[reduce using rule 139 (expression)]
    REGEX_NEQ	[reduce using rule 139 (expression)]
    POWER	[reduce using rule 139 (expression)]
    CMP_EQ	[reduce using rule 139 (expression)]
    CMP_GE	[reduce using rule 139 (expression)]
    CMP_LE	[reduce using rule 139 (expression)]
    CMP_NEQ	[reduce using rule 139 (expression)]
    SL  	[reduce using rule 139 (expression)]
    SR  	[reduce using rule 139 (expression)]
    SRR 	[reduce using rule 139 (expression)]
    '&' 	[reduce using rule 139 (expression)]
    '+' 	[reduce using rule 139 (expression)]
    '-' 	[reduce using rule 139 (expression)]
    '*' 	[reduce using rule 139 (expression)]
    '/' 	[reduce using rule 139 (expression)]
    '%' 	[reduce using rule 139 (expression)]
    '^' 	[reduce using rule 139 (expression)]
    '|' 	[reduce using rule 139 (expression)]
    '<' 	[reduce using rule 139 (expression)]
    '>' 	[reduce using rule 139 (expression)]
    $default	reduce using rule 139 (expression)



state 195

    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression CMP_GE expression .   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    OR  	[reduce using rule 137 (expression)]
    AND 	[reduce using rule 137 (expression)]
    SUBSTR_EQ	[reduce using rule 137 (expression)]
    SUBSTR_NEQ	[reduce using rule 137 (expression)]
    REGEX_EQ	[reduce using rule 137 (expression)]
    REGEX_NEQ	[reduce using rule 137 (expression)]
    POWER	[reduce using rule 137 (expression)]
    CMP_EQ	[reduce using rule 137 (expression)]
    CMP_GE	[reduce using rule 137 (expression)]
    CMP_LE	[reduce using rule 137 (expression)]
    CMP_NEQ	[reduce using rule 137 (expression)]
    SL  	[reduce using rule 137 (expression)]
    SR  	[reduce using rule 137 (expression)]
    SRR 	[reduce using rule 137 (expression)]
    '&' 	[reduce using rule 137 (expression)]
    '+' 	[reduce using rule 137 (expression)]
    '-' 	[reduce using rule 137 (expression)]
    '*' 	[reduce using rule 137 (expression)]
    '/' 	[reduce using rule 137 (expression)]
    '%' 	[reduce using rule 137 (expression)]
    '^' 	[reduce using rule 137 (expression)]
    '|' 	[reduce using rule 137 (expression)]
    '<' 	[reduce using rule 137 (expression)]
    '>' 	[reduce using rule 137 (expression)]
    $default	reduce using rule 137 (expression)



state 196

    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression CMP_LE expression .   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    OR  	[reduce using rule 138 (expression)]
    AND 	[reduce using rule 138 (expression)]
    SUBSTR_EQ	[reduce using rule 138 (expression)]
    SUBSTR_NEQ	[reduce using rule 138 (expression)]
    REGEX_EQ	[reduce using rule 138 (expression)]
    REGEX_NEQ	[reduce using rule 138 (expression)]
    POWER	[reduce using rule 138 (expression)]
    CMP_EQ	[reduce using rule 138 (expression)]
    CMP_GE	[reduce using rule 138 (expression)]
    CMP_LE	[reduce using rule 138 (expression)]
    CMP_NEQ	[reduce using rule 138 (expression)]
    SL  	[reduce using rule 138 (expression)]
    SR  	[reduce using rule 138 (expression)]
    SRR 	[reduce using rule 138 (expression)]
    '&' 	[reduce using rule 138 (expression)]
    '+' 	[reduce using rule 138 (expression)]
    '-' 	[reduce using rule 138 (expression)]
    '*' 	[reduce using rule 138 (expression)]
    '/' 	[reduce using rule 138 (expression)]
    '%' 	[reduce using rule 138 (expression)]
    '^' 	[reduce using rule 138 (expression)]
    '|' 	[reduce using rule 138 (expression)]
    '<' 	[reduce using rule 138 (expression)]
    '>' 	[reduce using rule 138 (expression)]
    $default	reduce using rule 138 (expression)



state 197

    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)
    expression  ->  expression CMP_NEQ expression .   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    OR  	[reduce using rule 140 (expression)]
    AND 	[reduce using rule 140 (expression)]
    SUBSTR_EQ	[reduce using rule 140 (expression)]
    SUBSTR_NEQ	[reduce using rule 140 (expression)]
    REGEX_EQ	[reduce using rule 140 (expression)]
    REGEX_NEQ	[reduce using rule 140 (expression)]
    POWER	[reduce using rule 140 (expression)]
    CMP_EQ	[reduce using rule 140 (expression)]
    CMP_GE	[reduce using rule 140 (expression)]
    CMP_LE	[reduce using rule 140 (expression)]
    CMP_NEQ	[reduce using rule 140 (expression)]
    SL  	[reduce using rule 140 (expression)]
    SR  	[reduce using rule 140 (expression)]
    SRR 	[reduce using rule 140 (expression)]
    '&' 	[reduce using rule 140 (expression)]
    '+' 	[reduce using rule 140 (expression)]
    '-' 	[reduce using rule 140 (expression)]
    '*' 	[reduce using rule 140 (expression)]
    '/' 	[reduce using rule 140 (expression)]
    '%' 	[reduce using rule 140 (expression)]
    '^' 	[reduce using rule 140 (expression)]
    '|' 	[reduce using rule 140 (expression)]
    '<' 	[reduce using rule 140 (expression)]
    '>' 	[reduce using rule 140 (expression)]
    $default	reduce using rule 140 (expression)



state 198

    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression SL expression .   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    OR  	[reduce using rule 129 (expression)]
    AND 	[reduce using rule 129 (expression)]
    SUBSTR_EQ	[reduce using rule 129 (expression)]
    SUBSTR_NEQ	[reduce using rule 129 (expression)]
    REGEX_EQ	[reduce using rule 129 (expression)]
    REGEX_NEQ	[reduce using rule 129 (expression)]
    POWER	[reduce using rule 129 (expression)]
    CMP_EQ	[reduce using rule 129 (expression)]
    CMP_GE	[reduce using rule 129 (expression)]
    CMP_LE	[reduce using rule 129 (expression)]
    CMP_NEQ	[reduce using rule 129 (expression)]
    SL  	[reduce using rule 129 (expression)]
    SR  	[reduce using rule 129 (expression)]
    SRR 	[reduce using rule 129 (expression)]
    '&' 	[reduce using rule 129 (expression)]
    '+' 	[reduce using rule 129 (expression)]
    '-' 	[reduce using rule 129 (expression)]
    '*' 	[reduce using rule 129 (expression)]
    '/' 	[reduce using rule 129 (expression)]
    '%' 	[reduce using rule 129 (expression)]
    '^' 	[reduce using rule 129 (expression)]
    '|' 	[reduce using rule 129 (expression)]
    '<' 	[reduce using rule 129 (expression)]
    '>' 	[reduce using rule 129 (expression)]
    $default	reduce using rule 129 (expression)



state 199

    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression SR expression .   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    OR  	[reduce using rule 128 (expression)]
    AND 	[reduce using rule 128 (expression)]
    SUBSTR_EQ	[reduce using rule 128 (expression)]
    SUBSTR_NEQ	[reduce using rule 128 (expression)]
    REGEX_EQ	[reduce using rule 128 (expression)]
    REGEX_NEQ	[reduce using rule 128 (expression)]
    POWER	[reduce using rule 128 (expression)]
    CMP_EQ	[reduce using rule 128 (expression)]
    CMP_GE	[reduce using rule 128 (expression)]
    CMP_LE	[reduce using rule 128 (expression)]
    CMP_NEQ	[reduce using rule 128 (expression)]
    SL  	[reduce using rule 128 (expression)]
    SR  	[reduce using rule 128 (expression)]
    SRR 	[reduce using rule 128 (expression)]
    '&' 	[reduce using rule 128 (expression)]
    '+' 	[reduce using rule 128 (expression)]
    '-' 	[reduce using rule 128 (expression)]
    '*' 	[reduce using rule 128 (expression)]
    '/' 	[reduce using rule 128 (expression)]
    '%' 	[reduce using rule 128 (expression)]
    '^' 	[reduce using rule 128 (expression)]
    '|' 	[reduce using rule 128 (expression)]
    '<' 	[reduce using rule 128 (expression)]
    '>' 	[reduce using rule 128 (expression)]
    $default	reduce using rule 128 (expression)



state 200

    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression SRR expression .   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    OR  	[reduce using rule 130 (expression)]
    AND 	[reduce using rule 130 (expression)]
    SUBSTR_EQ	[reduce using rule 130 (expression)]
    SUBSTR_NEQ	[reduce using rule 130 (expression)]
    REGEX_EQ	[reduce using rule 130 (expression)]
    REGEX_NEQ	[reduce using rule 130 (expression)]
    POWER	[reduce using rule 130 (expression)]
    CMP_EQ	[reduce using rule 130 (expression)]
    CMP_GE	[reduce using rule 130 (expression)]
    CMP_LE	[reduce using rule 130 (expression)]
    CMP_NEQ	[reduce using rule 130 (expression)]
    SL  	[reduce using rule 130 (expression)]
    SR  	[reduce using rule 130 (expression)]
    SRR 	[reduce using rule 130 (expression)]
    '&' 	[reduce using rule 130 (expression)]
    '+' 	[reduce using rule 130 (expression)]
    '-' 	[reduce using rule 130 (expression)]
    '*' 	[reduce using rule 130 (expression)]
    '/' 	[reduce using rule 130 (expression)]
    '%' 	[reduce using rule 130 (expression)]
    '^' 	[reduce using rule 130 (expression)]
    '|' 	[reduce using rule 130 (expression)]
    '<' 	[reduce using rule 130 (expression)]
    '>' 	[reduce using rule 130 (expression)]
    $default	reduce using rule 130 (expression)



state 201

    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression '&' expression .   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    OR  	[reduce using rule 125 (expression)]
    AND 	[reduce using rule 125 (expression)]
    SUBSTR_EQ	[reduce using rule 125 (expression)]
    SUBSTR_NEQ	[reduce using rule 125 (expression)]
    REGEX_EQ	[reduce using rule 125 (expression)]
    REGEX_NEQ	[reduce using rule 125 (expression)]
    POWER	[reduce using rule 125 (expression)]
    CMP_EQ	[reduce using rule 125 (expression)]
    CMP_GE	[reduce using rule 125 (expression)]
    CMP_LE	[reduce using rule 125 (expression)]
    CMP_NEQ	[reduce using rule 125 (expression)]
    SL  	[reduce using rule 125 (expression)]
    SR  	[reduce using rule 125 (expression)]
    SRR 	[reduce using rule 125 (expression)]
    '&' 	[reduce using rule 125 (expression)]
    '+' 	[reduce using rule 125 (expression)]
    '-' 	[reduce using rule 125 (expression)]
    '*' 	[reduce using rule 125 (expression)]
    '/' 	[reduce using rule 125 (expression)]
    '%' 	[reduce using rule 125 (expression)]
    '^' 	[reduce using rule 125 (expression)]
    '|' 	[reduce using rule 125 (expression)]
    '<' 	[reduce using rule 125 (expression)]
    '>' 	[reduce using rule 125 (expression)]
    $default	reduce using rule 125 (expression)



state 202

    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression '+' expression .   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    OR  	[reduce using rule 118 (expression)]
    AND 	[reduce using rule 118 (expression)]
    SUBSTR_EQ	[reduce using rule 118 (expression)]
    SUBSTR_NEQ	[reduce using rule 118 (expression)]
    REGEX_EQ	[reduce using rule 118 (expression)]
    REGEX_NEQ	[reduce using rule 118 (expression)]
    POWER	[reduce using rule 118 (expression)]
    CMP_EQ	[reduce using rule 118 (expression)]
    CMP_GE	[reduce using rule 118 (expression)]
    CMP_LE	[reduce using rule 118 (expression)]
    CMP_NEQ	[reduce using rule 118 (expression)]
    SL  	[reduce using rule 118 (expression)]
    SR  	[reduce using rule 118 (expression)]
    SRR 	[reduce using rule 118 (expression)]
    '&' 	[reduce using rule 118 (expression)]
    '+' 	[reduce using rule 118 (expression)]
    '-' 	[reduce using rule 118 (expression)]
    '*' 	[reduce using rule 118 (expression)]
    '/' 	[reduce using rule 118 (expression)]
    '%' 	[reduce using rule 118 (expression)]
    '^' 	[reduce using rule 118 (expression)]
    '|' 	[reduce using rule 118 (expression)]
    '<' 	[reduce using rule 118 (expression)]
    '>' 	[reduce using rule 118 (expression)]
    $default	reduce using rule 118 (expression)



state 203

    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression '-' expression .   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    OR  	[reduce using rule 119 (expression)]
    AND 	[reduce using rule 119 (expression)]
    SUBSTR_EQ	[reduce using rule 119 (expression)]
    SUBSTR_NEQ	[reduce using rule 119 (expression)]
    REGEX_EQ	[reduce using rule 119 (expression)]
    REGEX_NEQ	[reduce using rule 119 (expression)]
    POWER	[reduce using rule 119 (expression)]
    CMP_EQ	[reduce using rule 119 (expression)]
    CMP_GE	[reduce using rule 119 (expression)]
    CMP_LE	[reduce using rule 119 (expression)]
    CMP_NEQ	[reduce using rule 119 (expression)]
    SL  	[reduce using rule 119 (expression)]
    SR  	[reduce using rule 119 (expression)]
    SRR 	[reduce using rule 119 (expression)]
    '&' 	[reduce using rule 119 (expression)]
    '+' 	[reduce using rule 119 (expression)]
    '-' 	[reduce using rule 119 (expression)]
    '*' 	[reduce using rule 119 (expression)]
    '/' 	[reduce using rule 119 (expression)]
    '%' 	[reduce using rule 119 (expression)]
    '^' 	[reduce using rule 119 (expression)]
    '|' 	[reduce using rule 119 (expression)]
    '<' 	[reduce using rule 119 (expression)]
    '>' 	[reduce using rule 119 (expression)]
    $default	reduce using rule 119 (expression)



state 204

    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression '*' expression .   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    OR  	[reduce using rule 121 (expression)]
    AND 	[reduce using rule 121 (expression)]
    SUBSTR_EQ	[reduce using rule 121 (expression)]
    SUBSTR_NEQ	[reduce using rule 121 (expression)]
    REGEX_EQ	[reduce using rule 121 (expression)]
    REGEX_NEQ	[reduce using rule 121 (expression)]
    POWER	[reduce using rule 121 (expression)]
    CMP_EQ	[reduce using rule 121 (expression)]
    CMP_GE	[reduce using rule 121 (expression)]
    CMP_LE	[reduce using rule 121 (expression)]
    CMP_NEQ	[reduce using rule 121 (expression)]
    SL  	[reduce using rule 121 (expression)]
    SR  	[reduce using rule 121 (expression)]
    SRR 	[reduce using rule 121 (expression)]
    '&' 	[reduce using rule 121 (expression)]
    '+' 	[reduce using rule 121 (expression)]
    '-' 	[reduce using rule 121 (expression)]
    '*' 	[reduce using rule 121 (expression)]
    '/' 	[reduce using rule 121 (expression)]
    '%' 	[reduce using rule 121 (expression)]
    '^' 	[reduce using rule 121 (expression)]
    '|' 	[reduce using rule 121 (expression)]
    '<' 	[reduce using rule 121 (expression)]
    '>' 	[reduce using rule 121 (expression)]
    $default	reduce using rule 121 (expression)



state 205

    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression '/' expression .   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    OR  	[reduce using rule 123 (expression)]
    AND 	[reduce using rule 123 (expression)]
    SUBSTR_EQ	[reduce using rule 123 (expression)]
    SUBSTR_NEQ	[reduce using rule 123 (expression)]
    REGEX_EQ	[reduce using rule 123 (expression)]
    REGEX_NEQ	[reduce using rule 123 (expression)]
    POWER	[reduce using rule 123 (expression)]
    CMP_EQ	[reduce using rule 123 (expression)]
    CMP_GE	[reduce using rule 123 (expression)]
    CMP_LE	[reduce using rule 123 (expression)]
    CMP_NEQ	[reduce using rule 123 (expression)]
    SL  	[reduce using rule 123 (expression)]
    SR  	[reduce using rule 123 (expression)]
    SRR 	[reduce using rule 123 (expression)]
    '&' 	[reduce using rule 123 (expression)]
    '+' 	[reduce using rule 123 (expression)]
    '-' 	[reduce using rule 123 (expression)]
    '*' 	[reduce using rule 123 (expression)]
    '/' 	[reduce using rule 123 (expression)]
    '%' 	[reduce using rule 123 (expression)]
    '^' 	[reduce using rule 123 (expression)]
    '|' 	[reduce using rule 123 (expression)]
    '<' 	[reduce using rule 123 (expression)]
    '>' 	[reduce using rule 123 (expression)]
    $default	reduce using rule 123 (expression)



state 206

    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression '%' expression .   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    OR  	[reduce using rule 124 (expression)]
    AND 	[reduce using rule 124 (expression)]
    SUBSTR_EQ	[reduce using rule 124 (expression)]
    SUBSTR_NEQ	[reduce using rule 124 (expression)]
    REGEX_EQ	[reduce using rule 124 (expression)]
    REGEX_NEQ	[reduce using rule 124 (expression)]
    POWER	[reduce using rule 124 (expression)]
    CMP_EQ	[reduce using rule 124 (expression)]
    CMP_GE	[reduce using rule 124 (expression)]
    CMP_LE	[reduce using rule 124 (expression)]
    CMP_NEQ	[reduce using rule 124 (expression)]
    SL  	[reduce using rule 124 (expression)]
    SR  	[reduce using rule 124 (expression)]
    SRR 	[reduce using rule 124 (expression)]
    '&' 	[reduce using rule 124 (expression)]
    '+' 	[reduce using rule 124 (expression)]
    '-' 	[reduce using rule 124 (expression)]
    '*' 	[reduce using rule 124 (expression)]
    '/' 	[reduce using rule 124 (expression)]
    '%' 	[reduce using rule 124 (expression)]
    '^' 	[reduce using rule 124 (expression)]
    '|' 	[reduce using rule 124 (expression)]
    '<' 	[reduce using rule 124 (expression)]
    '>' 	[reduce using rule 124 (expression)]
    $default	reduce using rule 124 (expression)



state 207

    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression '^' expression .   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    OR  	[reduce using rule 126 (expression)]
    AND 	[reduce using rule 126 (expression)]
    SUBSTR_EQ	[reduce using rule 126 (expression)]
    SUBSTR_NEQ	[reduce using rule 126 (expression)]
    REGEX_EQ	[reduce using rule 126 (expression)]
    REGEX_NEQ	[reduce using rule 126 (expression)]
    POWER	[reduce using rule 126 (expression)]
    CMP_EQ	[reduce using rule 126 (expression)]
    CMP_GE	[reduce using rule 126 (expression)]
    CMP_LE	[reduce using rule 126 (expression)]
    CMP_NEQ	[reduce using rule 126 (expression)]
    SL  	[reduce using rule 126 (expression)]
    SR  	[reduce using rule 126 (expression)]
    SRR 	[reduce using rule 126 (expression)]
    '&' 	[reduce using rule 126 (expression)]
    '+' 	[reduce using rule 126 (expression)]
    '-' 	[reduce using rule 126 (expression)]
    '*' 	[reduce using rule 126 (expression)]
    '/' 	[reduce using rule 126 (expression)]
    '%' 	[reduce using rule 126 (expression)]
    '^' 	[reduce using rule 126 (expression)]
    '|' 	[reduce using rule 126 (expression)]
    '<' 	[reduce using rule 126 (expression)]
    '>' 	[reduce using rule 126 (expression)]
    $default	reduce using rule 126 (expression)



state 208

    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression '|' expression .   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    OR  	[reduce using rule 127 (expression)]
    AND 	[reduce using rule 127 (expression)]
    SUBSTR_EQ	[reduce using rule 127 (expression)]
    SUBSTR_NEQ	[reduce using rule 127 (expression)]
    REGEX_EQ	[reduce using rule 127 (expression)]
    REGEX_NEQ	[reduce using rule 127 (expression)]
    POWER	[reduce using rule 127 (expression)]
    CMP_EQ	[reduce using rule 127 (expression)]
    CMP_GE	[reduce using rule 127 (expression)]
    CMP_LE	[reduce using rule 127 (expression)]
    CMP_NEQ	[reduce using rule 127 (expression)]
    SL  	[reduce using rule 127 (expression)]
    SR  	[reduce using rule 127 (expression)]
    SRR 	[reduce using rule 127 (expression)]
    '&' 	[reduce using rule 127 (expression)]
    '+' 	[reduce using rule 127 (expression)]
    '-' 	[reduce using rule 127 (expression)]
    '*' 	[reduce using rule 127 (expression)]
    '/' 	[reduce using rule 127 (expression)]
    '%' 	[reduce using rule 127 (expression)]
    '^' 	[reduce using rule 127 (expression)]
    '|' 	[reduce using rule 127 (expression)]
    '<' 	[reduce using rule 127 (expression)]
    '>' 	[reduce using rule 127 (expression)]
    $default	reduce using rule 127 (expression)



state 209

    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression '<' expression .   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    OR  	[reduce using rule 135 (expression)]
    AND 	[reduce using rule 135 (expression)]
    SUBSTR_EQ	[reduce using rule 135 (expression)]
    SUBSTR_NEQ	[reduce using rule 135 (expression)]
    REGEX_EQ	[reduce using rule 135 (expression)]
    REGEX_NEQ	[reduce using rule 135 (expression)]
    POWER	[reduce using rule 135 (expression)]
    CMP_EQ	[reduce using rule 135 (expression)]
    CMP_GE	[reduce using rule 135 (expression)]
    CMP_LE	[reduce using rule 135 (expression)]
    CMP_NEQ	[reduce using rule 135 (expression)]
    SL  	[reduce using rule 135 (expression)]
    SR  	[reduce using rule 135 (expression)]
    SRR 	[reduce using rule 135 (expression)]
    '&' 	[reduce using rule 135 (expression)]
    '+' 	[reduce using rule 135 (expression)]
    '-' 	[reduce using rule 135 (expression)]
    '*' 	[reduce using rule 135 (expression)]
    '/' 	[reduce using rule 135 (expression)]
    '%' 	[reduce using rule 135 (expression)]
    '^' 	[reduce using rule 135 (expression)]
    '|' 	[reduce using rule 135 (expression)]
    '<' 	[reduce using rule 135 (expression)]
    '>' 	[reduce using rule 135 (expression)]
    $default	reduce using rule 135 (expression)



state 210

    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression '>' expression .   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    OR  	[reduce using rule 136 (expression)]
    AND 	[reduce using rule 136 (expression)]
    SUBSTR_EQ	[reduce using rule 136 (expression)]
    SUBSTR_NEQ	[reduce using rule 136 (expression)]
    REGEX_EQ	[reduce using rule 136 (expression)]
    REGEX_NEQ	[reduce using rule 136 (expression)]
    POWER	[reduce using rule 136 (expression)]
    CMP_EQ	[reduce using rule 136 (expression)]
    CMP_GE	[reduce using rule 136 (expression)]
    CMP_LE	[reduce using rule 136 (expression)]
    CMP_NEQ	[reduce using rule 136 (expression)]
    SL  	[reduce using rule 136 (expression)]
    SR  	[reduce using rule 136 (expression)]
    SRR 	[reduce using rule 136 (expression)]
    '&' 	[reduce using rule 136 (expression)]
    '+' 	[reduce using rule 136 (expression)]
    '-' 	[reduce using rule 136 (expression)]
    '*' 	[reduce using rule 136 (expression)]
    '/' 	[reduce using rule 136 (expression)]
    '%' 	[reduce using rule 136 (expression)]
    '^' 	[reduce using rule 136 (expression)]
    '|' 	[reduce using rule 136 (expression)]
    '<' 	[reduce using rule 136 (expression)]
    '>' 	[reduce using rule 136 (expression)]
    $default	reduce using rule 136 (expression)



state 211

    for_loop  ->  FOR '(' expression ';' . expression ';' expression ')' block   (rule 76)
    for_loop  ->  FOR '(' expression ';' . expression ';' expression ')' command   (rule 77)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 237



state 212

    foreach_loop  ->  FOREACH '(' identifier IN_ITER . expression ')' block   (rule 80)
    foreach_loop  ->  FOREACH '(' identifier IN_ITER . expression ')' command   (rule 81)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 238



state 213

    foreach_loop  ->  FOREACH identifier '(' expression . ')' block   (rule 78)
    foreach_loop  ->  FOREACH identifier '(' expression . ')' command   (rule 79)
    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    ')' 	shift, and go to state 239
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136



state 214

    while_loop  ->  WHILE '(' expression ')' . block   (rule 84)
    while_loop  ->  WHILE '(' expression ')' . command   (rule 85)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20
    '{' 	shift, and go to state 79
    '[' 	shift, and go to state 80

    LOCAL	[reduce using rule 92 (block)]
    GLOBAL	[reduce using rule 92 (block)]
    IF  	[reduce using rule 92 (block)]
    INCLUDE	[reduce using rule 92 (block)]
    IMPORT	[reduce using rule 92 (block)]
    RETURN	[reduce using rule 92 (block)]
    BREAK	[reduce using rule 92 (block)]
    CONTINUE	[reduce using rule 92 (block)]
    FOR 	[reduce using rule 92 (block)]
    FOREACH	[reduce using rule 92 (block)]
    IN_ITER	[reduce using rule 92 (block)]
    WHILE	[reduce using rule 92 (block)]
    REPEAT	[reduce using rule 92 (block)]
    IDENT	[reduce using rule 92 (block)]
    DEC 	[reduce using rule 92 (block)]
    INC 	[reduce using rule 92 (block)]
    ';' 	[reduce using rule 92 (block)]
    $default	reduce using rule 92 (block)

    command	go to state 240
    simple	go to state 26
    break	go to state 27
    continue	go to state 28
    import	go to state 29
    include	go to state 30
    return	go to state 31
    empty	go to state 32
    global	go to state 33
    local	go to state 34
    rep 	go to state 35
    call_function	go to state 36
    assign	go to state 37
    inc_dec_exp	go to state 38
    assign_math_op	go to state 39
    assign_shift_op	go to state 40
    identifier	go to state 41
    compound	go to state 42
    for_loop	go to state 43
    foreach_loop	go to state 44
    repeat_loop	go to state 45
    while_loop	go to state 46
    if_cond	go to state 47
    block	go to state 241



state 215

    ref  ->  '@' IDENT .   (rule 70)

    $default	reduce using rule 70 (ref)



state 216

    block  ->  '{' lines '}' .   (rule 94)

    $default	reduce using rule 94 (block)



state 217

    argument  ->  identifier ':' . expression   (rule 109)
    argument  ->  identifier ':' . ref   (rule 110)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '@' 	shift, and go to state 141
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    ref 	go to state 242
    expression	go to state 243



state 218

    argument  ->  integer ':' . expression   (rule 106)
    argument  ->  integer ':' . ref   (rule 108)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '@' 	shift, and go to state 141
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    ref 	go to state 244
    expression	go to state 245



state 219

    argument  ->  string ':' . expression   (rule 105)
    argument  ->  string ':' . ref   (rule 107)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '@' 	shift, and go to state 141
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    ref 	go to state 246
    expression	go to state 247



state 220

    argument_list  ->  argument_list ',' . argument   (rule 103)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '@' 	shift, and go to state 141
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 153
    integer	go to state 146
    string	go to state 147
    ip  	go to state 70
    null	go to state 71
    ref 	go to state 148
    argument	go to state 248
    expression	go to state 151



state 221

    block  ->  '{' argument_list '}' .   (rule 95)

    $default	reduce using rule 95 (block)



state 222

    block  ->  '[' argument_list ']' .   (rule 97)

    $default	reduce using rule 97 (block)



state 223

    repeat_loop  ->  REPEAT command UNTIL expression . ';'   (rule 83)
    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    ';' 	shift, and go to state 249
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136



state 224

    repeat_loop  ->  REPEAT block UNTIL expression . ';'   (rule 82)
    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    ';' 	shift, and go to state 250
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136



state 225

    rep  ->  call_function REP expression ';' .   (rule 42)

    $default	reduce using rule 42 (rep)



state 226

    call_function  ->  identifier '(' ')' ';' .   (rule 44)

    $default	reduce using rule 44 (call_function)



state 227

    parameter  ->  '&' identifier .   (rule 15)

    $default	reduce using rule 15 (parameter)



state 228

    call_function  ->  identifier '(' parameters ')' . ';'   (rule 43)

    ';' 	shift, and go to state 251



state 229

    parameters  ->  parameter ',' . parameters   (rule 12)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    TRUE	shift, and go to state 61
    '&' 	shift, and go to state 168

    parameters	go to state 252
    parameter	go to state 170
    assign	go to state 171
    assign_math_op	go to state 39
    assign_shift_op	go to state 40
    identifier	go to state 172
    integer	go to state 173
    string	go to state 174



state 230

    function  ->  FUNCTION identifier '(' ')' block .   (rule 11)

    $default	reduce using rule 11 (function)



state 231

    function  ->  FUNCTION identifier '(' parameters ')' . block   (rule 10)

    '{' 	shift, and go to state 79
    '[' 	shift, and go to state 80

    $default	reduce using rule 92 (block)

    block	go to state 253



state 232

    if_cond  ->  IF '(' expression ')' command .   (rule 87)
    if_cond  ->  IF '(' expression ')' command . ELSE block   (rule 90)
    if_cond  ->  IF '(' expression ')' command . ELSE command   (rule 91)

    ELSE	shift, and go to state 254

    ELSE	[reduce using rule 87 (if_cond)]
    $default	reduce using rule 87 (if_cond)



state 233

    if_cond  ->  IF '(' expression ')' block .   (rule 86)
    if_cond  ->  IF '(' expression ')' block . ELSE command   (rule 88)
    if_cond  ->  IF '(' expression ')' block . ELSE block   (rule 89)

    ELSE	shift, and go to state 255

    ELSE	[reduce using rule 86 (if_cond)]
    $default	reduce using rule 86 (if_cond)



state 234

    include  ->  INCLUDE '(' string ')' ';' .   (rule 36)

    $default	reduce using rule 36 (include)



state 235

    import  ->  IMPORT '(' string ')' ';' .   (rule 35)

    $default	reduce using rule 35 (import)



state 236

    ip  ->  integer '.' integer '.' . integer '.' integer   (rule 68)

    INT 	shift, and go to state 57
    FALSE	shift, and go to state 59
    TRUE	shift, and go to state 61

    integer	go to state 256



state 237

    for_loop  ->  FOR '(' expression ';' expression . ';' expression ')' block   (rule 76)
    for_loop  ->  FOR '(' expression ';' expression . ';' expression ')' command   (rule 77)
    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    ';' 	shift, and go to state 257
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136



state 238

    foreach_loop  ->  FOREACH '(' identifier IN_ITER expression . ')' block   (rule 80)
    foreach_loop  ->  FOREACH '(' identifier IN_ITER expression . ')' command   (rule 81)
    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    ')' 	shift, and go to state 258
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136



state 239

    foreach_loop  ->  FOREACH identifier '(' expression ')' . block   (rule 78)
    foreach_loop  ->  FOREACH identifier '(' expression ')' . command   (rule 79)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20
    '{' 	shift, and go to state 79
    '[' 	shift, and go to state 80

    LOCAL	[reduce using rule 92 (block)]
    GLOBAL	[reduce using rule 92 (block)]
    IF  	[reduce using rule 92 (block)]
    INCLUDE	[reduce using rule 92 (block)]
    IMPORT	[reduce using rule 92 (block)]
    RETURN	[reduce using rule 92 (block)]
    BREAK	[reduce using rule 92 (block)]
    CONTINUE	[reduce using rule 92 (block)]
    FOR 	[reduce using rule 92 (block)]
    FOREACH	[reduce using rule 92 (block)]
    IN_ITER	[reduce using rule 92 (block)]
    WHILE	[reduce using rule 92 (block)]
    REPEAT	[reduce using rule 92 (block)]
    IDENT	[reduce using rule 92 (block)]
    DEC 	[reduce using rule 92 (block)]
    INC 	[reduce using rule 92 (block)]
    ';' 	[reduce using rule 92 (block)]
    $default	reduce using rule 92 (block)

    command	go to state 259
    simple	go to state 26
    break	go to state 27
    continue	go to state 28
    import	go to state 29
    include	go to state 30
    return	go to state 31
    empty	go to state 32
    global	go to state 33
    local	go to state 34
    rep 	go to state 35
    call_function	go to state 36
    assign	go to state 37
    inc_dec_exp	go to state 38
    assign_math_op	go to state 39
    assign_shift_op	go to state 40
    identifier	go to state 41
    compound	go to state 42
    for_loop	go to state 43
    foreach_loop	go to state 44
    repeat_loop	go to state 45
    while_loop	go to state 46
    if_cond	go to state 47
    block	go to state 260



state 240

    while_loop  ->  WHILE '(' expression ')' command .   (rule 85)

    $default	reduce using rule 85 (while_loop)



state 241

    while_loop  ->  WHILE '(' expression ')' block .   (rule 84)

    $default	reduce using rule 84 (while_loop)



state 242

    argument  ->  identifier ':' ref .   (rule 110)

    $default	reduce using rule 110 (argument)



state 243

    argument  ->  identifier ':' expression .   (rule 109)
    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    $default	reduce using rule 109 (argument)



state 244

    argument  ->  integer ':' ref .   (rule 108)

    $default	reduce using rule 108 (argument)



state 245

    argument  ->  integer ':' expression .   (rule 106)
    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    $default	reduce using rule 106 (argument)



state 246

    argument  ->  string ':' ref .   (rule 107)

    $default	reduce using rule 107 (argument)



state 247

    argument  ->  string ':' expression .   (rule 105)
    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136

    $default	reduce using rule 105 (argument)



state 248

    argument_list  ->  argument_list ',' argument .   (rule 103)

    $default	reduce using rule 103 (argument_list)



state 249

    repeat_loop  ->  REPEAT command UNTIL expression ';' .   (rule 83)

    $default	reduce using rule 83 (repeat_loop)



state 250

    repeat_loop  ->  REPEAT block UNTIL expression ';' .   (rule 82)

    $default	reduce using rule 82 (repeat_loop)



state 251

    call_function  ->  identifier '(' parameters ')' ';' .   (rule 43)

    $default	reduce using rule 43 (call_function)



state 252

    parameters  ->  parameter ',' parameters .   (rule 12)

    $default	reduce using rule 12 (parameters)



state 253

    function  ->  FUNCTION identifier '(' parameters ')' block .   (rule 10)

    $default	reduce using rule 10 (function)



state 254

    if_cond  ->  IF '(' expression ')' command ELSE . block   (rule 90)
    if_cond  ->  IF '(' expression ')' command ELSE . command   (rule 91)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20
    '{' 	shift, and go to state 79
    '[' 	shift, and go to state 80

    LOCAL	[reduce using rule 92 (block)]
    GLOBAL	[reduce using rule 92 (block)]
    IF  	[reduce using rule 92 (block)]
    INCLUDE	[reduce using rule 92 (block)]
    IMPORT	[reduce using rule 92 (block)]
    RETURN	[reduce using rule 92 (block)]
    BREAK	[reduce using rule 92 (block)]
    CONTINUE	[reduce using rule 92 (block)]
    FOR 	[reduce using rule 92 (block)]
    FOREACH	[reduce using rule 92 (block)]
    IN_ITER	[reduce using rule 92 (block)]
    WHILE	[reduce using rule 92 (block)]
    REPEAT	[reduce using rule 92 (block)]
    IDENT	[reduce using rule 92 (block)]
    DEC 	[reduce using rule 92 (block)]
    INC 	[reduce using rule 92 (block)]
    ';' 	[reduce using rule 92 (block)]
    $default	reduce using rule 92 (block)

    command	go to state 261
    simple	go to state 26
    break	go to state 27
    continue	go to state 28
    import	go to state 29
    include	go to state 30
    return	go to state 31
    empty	go to state 32
    global	go to state 33
    local	go to state 34
    rep 	go to state 35
    call_function	go to state 36
    assign	go to state 37
    inc_dec_exp	go to state 38
    assign_math_op	go to state 39
    assign_shift_op	go to state 40
    identifier	go to state 41
    compound	go to state 42
    for_loop	go to state 43
    foreach_loop	go to state 44
    repeat_loop	go to state 45
    while_loop	go to state 46
    if_cond	go to state 47
    block	go to state 262



state 255

    if_cond  ->  IF '(' expression ')' block ELSE . command   (rule 88)
    if_cond  ->  IF '(' expression ')' block ELSE . block   (rule 89)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20
    '{' 	shift, and go to state 79
    '[' 	shift, and go to state 80

    LOCAL	[reduce using rule 92 (block)]
    GLOBAL	[reduce using rule 92 (block)]
    IF  	[reduce using rule 92 (block)]
    INCLUDE	[reduce using rule 92 (block)]
    IMPORT	[reduce using rule 92 (block)]
    RETURN	[reduce using rule 92 (block)]
    BREAK	[reduce using rule 92 (block)]
    CONTINUE	[reduce using rule 92 (block)]
    FOR 	[reduce using rule 92 (block)]
    FOREACH	[reduce using rule 92 (block)]
    IN_ITER	[reduce using rule 92 (block)]
    WHILE	[reduce using rule 92 (block)]
    REPEAT	[reduce using rule 92 (block)]
    IDENT	[reduce using rule 92 (block)]
    DEC 	[reduce using rule 92 (block)]
    INC 	[reduce using rule 92 (block)]
    ';' 	[reduce using rule 92 (block)]
    $default	reduce using rule 92 (block)

    command	go to state 263
    simple	go to state 26
    break	go to state 27
    continue	go to state 28
    import	go to state 29
    include	go to state 30
    return	go to state 31
    empty	go to state 32
    global	go to state 33
    local	go to state 34
    rep 	go to state 35
    call_function	go to state 36
    assign	go to state 37
    inc_dec_exp	go to state 38
    assign_math_op	go to state 39
    assign_shift_op	go to state 40
    identifier	go to state 41
    compound	go to state 42
    for_loop	go to state 43
    foreach_loop	go to state 44
    repeat_loop	go to state 45
    while_loop	go to state 46
    if_cond	go to state 47
    block	go to state 264



state 256

    ip  ->  integer '.' integer '.' integer . '.' integer   (rule 68)

    '.' 	shift, and go to state 265



state 257

    for_loop  ->  FOR '(' expression ';' expression ';' . expression ')' block   (rule 76)
    for_loop  ->  FOR '(' expression ';' expression ';' . expression ')' command   (rule 77)

    IN_ITER	shift, and go to state 14
    IDENT	shift, and go to state 17
    INT 	shift, and go to state 57
    STRING	shift, and go to state 58
    FALSE	shift, and go to state 59
    _NULL_	shift, and go to state 60
    TRUE	shift, and go to state 61
    '(' 	shift, and go to state 62
    '!' 	shift, and go to state 64
    '-' 	shift, and go to state 65

    '-' 	[reduce using rule 113 (expression)]
    $default	reduce using rule 113 (expression)

    call_function	go to state 66
    identifier	go to state 67
    integer	go to state 68
    string	go to state 69
    ip  	go to state 70
    null	go to state 71
    expression	go to state 266



state 258

    foreach_loop  ->  FOREACH '(' identifier IN_ITER expression ')' . block   (rule 80)
    foreach_loop  ->  FOREACH '(' identifier IN_ITER expression ')' . command   (rule 81)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20
    '{' 	shift, and go to state 79
    '[' 	shift, and go to state 80

    LOCAL	[reduce using rule 92 (block)]
    GLOBAL	[reduce using rule 92 (block)]
    IF  	[reduce using rule 92 (block)]
    INCLUDE	[reduce using rule 92 (block)]
    IMPORT	[reduce using rule 92 (block)]
    RETURN	[reduce using rule 92 (block)]
    BREAK	[reduce using rule 92 (block)]
    CONTINUE	[reduce using rule 92 (block)]
    FOR 	[reduce using rule 92 (block)]
    FOREACH	[reduce using rule 92 (block)]
    IN_ITER	[reduce using rule 92 (block)]
    WHILE	[reduce using rule 92 (block)]
    REPEAT	[reduce using rule 92 (block)]
    IDENT	[reduce using rule 92 (block)]
    DEC 	[reduce using rule 92 (block)]
    INC 	[reduce using rule 92 (block)]
    ';' 	[reduce using rule 92 (block)]
    $default	reduce using rule 92 (block)

    command	go to state 267
    simple	go to state 26
    break	go to state 27
    continue	go to state 28
    import	go to state 29
    include	go to state 30
    return	go to state 31
    empty	go to state 32
    global	go to state 33
    local	go to state 34
    rep 	go to state 35
    call_function	go to state 36
    assign	go to state 37
    inc_dec_exp	go to state 38
    assign_math_op	go to state 39
    assign_shift_op	go to state 40
    identifier	go to state 41
    compound	go to state 42
    for_loop	go to state 43
    foreach_loop	go to state 44
    repeat_loop	go to state 45
    while_loop	go to state 46
    if_cond	go to state 47
    block	go to state 268



state 259

    foreach_loop  ->  FOREACH identifier '(' expression ')' command .   (rule 79)

    $default	reduce using rule 79 (foreach_loop)



state 260

    foreach_loop  ->  FOREACH identifier '(' expression ')' block .   (rule 78)

    $default	reduce using rule 78 (foreach_loop)



state 261

    if_cond  ->  IF '(' expression ')' command ELSE command .   (rule 91)

    $default	reduce using rule 91 (if_cond)



state 262

    if_cond  ->  IF '(' expression ')' command ELSE block .   (rule 90)

    $default	reduce using rule 90 (if_cond)



state 263

    if_cond  ->  IF '(' expression ')' block ELSE command .   (rule 88)

    $default	reduce using rule 88 (if_cond)



state 264

    if_cond  ->  IF '(' expression ')' block ELSE block .   (rule 89)

    $default	reduce using rule 89 (if_cond)



state 265

    ip  ->  integer '.' integer '.' integer '.' . integer   (rule 68)

    INT 	shift, and go to state 57
    FALSE	shift, and go to state 59
    TRUE	shift, and go to state 61

    integer	go to state 269



state 266

    for_loop  ->  FOR '(' expression ';' expression ';' expression . ')' block   (rule 76)
    for_loop  ->  FOR '(' expression ';' expression ';' expression . ')' command   (rule 77)
    expression  ->  expression . AND expression   (rule 115)
    expression  ->  expression . OR expression   (rule 117)
    expression  ->  expression . '+' expression   (rule 118)
    expression  ->  expression . '-' expression   (rule 119)
    expression  ->  expression . '*' expression   (rule 121)
    expression  ->  expression . POWER expression   (rule 122)
    expression  ->  expression . '/' expression   (rule 123)
    expression  ->  expression . '%' expression   (rule 124)
    expression  ->  expression . '&' expression   (rule 125)
    expression  ->  expression . '^' expression   (rule 126)
    expression  ->  expression . '|' expression   (rule 127)
    expression  ->  expression . SR expression   (rule 128)
    expression  ->  expression . SL expression   (rule 129)
    expression  ->  expression . SRR expression   (rule 130)
    expression  ->  expression . SUBSTR_EQ expression   (rule 131)
    expression  ->  expression . SUBSTR_NEQ expression   (rule 132)
    expression  ->  expression . REGEX_NEQ expression   (rule 133)
    expression  ->  expression . REGEX_EQ expression   (rule 134)
    expression  ->  expression . '<' expression   (rule 135)
    expression  ->  expression . '>' expression   (rule 136)
    expression  ->  expression . CMP_GE expression   (rule 137)
    expression  ->  expression . CMP_LE expression   (rule 138)
    expression  ->  expression . CMP_EQ expression   (rule 139)
    expression  ->  expression . CMP_NEQ expression   (rule 140)

    OR  	shift, and go to state 112
    AND 	shift, and go to state 113
    SUBSTR_EQ	shift, and go to state 114
    SUBSTR_NEQ	shift, and go to state 115
    REGEX_EQ	shift, and go to state 116
    REGEX_NEQ	shift, and go to state 117
    POWER	shift, and go to state 118
    CMP_EQ	shift, and go to state 119
    CMP_GE	shift, and go to state 120
    CMP_LE	shift, and go to state 121
    CMP_NEQ	shift, and go to state 122
    SL  	shift, and go to state 123
    SR  	shift, and go to state 124
    SRR 	shift, and go to state 125
    ')' 	shift, and go to state 270
    '&' 	shift, and go to state 126
    '+' 	shift, and go to state 128
    '-' 	shift, and go to state 129
    '*' 	shift, and go to state 130
    '/' 	shift, and go to state 131
    '%' 	shift, and go to state 132
    '^' 	shift, and go to state 133
    '|' 	shift, and go to state 134
    '<' 	shift, and go to state 135
    '>' 	shift, and go to state 136



state 267

    foreach_loop  ->  FOREACH '(' identifier IN_ITER expression ')' command .   (rule 81)

    $default	reduce using rule 81 (foreach_loop)



state 268

    foreach_loop  ->  FOREACH '(' identifier IN_ITER expression ')' block .   (rule 80)

    $default	reduce using rule 80 (foreach_loop)



state 269

    ip  ->  integer '.' integer '.' integer '.' integer .   (rule 68)

    $default	reduce using rule 68 (ip)



state 270

    for_loop  ->  FOR '(' expression ';' expression ';' expression ')' . block   (rule 76)
    for_loop  ->  FOR '(' expression ';' expression ';' expression ')' . command   (rule 77)

    LOCAL	shift, and go to state 3
    GLOBAL	shift, and go to state 4
    IF  	shift, and go to state 5
    INCLUDE	shift, and go to state 6
    IMPORT	shift, and go to state 8
    RETURN	shift, and go to state 9
    BREAK	shift, and go to state 10
    CONTINUE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    IN_ITER	shift, and go to state 14
    WHILE	shift, and go to state 15
    REPEAT	shift, and go to state 16
    IDENT	shift, and go to state 17
    DEC 	shift, and go to state 18
    INC 	shift, and go to state 19
    ';' 	shift, and go to state 20
    '{' 	shift, and go to state 79
    '[' 	shift, and go to state 80

    LOCAL	[reduce using rule 92 (block)]
    GLOBAL	[reduce using rule 92 (block)]
    IF  	[reduce using rule 92 (block)]
    INCLUDE	[reduce using rule 92 (block)]
    IMPORT	[reduce using rule 92 (block)]
    RETURN	[reduce using rule 92 (block)]
    BREAK	[reduce using rule 92 (block)]
    CONTINUE	[reduce using rule 92 (block)]
    FOR 	[reduce using rule 92 (block)]
    FOREACH	[reduce using rule 92 (block)]
    IN_ITER	[reduce using rule 92 (block)]
    WHILE	[reduce using rule 92 (block)]
    REPEAT	[reduce using rule 92 (block)]
    IDENT	[reduce using rule 92 (block)]
    DEC 	[reduce using rule 92 (block)]
    INC 	[reduce using rule 92 (block)]
    ';' 	[reduce using rule 92 (block)]
    $default	reduce using rule 92 (block)

    command	go to state 271
    simple	go to state 26
    break	go to state 27
    continue	go to state 28
    import	go to state 29
    include	go to state 30
    return	go to state 31
    empty	go to state 32
    global	go to state 33
    local	go to state 34
    rep 	go to state 35
    call_function	go to state 36
    assign	go to state 37
    inc_dec_exp	go to state 38
    assign_math_op	go to state 39
    assign_shift_op	go to state 40
    identifier	go to state 41
    compound	go to state 42
    for_loop	go to state 43
    foreach_loop	go to state 44
    repeat_loop	go to state 45
    while_loop	go to state 46
    if_cond	go to state 47
    block	go to state 272



state 271

    for_loop  ->  FOR '(' expression ';' expression ';' expression ')' command .   (rule 77)

    $default	reduce using rule 77 (for_loop)



state 272

    for_loop  ->  FOR '(' expression ';' expression ';' expression ')' block .   (rule 76)

    $default	reduce using rule 76 (for_loop)



state 273

    $   	go to state 274



state 274

    $   	go to state 275



state 275

    $default	accept
