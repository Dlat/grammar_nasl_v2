#
# (C) Tenable Network Security, Inc.
#

include("compat.inc");

if (description)
{
  script_id(72264);
  script_version("$Revision: 1.4 $");
  script_cvs_date("$Date: 2016/05/20 14:03:01 $");

  script_cve_id("CVE-2014-1201");
  script_bugtraq_id(64783);
  script_osvdb_id(101903);

  script_name(english:"Lorex Technologies Edge Series Security DVR ActiveX Buffer Overflow");
  script_summary(english:"Checks if the kill bit is set on affected controls.");

  script_set_attribute(
    attribute:"synopsis",
    value:
"The remote Windows host has one or more ActiveX controls installed that
are affected by a buffer overflow vulnerability."
  );
  script_set_attribute(
    attribute:"description",
    value:
"The remote Windows host has one or more versions of Lorex Technologies'
INetViewX ActiveX control installed.  The HTTP_PORT parameter in these
controls is affected by a buffer overflow vulnerability that could allow
an attacker to remotely execute arbitrary code if exploited."
  );
  script_set_attribute(attribute:"see_also",value:"http://seclists.org/fulldisclosure/2014/Jan/41");
  script_set_attribute(
    attribute:"solution",
    value:
"There are currently no fixes available but as a workaround, set the
kill bit on the affected ActiveX controls."
  );
  script_set_cvss_base_vector("CVSS2#AV:N/AC:M/Au:N/C:C/I:C/A:C");
  script_set_cvss_temporal_vector("CVSS2#E:POC/RL:U/RC:ND");
  script_set_attribute(attribute:"exploitability_ease", value:"Exploits are available");
  script_set_attribute(attribute:"exploit_available", value:"true");
  script_set_attribute(attribute:"exploit_framework_canvas", value:"true");
  script_set_attribute(attribute:"canvas_package", value:'D2ExploitPack');

  script_set_attribute(attribute:"vuln_publication_date",value:"2014/01/09");
  script_set_attribute(attribute:"plugin_publication_date", value:"2014/02/03");

  script_set_attribute(attribute:"plugin_type",value:"local");
  script_set_attribute(attribute:"cpe",value:"cpe:/a:lorex_technology:edge%2b_lh320_firmware");
  script_set_attribute(attribute:"cpe",value:"cpe:/a:lorex_technology:edge2_lh330_firmware");
  script_set_attribute(attribute:"cpe",value:"cpe:/a:lorex_technology:edge3_lh340_firmware");
  script_set_attribute(attribute:"cpe",value:"cpe:/a:lorex_technology:edge_lh310_firmware");
  script_end_attributes();

  script_category(ACT_GATHER_INFO);
  script_family(english:"Windows");

  script_copyright(english:"This script is Copyright (C) 2014-2016 Tenable Network Security, Inc.");

  script_dependencies("smb_hotfixes.nasl");
  script_require_keys("SMB/Registry/Enumerated", "SMB/WindowsVersion");
  script_require_ports(139, 445);

  exit(0);
}

include('global_settings.inc');
include('misc_func.inc');
include('smb_func.inc');
include('smb_activex_func.inc');

get_kb_item_or_exit('SMB/Registry/Enumerated');
get_kb_item_or_exit('SMB/WindowsVersion', exit_code:1);

if (activex_init() != ACX_OK) exit(1, 'activex_init() failed.');

clsids = make_list(
  "{05B550C0-E424-4F91-9928-EA970817BFC0}",
  "{D2F3E6A5-971D-42BA-9CC2-B462C8E26B29}",
  "{ABF3DA55-B8B8-4875-9B19-C85B85024CA0}"
  );

report = "";

foreach clsid (clsids)
{
  if (report_paranoia > 1 || activex_get_killbit(clsid:clsid) == 0)
  {
    file = activex_get_filename(clsid:clsid);

    if (!file) continue;

    # Get its version.
    version = activex_get_fileversion(clsid:clsid);

    if (!version) version = "Unknown";

    report +=
      '\n  Class identifier  : ' + clsid +
      '\n  Filename          : ' + file +
      '\n  Installed version : ' + version + '\n';
  }
}
activex_end();

if (report)
{
  if (report_paranoia > 1)
  {
    report +=
    '\n' +
    'Note, though, that Nessus did not check whether the kill bit was\n' +
    "set for each control's CLSID because of the Report Paranoia setting" + '\n' +
    'in effect when this scan was run.\n';
  }
  else
  {
    report +=
    '\n' +
    'Moreover, their kill bits are not set so they are accessible via Internet\n' +
    'Explorer.\n';
  }

  port = kb_smb_transport();
  if (report_verbosity > 0) security_hole(port:port, extra:report);
  else security_hole(port:port);
  exit(0);
}
else exit(0, "One or more affected controls were found but the kill bit was set on all of them.");
