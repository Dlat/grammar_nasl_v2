#
# (C) Tenable Network Security, Inc.
#

include("compat.inc");

if (description)
{
  script_id(54986);
  script_version("$Revision: 1.6 $");
  script_cvs_date("$Date: 2016/11/03 20:40:06 $");

  script_cve_id(
    "CVE-2011-1849",
    "CVE-2011-1851",
    "CVE-2011-1852",
    "CVE-2011-1853"
  );
  script_bugtraq_id(47789);
  script_osvdb_id(72392, 72394, 72395, 72396);

  script_name(english:"HP Intelligent Management Center TFTP Multiple Vulnerabilities");
  script_summary(english:"HP Intelligent Management Center's TFTP server has multiple vulnerabilities");

  script_set_attribute(
   attribute:"synopsis",
   value:
"The version of HP Intelligent Management Center's TFTP server running
on the remote host is affected by multiple vulnerabilities."
  );
  script_set_attribute(
    attribute:"description",
    value:
"A TFTP server belonging to HP Intelligent Management Center is running
on the remote host.  This is a collection point for any HP Intelligent
Management Center clients on the network. 

The installed version of this server contains a number of
vulnerabilities, including code execution and arbitrary file creation. 

It is also likely that the HP Intelligent Management Center install
itself is affected by other vulnerabilities, although this plugin has
not checked for those issues."
  );
  script_set_attribute(attribute:"see_also", value:"http://www.zerodayinitiative.com/advisories/ZDI-11-161/");
  script_set_attribute(attribute:"see_also", value:"http://www.zerodayinitiative.com/advisories/ZDI-11-163/");
  script_set_attribute(attribute:"see_also", value:"http://www.zerodayinitiative.com/advisories/ZDI-11-164/");
  script_set_attribute(attribute:"see_also", value:"http://www.zerodayinitiative.com/advisories/ZDI-11-165/");
  script_set_attribute(attribute:"see_also", value:"http://seclists.org/bugtraq/2011/May/84");
  script_set_attribute(attribute:"see_also", value:"http://seclists.org/bugtraq/2011/May/99");
  script_set_attribute(attribute:"see_also", value:"http://seclists.org/bugtraq/2011/May/83");
  script_set_attribute(attribute:"see_also", value:"http://seclists.org/bugtraq/2011/May/87");

  script_set_attribute(attribute:"solution", value:"Upgrade to 5.0_E0101L02 or later.");
  script_set_cvss_base_vector("CVSS2#AV:N/AC:L/Au:N/C:C/I:C/A:C");
  script_set_cvss_temporal_vector("CVSS2#E:U/RL:OF/RC:C");
  script_set_attribute(attribute:"exploitability_ease", value:"No known exploits are available");
  script_set_attribute(attribute:"exploit_available", value:"false");

  script_set_attribute(attribute:"plugin_publication_date", value:"2011/06/07");

  script_set_attribute(attribute:"cpe", value:"cpe:/a:hp:intelligent_management_center");
  script_set_attribute(attribute:"plugin_type", value:"remote");

  script_end_attributes();

  script_category(ACT_ATTACK);
  script_copyright(english:"This script is Copyright (C) 2011-2016 Tenable Network Security, Inc.");
  script_family(english:"Gain a shell remotely");

  script_require_ports(69);
  exit(0);
}

include("audit.inc");
include("global_settings.inc");
include("byte_func.inc");
include("misc_func.inc");

TFTP_RRQ   = 1;
TFTP_WRQ   = 2;
TFTP_DATA  = 3;
TFTP_ACK   = 4;
TFTP_ERROR = 5;

# Attempt to send/receive data from the server.
function send_recv(s, data)
{
  local_var i, response;

  send(socket:s, data:data);
  response = recv(socket:s, length:0xFFFF);
  if(isnull(response))
    exit(1, "Couldn't receive data from the server");

  return response;
}


port = 69;
if (!get_udp_port_state(port)) audit(AUDIT_PORT_CLOSED, port, "UDP");

text1 = 'This is a test file generated by the Nessus Security Scanner. It is safe to delete.\r\n\r\n';
text2 = '(' + unixtime() + ') if this is written to the file, there\'s likely a vulnerability\r\n\r\n';

# Unless they've asked for paranoid reports, verify that the default file
# (license.txt) exists on the server.
if (report_paranoia < 2)
{
  s = open_sock_udp(port);
  if (!s) audit(AUDIT_SOCK_FAIL, port, "UDP");

  data = send_recv(s:s, data:mkword(TFTP_RRQ) + 'License.txt\x00octet\x00');
  if ("READ BEFORE INSTALLING THE SOFTWARE" >!< data)
    exit(1, "The TFTP server on UDP port "+port+" doesn't appear to be from HP Intelligent Management Center.");

  close(s);
}

# Create the connection
s = open_sock_udp(port);
if (!s) audit(AUDIT_SOCK_FAIL, port, "UDP");

# Send the WRQ (write request)
data = send_recv(s:s, data:mkword(TFTP_WRQ) + 'nessus-test.txt\x00octet\x00');
if (getword(blob:data, pos:0) != 0x0004 || getword(blob:data, pos:2) != 0x0000)
  exit(1, "The TFTP server on UDP port "+port+" returned an unexpected response to our WRQ request.");

# This is purely informational, in case somebody finds the test file we have to create
data = send_recv(s:s, data:mkword(TFTP_DATA) + '\x00\x01' + text1);
if (getword(blob:data, pos:0) != TFTP_ACK || getword(blob:data, pos:2) != 0x0001)
  exit(1, "The TFTP server on UDP port "+port+" returned an unexpected response to our DATA request.");

# This sends data block 0, which is invalid. It comes before the first possible
# block. A vulnerable server will accept it with an ACK, and a patched server
# will reject with an ERROR.
data = send_recv(s:s, data:mkword(TFTP_DATA) + '\x00\x00' + text2);
if (isnull(data)) exit(1, "The TFTP server on UDP port "+port+" closed the connection.");

# Check if the response is an ACK
if (getword(blob:data, pos:0) == TFTP_ACK && getword(blob:data, pos:2) == 0x0000)
{
  # If it is successfully written, do a read to verify (an extra defense
  # against potential false positives)
  data = send_recv(s:s, data:mkword(TFTP_RRQ) + 'nessus-test.txt\x00octet\x00');
  close(s);

  if ((text1 + text2) >!< data)
    exit(1, "The TFTP server on UDP port "+port+" appeared to accept our request, but didn't write it to the file.");

  security_hole(port:port, proto:"udp");
}
else if(getword(blob:data, pos:0) == TFTP_ERROR && getword(blob:data, pos:2) == 0x0001)
{
  close(s);
  exit(0, "The TFTP server on UDP port " + port + " is not affected.");

}
else
{
  close(s);
  exit(1, "The TFTP server on UDP port "+port+" responded to our probe in an unknown way.");
}
