#
# (C) Tenable Network Security, Inc.
#
# The descriptive text is (C) Scientific Linux.
#

include("compat.inc");

if (description)
{
  script_id(85207);
  script_version("$Revision: 2.2 $");
  script_cvs_date("$Date: 2017/05/05 13:31:48 $");

  script_cve_id("CVE-2014-9680");

  script_name(english:"Scientific Linux Security Update : sudo on SL6.x i386/x86_64");
  script_summary(english:"Checks rpm output for the updated packages");

  script_set_attribute(
    attribute:"synopsis", 
    value:
"The remote Scientific Linux host is missing one or more security
updates."
  );
  script_set_attribute(
    attribute:"description", 
    value:
"It was discovered that sudo did not perform any checks of the TZ
environment variable value. If sudo was configured to preserve the TZ
environment variable, a local user with privileges to execute commands
via sudo could possibly use this flaw to achieve system state changes
not permitted by the configured commands. (CVE-2014-9680)

Note: The default sudoers configuration in Scientific Linux 6 removes
the TZ variable from the environment in which commands run by sudo are
executed.

This update also fixes the following bugs :

  - Previously, the sudo utility child processes could
    sometimes become unresponsive because they ignored the
    SIGPIPE signal. With this update, SIGPIPE handler is
    properly restored in the function that reads passwords
    from the user, and the child processes no longer ignore
    SIGPIPE. As a result, sudo child processes do not hang
    in this situation.

  - Prior to this update, the order in which sudo rules were
    processed did not honor the user-defined sudoOrder
    attribute. Consequently, sudo rules were processed in an
    undefined order even when the user defined the order in
    sudoOrder. The implementation of SSSD support in sudo
    has been modified to sort the rules according to the
    sudoOrder value, and sudo rules are now sorted in the
    order defined by the user in sudoOrder.

  - Previously, sudo became unresponsive after the user
    issued a command when a sudoers source was mentioned
    multiple times in the /etc/nsswitch.conf file. The
    problem occurred when nsswitch.conf contained, for
    example, the 'sudoers: files sss sss' entry. The sudoers
    source processing code has been fixed to correctly
    handle multiple instances of the same sudoers source. As
    a result, sudo no longer hangs when a sudoers source is
    mentioned multiple times in /etc/nsswitch.conf.

In addition, this update adds the following enhancement :

  - The sudo utility now supports I/O logs compressed using
    the zlib library. With this update, sudo can generate
    zlib compressed I/O logs and also process zlib
    compressed I/O logs generated by other versions of sudo
    with zlib support."
  );
  # http://listserv.fnal.gov/scripts/wa.exe?A2=ind1508&L=scientific-linux-errata&F=&S=&P=2462
  script_set_attribute(
    attribute:"see_also",
    value:"http://www.nessus.org/u?273aa3f3"
  );
  script_set_attribute(
    attribute:"solution", 
    value:"Update the affected sudo, sudo-debuginfo and / or sudo-devel packages."
  );
  script_set_cvss_base_vector("CVSS2#AV:L/AC:L/Au:N/C:P/I:N/A:N");

  script_set_attribute(attribute:"plugin_type", value:"local");
  script_set_attribute(attribute:"cpe", value:"x-cpe:/o:fermilab:scientific_linux");

  script_set_attribute(attribute:"patch_publication_date", value:"2015/07/22");
  script_set_attribute(attribute:"plugin_publication_date", value:"2015/08/04");
  script_end_attributes();

  script_category(ACT_GATHER_INFO);
  script_copyright(english:"This script is Copyright (C) 2015-2017 Tenable Network Security, Inc.");
  script_family(english:"Scientific Linux Local Security Checks");

  script_dependencies("ssh_get_info.nasl");
  script_require_keys("Host/local_checks_enabled", "Host/cpu", "Host/RedHat/release", "Host/RedHat/rpm-list");

  exit(0);
}


include("audit.inc");
include("global_settings.inc");
include("rpm.inc");


if (!get_kb_item("Host/local_checks_enabled")) audit(AUDIT_LOCAL_CHECKS_NOT_ENABLED);
release = get_kb_item("Host/RedHat/release");
if (isnull(release) || "Scientific Linux " >!< release) audit(AUDIT_HOST_NOT, "running Scientific Linux");
if (!get_kb_item("Host/RedHat/rpm-list")) audit(AUDIT_PACKAGE_LIST_MISSING);

cpu = get_kb_item("Host/cpu");
if (isnull(cpu)) audit(AUDIT_UNKNOWN_ARCH);
if (cpu >!< "x86_64" && cpu !~ "^i[3-6]86$") audit(AUDIT_LOCAL_CHECKS_NOT_IMPLEMENTED, "Scientific Linux", cpu);


flag = 0;
if (rpm_check(release:"SL6", reference:"sudo-1.8.6p3-19.el6")) flag++;
if (rpm_check(release:"SL6", reference:"sudo-debuginfo-1.8.6p3-19.el6")) flag++;
if (rpm_check(release:"SL6", reference:"sudo-devel-1.8.6p3-19.el6")) flag++;


if (flag)
{
  if (report_verbosity > 0) security_note(port:0, extra:rpm_report_get());
  else security_note(0);
  exit(0);
}
else audit(AUDIT_HOST_NOT, "affected");
